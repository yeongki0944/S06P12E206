/*! For license information please see LICENSES */
(window.webpackJsonp=window.webpackJsonp||[]).push([[3],Array(366).concat([function(e,t,n){"use strict";n.d(t,"ec",(function(){return Ke})),n.d(t,"cd",(function(){return ie.a})),n.d(t,"dd",(function(){return ie.b})),n.d(t,"lf",(function(){return Xe.a})),n.d(t,"xf",(function(){return Xe.b})),n.d(t,"nd",(function(){return Ye.a})),n.d(t,"od",(function(){return Ye.b})),n.d(t,"pd",(function(){return Ye.c})),n.d(t,"qd",(function(){return Ye.d})),n.d(t,"rd",(function(){return Ye.e})),n.d(t,"sd",(function(){return Ye.f})),n.d(t,"td",(function(){return Ye.g})),n.d(t,"wd",(function(){return Ye.h})),n.d(t,"xd",(function(){return Ye.i})),n.d(t,"yd",(function(){return Ye.j})),n.d(t,"Bd",(function(){return Ye.k})),n.d(t,"Cd",(function(){return Ye.l})),n.d(t,"Dd",(function(){return Ye.m})),n.d(t,"Ed",(function(){return Ye.n})),n.d(t,"Fd",(function(){return Ye.o})),n.d(t,"Gd",(function(){return Ye.p})),n.d(t,"Hd",(function(){return Ye.q})),n.d(t,"Id",(function(){return Ye.r})),n.d(t,"Jd",(function(){return Ye.s})),n.d(t,"Kd",(function(){return Ye.t})),n.d(t,"Ld",(function(){return Ye.u})),n.d(t,"Md",(function(){return Ye.v})),n.d(t,"Nd",(function(){return Ye.w})),n.d(t,"Od",(function(){return Ye.x})),n.d(t,"Pd",(function(){return Ye.y})),n.d(t,"Sd",(function(){return Ye.z})),n.d(t,"Ud",(function(){return Ye.B})),n.d(t,"Xd",(function(){return Ye.C})),n.d(t,"Yd",(function(){return Ye.D})),n.d(t,"Zd",(function(){return Ye.E})),n.d(t,"ae",(function(){return Ye.F})),n.d(t,"be",(function(){return Ye.G})),n.d(t,"ce",(function(){return Ye.H})),n.d(t,"ee",(function(){return Ye.J})),n.d(t,"fe",(function(){return Ye.K})),n.d(t,"ge",(function(){return Ye.L})),n.d(t,"le",(function(){return Ye.N})),n.d(t,"ne",(function(){return Ye.P})),n.d(t,"oe",(function(){return Ye.Q})),n.d(t,"pe",(function(){return Ye.R})),n.d(t,"qe",(function(){return Ye.S})),n.d(t,"re",(function(){return Ye.T})),n.d(t,"se",(function(){return Ye.U})),n.d(t,"te",(function(){return Ye.V})),n.d(t,"ue",(function(){return Ye.W})),n.d(t,"ve",(function(){return Ye.X})),n.d(t,"we",(function(){return Ye.Y})),n.d(t,"ye",(function(){return Ye.Z})),n.d(t,"ze",(function(){return Ye.ab})),n.d(t,"Ae",(function(){return Ye.bb})),n.d(t,"Be",(function(){return Ye.cb})),n.d(t,"De",(function(){return Ye.db})),n.d(t,"Ee",(function(){return Ye.eb})),n.d(t,"Fe",(function(){return Ye.fb})),n.d(t,"Ge",(function(){return Ye.gb})),n.d(t,"He",(function(){return Ye.hb})),n.d(t,"Ie",(function(){return Ye.ib})),n.d(t,"Je",(function(){return Ye.jb})),n.d(t,"Ke",(function(){return Ye.kb})),n.d(t,"Le",(function(){return Ye.lb})),n.d(t,"Oe",(function(){return Ye.mb})),n.d(t,"Pe",(function(){return Ye.nb})),n.d(t,"Qe",(function(){return Ye.ob})),n.d(t,"Re",(function(){return Ye.pb})),n.d(t,"Se",(function(){return Ye.qb})),n.d(t,"Te",(function(){return Ye.rb})),n.d(t,"We",(function(){return Ye.sb})),n.d(t,"Xe",(function(){return Ye.tb})),n.d(t,"Ye",(function(){return Ye.ub})),n.d(t,"Ze",(function(){return Ye.vb})),n.d(t,"af",(function(){return Ye.wb})),n.d(t,"bf",(function(){return Ye.xb})),n.d(t,"df",(function(){return Ye.yb})),n.d(t,"ef",(function(){return Ye.zb})),n.d(t,"ff",(function(){return Ye.Bb})),n.d(t,"gf",(function(){return Ye.Cb})),n.d(t,"hf",(function(){return Ye.Db})),n.d(t,"if",(function(){return Ye.Eb})),n.d(t,"jf",(function(){return Ye.Gb})),n.d(t,"kf",(function(){return Ye.Hb})),n.d(t,"mf",(function(){return Ye.Ib})),n.d(t,"nf",(function(){return Ye.Jb})),n.d(t,"of",(function(){return Ye.Kb})),n.d(t,"pf",(function(){return Ye.Lb})),n.d(t,"sf",(function(){return Ye.Mb})),n.d(t,"vf",(function(){return Ye.Ob})),n.d(t,"wf",(function(){return Ye.Pb})),n.d(t,"zf",(function(){return Ye.Qb})),n.d(t,"Cf",(function(){return Ye.Rb})),n.d(t,"Df",(function(){return Ye.Sb})),n.d(t,"Ef",(function(){return Ye.Tb})),n.d(t,"uf",(function(){return Ye.Nb})),n.d(t,"Td",(function(){return Ye.A})),n.d(t,"he",(function(){return Ye.M})),n.d(t,"me",(function(){return Ye.O})),n.d(t,"de",(function(){return Ye.I})),n.d(t,"tf",(function(){return bt})),n.d(t,"Vd",(function(){return Ge.c})),n.d(t,"xe",(function(){return Ge.e})),n.d(t,"rf",(function(){return Ge.h})),n.d(t,"Rd",(function(){return Ge.b})),n.d(t,"je",(function(){return Ge.d})),n.d(t,"Ve",(function(){return Ge.g})),n.d(t,"Me",(function(){return Ge.f})),n.d(t,"ud",(function(){return Ge.a})),n.d(t,"Ne",(function(){return Te.e})),n.d(t,"Af",(function(){return He.b})),n.d(t,"Wd",(function(){return m.b})),n.d(t,"Bf",(function(){return Ve})),n.d(t,"Ce",(function(){return gt.a})),n.d(t,"Ad",(function(){return o})),n.d(t,"ie",(function(){return r})),n.d(t,"Ue",(function(){return c})),n.d(t,"yf",(function(){return Ue})),n.d(t,"vd",(function(){return d})),n.d(t,"zd",(function(){return Ne})),n.d(t,"qf",(function(){return We})),n.d(t,"cf",(function(){return ze})),n.d(t,"Qd",(function(){return wn})),n.d(t,"ke",(function(){return h})),n.d(t,"xb",(function(){return Sn.b})),n.d(t,"M",(function(){return Sn.a})),n.d(t,"a",(function(){return je.a})),n.d(t,"b",(function(){return je.b})),n.d(t,"c",(function(){return je.c})),n.d(t,"d",(function(){return je.d})),n.d(t,"e",(function(){return je.e})),n.d(t,"f",(function(){return je.f})),n.d(t,"g",(function(){return je.g})),n.d(t,"h",(function(){return je.h})),n.d(t,"i",(function(){return je.i})),n.d(t,"j",(function(){return je.j})),n.d(t,"k",(function(){return je.k})),n.d(t,"l",(function(){return je.l})),n.d(t,"n",(function(){return je.n})),n.d(t,"m",(function(){return je.m})),n.d(t,"o",(function(){return je.o})),n.d(t,"r",(function(){return je.r})),n.d(t,"p",(function(){return je.p})),n.d(t,"q",(function(){return je.q})),n.d(t,"s",(function(){return je.s})),n.d(t,"t",(function(){return je.t})),n.d(t,"u",(function(){return je.u})),n.d(t,"v",(function(){return je.v})),n.d(t,"w",(function(){return je.x})),n.d(t,"x",(function(){return je.y})),n.d(t,"y",(function(){return je.z})),n.d(t,"z",(function(){return je.A})),n.d(t,"A",(function(){return je.B})),n.d(t,"B",(function(){return je.C})),n.d(t,"C",(function(){return je.D})),n.d(t,"D",(function(){return je.E})),n.d(t,"E",(function(){return je.F})),n.d(t,"F",(function(){return je.G})),n.d(t,"G",(function(){return je.H})),n.d(t,"H",(function(){return je.I})),n.d(t,"I",(function(){return je.J})),n.d(t,"J",(function(){return je.K})),n.d(t,"L",(function(){return je.M})),n.d(t,"K",(function(){return je.L})),n.d(t,"N",(function(){return je.N})),n.d(t,"O",(function(){return je.O})),n.d(t,"P",(function(){return je.P})),n.d(t,"Q",(function(){return je.Q})),n.d(t,"R",(function(){return je.R})),n.d(t,"S",(function(){return je.S})),n.d(t,"T",(function(){return je.T})),n.d(t,"V",(function(){return je.V})),n.d(t,"U",(function(){return je.U})),n.d(t,"mc",(function(){return je.lc})),n.d(t,"W",(function(){return je.W})),n.d(t,"X",(function(){return je.X})),n.d(t,"Y",(function(){return je.Y})),n.d(t,"ab",(function(){return je.ab})),n.d(t,"Z",(function(){return je.Z})),n.d(t,"bb",(function(){return je.bb})),n.d(t,"cb",(function(){return je.cb})),n.d(t,"db",(function(){return je.db})),n.d(t,"eb",(function(){return je.eb})),n.d(t,"fb",(function(){return je.fb})),n.d(t,"gb",(function(){return je.gb})),n.d(t,"hb",(function(){return je.hb})),n.d(t,"ib",(function(){return je.ib})),n.d(t,"kb",(function(){return je.kb})),n.d(t,"ob",(function(){return je.ob})),n.d(t,"nb",(function(){return je.nb})),n.d(t,"pb",(function(){return je.pb})),n.d(t,"qb",(function(){return je.qb})),n.d(t,"sb",(function(){return je.sb})),n.d(t,"rb",(function(){return je.rb})),n.d(t,"tb",(function(){return je.tb})),n.d(t,"ub",(function(){return je.ub})),n.d(t,"vb",(function(){return je.vb})),n.d(t,"wb",(function(){return je.wb})),n.d(t,"Ab",(function(){return je.zb})),n.d(t,"Bb",(function(){return je.Ab})),n.d(t,"Cb",(function(){return je.Bb})),n.d(t,"Db",(function(){return je.Cb})),n.d(t,"Eb",(function(){return je.Db})),n.d(t,"Fb",(function(){return je.Eb})),n.d(t,"Gb",(function(){return je.Gb})),n.d(t,"Hb",(function(){return je.Hb})),n.d(t,"Ib",(function(){return je.Ib})),n.d(t,"yb",(function(){return je.xb})),n.d(t,"zb",(function(){return je.yb})),n.d(t,"Jb",(function(){return je.Jb})),n.d(t,"Pb",(function(){return je.Pb})),n.d(t,"Kb",(function(){return je.Kb})),n.d(t,"Nb",(function(){return je.Nb})),n.d(t,"Lb",(function(){return je.Lb})),n.d(t,"Mb",(function(){return je.Mb})),n.d(t,"Ob",(function(){return je.Ob})),n.d(t,"Qb",(function(){return je.Qb})),n.d(t,"Rb",(function(){return je.Rb})),n.d(t,"Sb",(function(){return je.Sb})),n.d(t,"Tb",(function(){return je.Tb})),n.d(t,"Ub",(function(){return je.Ub})),n.d(t,"Vb",(function(){return je.Vb})),n.d(t,"Wb",(function(){return je.Wb})),n.d(t,"Xb",(function(){return je.Xb})),n.d(t,"bc",(function(){return je.bc})),n.d(t,"Yb",(function(){return je.Yb})),n.d(t,"Zb",(function(){return je.Zb})),n.d(t,"ac",(function(){return je.ac})),n.d(t,"dc",(function(){return je.dc})),n.d(t,"cc",(function(){return je.cc})),n.d(t,"fc",(function(){return je.ec})),n.d(t,"gc",(function(){return je.fc})),n.d(t,"hc",(function(){return je.gc})),n.d(t,"ic",(function(){return je.hc})),n.d(t,"jc",(function(){return je.ic})),n.d(t,"kc",(function(){return je.jc})),n.d(t,"lc",(function(){return je.kc})),n.d(t,"nc",(function(){return je.mc})),n.d(t,"oc",(function(){return je.nc})),n.d(t,"qc",(function(){return je.pc})),n.d(t,"tc",(function(){return je.sc})),n.d(t,"uc",(function(){return je.tc})),n.d(t,"rc",(function(){return je.qc})),n.d(t,"sc",(function(){return je.rc})),n.d(t,"pc",(function(){return je.oc})),n.d(t,"vc",(function(){return je.uc})),n.d(t,"xc",(function(){return je.wc})),n.d(t,"yc",(function(){return je.xc})),n.d(t,"zc",(function(){return je.yc})),n.d(t,"Ac",(function(){return je.zc})),n.d(t,"Bc",(function(){return je.Ac})),n.d(t,"Gc",(function(){return je.Fc})),n.d(t,"Ec",(function(){return je.Dc})),n.d(t,"Fc",(function(){return je.Ec})),n.d(t,"Dc",(function(){return je.Cc})),n.d(t,"Cc",(function(){return je.Bc})),n.d(t,"Ic",(function(){return je.Hc})),n.d(t,"Qc",(function(){return je.Pc})),n.d(t,"Zc",(function(){return je.Yc})),n.d(t,"Jc",(function(){return je.Ic})),n.d(t,"Pc",(function(){return je.Oc})),n.d(t,"Hc",(function(){return je.Gc})),n.d(t,"Kc",(function(){return je.Jc})),n.d(t,"Lc",(function(){return je.Kc})),n.d(t,"Mc",(function(){return je.Lc})),n.d(t,"Nc",(function(){return je.Mc})),n.d(t,"Oc",(function(){return je.Nc})),n.d(t,"Sc",(function(){return je.Rc})),n.d(t,"Rc",(function(){return je.Qc})),n.d(t,"Uc",(function(){return je.Tc})),n.d(t,"Vc",(function(){return je.Uc})),n.d(t,"Wc",(function(){return je.Vc})),n.d(t,"Xc",(function(){return je.Wc})),n.d(t,"Yc",(function(){return je.Xc})),n.d(t,"ad",(function(){return je.Zc})),n.d(t,"bd",(function(){return je.ad})),n.d(t,"ed",(function(){return je.bd})),n.d(t,"fd",(function(){return je.cd})),n.d(t,"gd",(function(){return je.dd})),n.d(t,"hd",(function(){return je.ed})),n.d(t,"id",(function(){return je.fd})),n.d(t,"jd",(function(){return je.gd})),n.d(t,"kd",(function(){return je.hd})),n.d(t,"ld",(function(){return je.id})),n.d(t,"Tc",(function(){return je.Sc})),n.d(t,"jb",(function(){return je.jb})),n.d(t,"wc",(function(){return je.vc})),n.d(t,"md",(function(){return je.jd})),n.d(t,"lb",(function(){return je.lb})),n.d(t,"mb",(function(){return je.mb}));var r={};n.r(r),n.d(r,"copyModel",(function(){return Q})),n.d(r,"listModels",(function(){return Z})),n.d(r,"moveModel",(function(){return ee})),n.d(r,"removeModel",(function(){return J})),n.d(r,"browserFiles",(function(){return de})),n.d(r,"browserHTTPRequest",(function(){return Oe})),n.d(r,"concatenateArrayBuffers",(function(){return y.d})),n.d(r,"decodeWeights",(function(){return y.e})),n.d(r,"encodeWeights",(function(){return y.f})),n.d(r,"fromMemory",(function(){return Ie})),n.d(r,"getLoadHandlers",(function(){return k})),n.d(r,"getModelArtifactsForJSON",(function(){return y.g})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return y.h})),n.d(r,"getSaveHandlers",(function(){return w})),n.d(r,"http",(function(){return ve})),n.d(r,"isHTTPScheme",(function(){return ye})),n.d(r,"loadWeights",(function(){return me})),n.d(r,"registerLoadRouter",(function(){return O})),n.d(r,"registerSaveRouter",(function(){return v})),n.d(r,"weightsLoaderFactory",(function(){return be})),n.d(r,"withSaveHandler",(function(){return Se}));var o={};n.r(o),n.d(o,"fromPixelsAsync",(function(){return De})),n.d(o,"toPixels",(function(){return _e})),n.d(o,"fromPixels",(function(){return Me}));var c={};n.r(c),n.d(c,"Serializable",(function(){return Le})),n.d(c,"SerializationMap",(function(){return Pe})),n.d(c,"registerClass",(function(){return Be}));var l={};n.r(l),n.d(l,"segOpComputeOptimalWindowSize",(function(){return gn})),n.d(l,"computeOutShape",(function(){return yn})),n.d(l,"collectGatherOpShapeInfo",(function(){return xn}));var d={};n.r(d),n.d(d,"axesAreInnerMostDims",(function(){return yt.b})),n.d(d,"combineLocations",(function(){return yt.c})),n.d(d,"computeOutAndReduceShapes",(function(){return yt.d})),n.d(d,"expandShapeToKeepDim",(function(){return yt.e})),n.d(d,"assertAxesAreInnerMostDims",(function(){return yt.a})),n.d(d,"getAxesPermutation",(function(){return yt.f})),n.d(d,"getUndoAxesPermutation",(function(){return yt.h})),n.d(d,"getInnerMostAxes",(function(){return yt.g})),n.d(d,"getBroadcastDims",(function(){return Ne.getBroadcastDims})),n.d(d,"getReductionAxes",(function(){return Ne.getReductionAxes})),n.d(d,"assertAndGetBroadcastShape",(function(){return Ne.assertAndGetBroadcastShape})),n.d(d,"assertParamsConsistent",(function(){return xt})),n.d(d,"computeOutShape",(function(){return vt})),n.d(d,"computeDilation2DInfo",(function(){return Ot.e})),n.d(d,"computePool2DInfo",(function(){return Ot.f})),n.d(d,"computePool3DInfo",(function(){return Ot.g})),n.d(d,"computeConv2DInfo",(function(){return Ot.b})),n.d(d,"computeConv3DInfo",(function(){return Ot.c})),n.d(d,"computeDefaultPad",(function(){return Ot.d})),n.d(d,"tupleValuesAreOne",(function(){return Ot.j})),n.d(d,"eitherStridesOrDilationsAreOne",(function(){return Ot.i})),n.d(d,"convertConv2DDataFormat",(function(){return Ot.h})),n.d(d,"checkPadOnDimRoundingMode",(function(){return Ot.a})),n.d(d,"getFusedDyActivation",(function(){return wt.c})),n.d(d,"getFusedBiasGradient",(function(){return wt.b})),n.d(d,"applyActivation",(function(){return wt.a})),n.d(d,"shouldFuse",(function(){return wt.d})),n.d(d,"PARALLELIZE_THRESHOLD",(function(){return kt})),n.d(d,"computeOptimalWindowSize",(function(){return It})),n.d(d,"slice_util",(function(){return ze})),n.d(d,"upcastType",(function(){return Xe.b})),n.d(d,"getImageCenter",(function(){return St})),n.d(d,"getReshaped",(function(){return Nt})),n.d(d,"getPermuted",(function(){return jt})),n.d(d,"getReshapedPermuted",(function(){return Tt})),n.d(d,"getSliceBeginCoords",(function(){return Ct})),n.d(d,"getSliceSize",(function(){return $t})),n.d(d,"prepareAndValidate",(function(){return Et})),n.d(d,"validateUpdateShape",(function(){return At.c})),n.d(d,"validateInput",(function(){return At.b})),n.d(d,"calculateShapes",(function(){return At.a})),n.d(d,"SELU_SCALEALPHA",(function(){return Rt.b})),n.d(d,"SELU_SCALE",(function(){return Rt.a})),n.d(d,"ERF_P",(function(){return Ft})),n.d(d,"ERF_A1",(function(){return Dt})),n.d(d,"ERF_A2",(function(){return _t})),n.d(d,"ERF_A3",(function(){return Mt})),n.d(d,"ERF_A4",(function(){return zt})),n.d(d,"ERF_A5",(function(){return Lt})),n.d(d,"warn",(function(){return Pt.b})),n.d(d,"log",(function(){return Pt.a})),n.d(d,"mergeRealAndImagArrays",(function(){return Bt})),n.d(d,"splitRealAndImagArrays",(function(){return Wt})),n.d(d,"complexWithEvenIndex",(function(){return Ut})),n.d(d,"complexWithOddIndex",(function(){return Vt})),n.d(d,"getComplexWithIndex",(function(){return Gt})),n.d(d,"assignToTypedArray",(function(){return Ht})),n.d(d,"exponents",(function(){return qt})),n.d(d,"exponent",(function(){return Kt})),n.d(d,"decodeEinsumEquation",(function(){return Zt})),n.d(d,"getEinsumPermutation",(function(){return Jt})),n.d(d,"checkEinsumDimSizes",(function(){return Qt})),n.d(d,"getEinsumComputePath",(function(){return en})),n.d(d,"isIdentityPermutation",(function(){return tn})),n.d(d,"prepareSplitSize",(function(){return rn})),n.d(d,"getSparseFillEmptyRowsIndicesDenseShapeMismatch",(function(){return an})),n.d(d,"getSparseFillEmptyRowsNegativeIndexErrorMessage",(function(){return sn})),n.d(d,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage",(function(){return on})),n.d(d,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage",(function(){return un})),n.d(d,"getSparseReshapeNegativeOutputDimErrorMessage",(function(){return cn})),n.d(d,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage",(function(){return ln})),n.d(d,"getSparseReshapeInputOutputMultipleErrorMessage",(function(){return dn})),n.d(d,"getSparseReshapeInputOutputMismatchErrorMessage",(function(){return hn})),n.d(d,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage",(function(){return pn})),n.d(d,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage",(function(){return fn})),n.d(d,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage",(function(){return mn})),n.d(d,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage",(function(){return bn})),n.d(d,"segment_util",(function(){return l})),n.d(d,"fromUint8ToStringArray",(function(){return vn})),n.d(d,"fromStringArrayToUint8",(function(){return On}));var h={};n.r(h),n.d(h,"nonMaxSuppressionV3Impl",(function(){return kn.a})),n.d(h,"nonMaxSuppressionV4Impl",(function(){return kn.b})),n.d(h,"nonMaxSuppressionV5Impl",(function(){return kn.c})),n.d(h,"whereImpl",(function(){return In.a}));var f=n(371),m=(n(969),n(445)),y=n(550);class x{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==x.instance&&(x.instance=new x),x.instance}static registerSaveRouter(e){x.getInstance().saveRouters.push(e)}static registerLoadRouter(e){x.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return x.getHandlers(e,"save")}static getLoadHandlers(e,t){return x.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?x.getInstance().loadRouters:x.getInstance().saveRouters).forEach((t=>{const o=t(e,n);null!==o&&r.push(o)})),r}}const v=e=>x.registerSaveRouter(e),O=e=>x.registerLoadRouter(e),w=e=>x.getSaveHandlers(e),k=(e,t)=>x.getLoadHandlers(e,t),I="tensorflowjs",S="models_store",N="model_info_store";function j(){if(!Object(m.b)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function T(e){const t=e.result;t.createObjectStore(S,{keyPath:"modelPath"}),t.createObjectStore(N,{keyPath:"modelPath"})}class C{constructor(e){if(this.indexedDB=j(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(I,1);r.onupgradeneeded=()=>T(r),r.onsuccess=()=>{const o=r.result;if(null==t){const t=o.transaction(S,"readonly"),r=t.objectStore(S).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return o.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(o.close(),n(r.error)),t.oncomplete=()=>o.close()}else{const r=Object(y.h)(t),c=o.transaction(N,"readwrite");let l=c.objectStore(N);const d=l.put({modelPath:this.modelPath,modelArtifactsInfo:r});let h;d.onsuccess=()=>{h=o.transaction(S,"readwrite");const d=h.objectStore(S).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});d.onsuccess=()=>e({modelArtifactsInfo:r}),d.onerror=e=>{l=c.objectStore(N);const t=l.delete(this.modelPath);t.onsuccess=()=>(o.close(),n(d.error)),t.onerror=e=>(o.close(),n(d.error))}},d.onerror=e=>(o.close(),n(d.error)),c.oncomplete=()=>{null==h?o.close():h.oncomplete=()=>o.close()}}},r.onerror=e=>n(r.error)}))}}C.URL_SCHEME="indexeddb://";const $=e=>{return Object(m.b)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(C.URL_SCHEME)?(t=e.slice(C.URL_SCHEME.length),new C(t)):null;var t};x.registerSaveRouter($),x.registerLoadRouter($);class E{constructor(){this.indexedDB=j()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(I,1);n.onupgradeneeded=()=>T(n),n.onsuccess=()=>{const r=n.result,o=r.transaction(N,"readonly"),c=o.objectStore(N).getAll();c.onsuccess=()=>{const t={};for(const e of c.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},c.onerror=e=>(r.close(),t(c.error)),o.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(path){var e;return path=(e=path).startsWith(C.URL_SCHEME)?e.slice(C.URL_SCHEME.length):e,new Promise(((e,t)=>{const n=this.indexedDB.open(I,1);n.onupgradeneeded=()=>T(n),n.onsuccess=()=>{const r=n.result,o=r.transaction(N,"readwrite"),c=o.objectStore(N),l=c.get(path);let d;l.onsuccess=()=>{if(null==l.result)return r.close(),t(new Error(`Cannot find model with path '${path}' in IndexedDB.`));{const n=c.delete(path),o=()=>{d=r.transaction(S,"readwrite");const n=d.objectStore(S).delete(path);n.onsuccess=()=>e(l.result.modelArtifactsInfo),n.onerror=e=>t(l.error)};n.onsuccess=o,n.onerror=e=>(o(),r.close(),t(l.error))}},l.onerror=e=>(r.close(),t(l.error)),o.oncomplete=()=>{null==d?r.close():d.oncomplete=()=>r.close()}},n.onerror=e=>t(n.error)}))}}var A=n(967);const R="/",F="tensorflowjs_models",D="info",_="model_topology",M="weight_specs",z="weight_data",L="model_metadata";function P(path){return{info:[F,path,D].join(R),topology:[F,path,_].join(R),weightSpecs:[F,path,M].join(R),weightData:[F,path,z].join(R),modelMetadata:[F,path,L].join(R)}}function B(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function W(e){const t=e.split(R);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(R)}class U{constructor(e){if(!Object(m.b)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=P(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Object(y.h)(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,Object(y.a)(e.weightData));const o={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o)),{modelArtifactsInfo:r}}catch(e){throw B(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(null!=o){const e=JSON.parse(o);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const c=this.LS.getItem(this.keys.weightData);if(null==c)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Object(y.b)(c),t}}U.URL_SCHEME="localstorage://";const V=e=>{return Object(m.b)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(U.URL_SCHEME)?(t=e.slice(U.URL_SCHEME.length),new U(t)):null;var t};x.registerSaveRouter(V),x.registerLoadRouter(V);class G{constructor(){Object(A.b)(Object(m.b)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Object(A.b)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=F+R,n=R+D;for(let i=0;i<this.LS.length;++i){const r=this.LS.key(i);if(r.startsWith(t)&&r.endsWith(n)){e[W(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(path){var e;const t=P(path=(e=path).startsWith(U.URL_SCHEME)?e.slice(U.URL_SCHEME.length):e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${path}'`);const n=JSON.parse(this.LS.getItem(t.info));return B(t),n}}const H="://";class K{constructor(){this.managers={}}static getInstance(){return null==K.instance&&(K.instance=new K),K.instance}static registerManager(e,t){Object(A.b)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(H)&&(e=e.slice(0,e.indexOf(H))),Object(A.b)(e.length>0,(()=>"scheme must not be an empty string."));const n=K.getInstance();Object(A.b)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function X(e){if(-1===e.indexOf(H))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${K.getSchemes().join(",")}`);return{scheme:e.split(H)[0],path:e.split(H)[1]}}async function Y(e,t,n=!1){Object(A.b)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=x.getLoadHandlers(e);Object(A.b)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Object(A.b)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const o=r[0],c=x.getSaveHandlers(t);Object(A.b)(c.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Object(A.b)(c.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const l=c[0],d=X(e).scheme,h=X(e).path,f=d===X(e).scheme,m=await o.load();n&&f&&await K.getManager(d).removeModel(h);const y=await l.save(m);return n&&!f&&await K.getManager(d).removeModel(h),y.modelArtifactsInfo}async function Z(){const e=K.getSchemes(),t={};for(const n of e){const e=await K.getManager(n).listModels();for(const path in e){t[n+H+path]=e[path]}}return t}async function J(e){const t=X(e);return K.getManager(t.scheme).removeModel(t.path)}async function Q(e,t){return Y(e,t,!1)}async function ee(e,t){return Y(e,t,!0)}class te{fetch(path,e){return fetch(path,e)}now(){return performance.now()}encode(text,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(text)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Object(m.b)().get("IS_BROWSER")){Object(m.b)().setPlatform("browser",new te);try{K.registerManager(U.URL_SCHEME,new G)}catch(e){}try{K.registerManager(C.URL_SCHEME,new E)}catch(e){}}n(1277);var ne=n(784),re=n(391),ae=n(813),se=n(1073),ie=n(373);Object(f.b)();const oe={buffer:ne.a,cast:re.a,clone:ae.a,print:se.a};Object(ie.f)(oe);function ue(e){return new Promise((e=>setTimeout(e))).then(e)}class ce{constructor(e){if(!Object(m.b)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ce.URL_SCHEME)&&(e=e.slice(ce.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=Object(y.i)(e,n),o=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),c=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(c.download=this.modelJsonFileName,c.href=o,await ue((()=>c.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await ue((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Object(y.h)(e)}}}}ce.URL_SCHEME="downloads://";class le{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),o=r.modelTopology;if(null==o)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:o});const c=Object(y.g)(r,(e=>this.loadWeights(e)));e(c)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),o=n.map((path=>this.loadWeightsFile(path,r[path])));return Promise.all(o).then((e=>[t,Object(y.d)(e)]))}loadWeightsFile(path,e){return new Promise(((t,n)=>{const r=new FileReader;r.onload=e=>{const n=e.target.result;t(n)},r.onerror=e=>n(`Failed to weights data from file of path '${path}'.`),r.readAsArrayBuffer(e)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Object(y.c)(e.name))),r={};for(const o of e)o.paths.forEach((path=>{const e=Object(y.c)(path);if(-1!==t.indexOf(e))throw new Error(`Duplicate file basename found in weights manifest: '${e}'`);if(t.push(e),-1===n.indexOf(e))throw new Error(`Weight file with basename '${e}' is not provided.`);r[path]=this.weightsFiles[n.indexOf(e)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function de(e){return new le(e)}function he(e,t,n,r){!function(e){Object(A.b)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){Object(A.b)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Object(A.b)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Object(A.b)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let o=0;return Promise.all(e.map((c=>(c.then((c=>{const l=n+ ++o/e.length*(r-n);return t(l),c})),c))))}x.registerSaveRouter((e=>Object(m.b)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ce.URL_SCHEME)?function(e="model"){return new ce(e)}(e.slice(ce.URL_SCHEME.length)):null));var pe=n(1137);async function fe(e,t){null==t&&(t={});const n=null==t.fetchFunc?Object(m.b)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),o=(null==t.onProgress?await Promise.all(r):await he(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(o):await he(o,t.onProgress,.5,1)}async function me(e,t="",n,r){return be((e=>fe(e,{requestInit:r})))(e,t,n)}function be(e){return async(t,n="",r)=>{const o=t.map((()=>!1)),c={},l=null!=r?r.map((()=>!1)):[],d=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const h="quantization"in e?e.quantization.dtype:e.dtype,f=pe.a[h]*A.O(e.shape),m=()=>{o[t]=!0,null==c[t]&&(c[t]=[]),c[t].push({manifestEntry:e,groupOffset:n,sizeBytes:f})};null!=r?r.forEach(((t,n)=>{t===e.name&&(m(),l[n]=!0)})):m(),d.push(e.name),n+=f}))})),!l.every((e=>e))){const e=r.filter(((e,i)=>!l[i]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${d.join(", ")}.`)}const h=o.reduce(((e,t,i)=>(t&&e.push(i),e)),[]),f=[];h.forEach((i=>{t[i].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;f.push(t)}))}));const m=await e(f),x={};let v=0;return h.forEach((i=>{const e=t[i].paths.length;let n=0;for(let i=0;i<e;i++)n+=m[v+i].byteLength;const r=new ArrayBuffer(n),o=new Uint8Array(r);let l=0;for(let i=0;i<e;i++){const e=new Uint8Array(m[v+i]);o.set(e,l),l+=e.byteLength}c[i].forEach((e=>{const t=r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=Object(y.e)(t,[e.manifestEntry]);for(const e in n)x[e]=n[e]})),v+=e})),x}}class ge{constructor(path,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(Object(A.b)("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=Object(m.b)().platform.fetch,Object(A.b)(null!=path&&path.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(path)&&Object(A.b)(2===path.length,(()=>`URL paths for http must have a length of 2, (actual length is ${path.length}).`)),this.path=path,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=Object(y.i)(e,n);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:Object(y.h)(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Object(y.g)(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),o=n>t?e.substring(n):"";return[r+"/",o]}(t),o=this.weightPathPrefix||n,c=[];for(const t of e)c.push(...t.weights);const l=[],d=[];for(const t of e)for(const path of t.paths)null!=this.weightUrlConverter?d.push(this.weightUrlConverter(path)):l.push(o+path+r);this.weightUrlConverter&&l.push(...await Promise.all(d));const h=await fe(l,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[c,Object(y.d)(h)]}}function ye(e){return null!=e.match(ge.URL_SCHEME_REGEX)}ge.URL_SCHEME_REGEX=/^https?:\/\//;const xe=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>ye(e))):ye(e),n)return ve(e,t)}return null};function ve(path,e){return new ge(path,e)}function Oe(path,e){return ve(path,e)}x.registerSaveRouter(xe),x.registerLoadRouter(xe);class we{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class ke{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Ie(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new we(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new we({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new we({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function Se(e){return new ke(e)}var Ne=n(403),je=n(367),Te=n(968),Ce=n(370),$e=n(368),Ee=n(1092);let Ae;function Re(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,o=!1,c=!1,l=!1,d=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)o=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)c=!0;else if(null!=e.getContext)l=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);d=!0}if(o){const t=2;if(o&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Object(Te.b)(je.jb,f.a.backendName)){const n={pixels:e},r={numChannels:t};return f.a.runKernel(je.jb,n,r)}const[h,m]=o?[e.videoWidth,e.videoHeight]:[e.width,e.height];let y,x;if(l)y=e.getContext("2d").getImageData(0,0,h,m).data;else if(r||n)y=e.data;else if(c||o||d){if(null==Ae)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Ae=new OffscreenCanvas(1,1).getContext("2d")}else Ae=document.createElement("canvas").getContext("2d");Ae.canvas.width=h,Ae.canvas.height=m,Ae.drawImage(e,0,0,h,m),y=Ae.getImageData(0,0,h,m).data}if(4===t)x=new Int32Array(y);else{const e=h*m;x=new Int32Array(e*t);for(let i=0;i<e;i++)for(let e=0;e<t;++e)x[i*t+e]=y[4*i+e]}const v=[m,h,t];return Object(Ee.a)(x,v,"int32")}function Fe(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function De(e,t=3){let n=null;if(Object(m.b)().getBool("WRAP_TO_IMAGEBITMAP")&&Fe(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Re(n,t)}async function _e(img,canvas){let e=Object(Ce.a)(img,"img","toPixels");if(!(img instanceof ie.a)){const t=e;e=Object(re.a)(t,"int32"),t.dispose()}if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const[t,n]=e.shape.slice(0,2),r=2===e.rank?1:e.shape[2];if(r>4||2===r)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${r}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`);const data=await e.data(),o="float32"===e.dtype?255:1,c=new Uint8ClampedArray(n*t*4);for(let i=0;i<t*n;++i){const t=[0,0,0,255];for(let n=0;n<r;n++){const c=data[i*r+n];if("float32"===e.dtype){if(c<0||c>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${c}.`)}else if("int32"===e.dtype&&(c<0||c>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${c}.`);1===r?(t[0]=c*o,t[1]=c*o,t[2]=c*o):t[n]=c*o}const n=4*i;c[n+0]=Math.round(t[0]),c[n+1]=Math.round(t[1]),c[n+2]=Math.round(t[2]),c[n+3]=Math.round(t[3])}if(null!=canvas){canvas.width=n,canvas.height=t;const e=canvas.getContext("2d"),r=new ImageData(c,n,t);e.putImageData(r,0,0)}return e!==img&&e.dispose(),c}const Me=Object($e.a)({fromPixels_:Re});var ze=n(979);class Le{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Pe{constructor(){this.classNameMap={}}static getMap(){return null==Pe.instance&&(Pe.instance=new Pe),Pe.instance}static register(e){Pe.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Be(e){Object(A.b)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Object(A.b)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Object(A.b)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Pe.register(e)}var We=n(413),Ue=n(375);const Ve="3.13.0";var Ge=n(551),He=n(506),qe=n(409);class Ke extends Le{minimize(e,t=!1,n){const{value:r,grads:o}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:o[e.name]})));this.applyGradients(e)}else this.applyGradients(o);return Object(Ge.b)(o),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Object(He.b)(e,t)}dispose(){null!=this.iterations_&&Object(Ge.b)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(qe.a)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ke,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Xe=n(795),Ye=n(382),Ze=n(414),div=n(399),Je=n(380),Qe=n(553),et=n(426),tt=n(410);class nt extends Ke{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=f.a.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,i)=>{const n=f.a.registeredVariables[t];null==this.accumulatedGrads[i]&&(this.accumulatedGrads[i]={originalName:`${t}/accum_grad`,variable:Object(Ge.h)((()=>Object(tt.a)(n).variable(false)))}),null==this.accumulatedUpdates[i]&&(this.accumulatedUpdates[i]={originalName:`${t}/accum_var`,variable:Object(Ge.h)((()=>Object(tt.a)(n).variable(false)))});const r=Array.isArray(e)?e[i].tensor:e[t];if(null==r)return;const o=this.accumulatedGrads[i].variable,c=this.accumulatedUpdates[i].variable;Object(Ge.h)((()=>{const e=Object(Ze.a)(Object(Je.a)(o,this.rho),Object(Je.a)(Object(et.a)(r),1-this.rho)),t=Object(Je.a)(Object(div.a)(Object(Qe.a)(Object(Ze.a)(c,this.epsilon)),Object(Qe.a)(Object(Ze.a)(o,this.epsilon))),r),l=Object(Ze.a)(Object(Je.a)(c,this.rho),Object(Je.a)(Object(et.a)(t),1-this.rho));o.assign(e),c.assign(l);const d=Object(Ze.a)(Object(Je.a)(t,-this.learningRate),n);n.assign(d)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(Ge.b)(this.accumulatedGrads.map((e=>e.variable))),Object(Ge.b)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}nt.className="Adadelta",Be(nt);var at=n(974);class st extends Ke{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,i)=>{const n=f.a.registeredVariables[t];if(null==this.accumulatedGrads[i]){const e=!1;this.accumulatedGrads[i]={originalName:`${t}/accumulator`,variable:Object(Ge.h)((()=>Object(at.a)(n.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[i].tensor:e[t];if(null==r)return;const o=this.accumulatedGrads[i].variable;Object(Ge.h)((()=>{const e=Object(Ze.a)(o,Object(et.a)(r));o.assign(e);const t=Object(Ze.a)(Object(Je.a)(Object(div.a)(r,Object(Qe.a)(Object(Ze.a)(e,f.a.backend.epsilon()))),-this.learningRate),n);n.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(Ge.b)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}st.className="Adagrad",Be(st);var it=n(802),sub=n(404);class ot extends Ke{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(Ge.h)((()=>{this.accBeta1=Object(qe.a)(t).variable(),this.accBeta2=Object(qe.a)(n).variable()})),null==r&&(this.epsilon=f.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Object(Ge.h)((()=>{const n=Object(sub.a)(1,this.accBeta1),r=Object(sub.a)(1,this.accBeta2);t.forEach(((t,i)=>{const o=f.a.registeredVariables[t];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${t}/m`,variable:Object(Ge.h)((()=>Object(tt.a)(o).variable(false)))}),null==this.accumulatedSecondMoment[i]&&(this.accumulatedSecondMoment[i]={originalName:`${t}/v`,variable:Object(Ge.h)((()=>Object(tt.a)(o).variable(false)))});const c=Array.isArray(e)?e[i].tensor:e[t];if(null==c)return;const l=this.accumulatedFirstMoment[i].variable,d=this.accumulatedSecondMoment[i].variable,h=Object(Ze.a)(Object(Je.a)(l,this.beta1),Object(Je.a)(c,1-this.beta1)),m=Object(Ze.a)(Object(Je.a)(d,this.beta2),Object(Je.a)(Object(et.a)(c),1-this.beta2)),y=Object(div.a)(h,n),x=Object(div.a)(m,r);l.assign(h),d.assign(m);const v=Object(Ze.a)(Object(Je.a)(Object(div.a)(y,Object(Ze.a)(Object(Qe.a)(x),this.epsilon)),-this.learningRate),o);o.assign(v)})),this.accBeta1.assign(Object(Je.a)(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(Je.a)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(Ge.b)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Object(Ge.b)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Object(Ge.h)((()=>{this.accBeta1.assign(Object(it.a)(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(it.a)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}ot.className="Adam",Be(ot);var ut=n(797),ct=n(975);class lt extends Ke{constructor(e,t,n,r=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(Ge.h)((()=>{this.iteration=Object(qe.a)(0).variable(),this.accBeta1=Object(qe.a)(t).variable()})),null==r&&(this.epsilon=f.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Object(Ge.h)((()=>{const n=Object(sub.a)(1,this.accBeta1),r=Object(div.a)(-this.learningRate,Object(Ze.a)(Object(Je.a)(this.iteration,this.decay),1));t.forEach(((t,i)=>{const o=f.a.registeredVariables[t];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${t}/m`,variable:Object(tt.a)(o).variable(false)}),null==this.accumulatedWeightedInfNorm[i]&&(this.accumulatedWeightedInfNorm[i]={originalName:`${t}/v`,variable:Object(tt.a)(o).variable(false)});const c=Array.isArray(e)?e[i].tensor:e[t];if(null==c)return;const l=this.accumulatedFirstMoment[i].variable,d=this.accumulatedWeightedInfNorm[i].variable,h=Object(Ze.a)(Object(Je.a)(l,this.beta1),Object(Je.a)(c,1-this.beta1)),m=Object(Je.a)(d,this.beta2),y=Object(ut.a)(c),x=Object(ct.a)(m,y);l.assign(h),d.assign(x);const v=Object(Ze.a)(Object(Je.a)(Object(div.a)(r,n),Object(div.a)(h,Object(Ze.a)(x,this.epsilon))),o);o.assign(v)})),this.iteration.assign(Object(Ze.a)(this.iteration,1)),this.accBeta1.assign(Object(Je.a)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(Ge.b)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Object(Ge.b)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}lt.className="Adamax",Be(lt);class ht extends Ke{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,i)=>{const n=Array.isArray(e)?e[i].tensor:e[t];if(null==n)return;const r=f.a.registeredVariables[t];Object(Ge.h)((()=>{const e=Object(Ze.a)(Object(Je.a)(this.c,n),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Object(Ge.d)(Object(qe.a)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}ht.className="SGD",Be(ht);class pt extends ht{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Object(qe.a)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,i)=>{const n=f.a.registeredVariables[t];if(null==this.accumulations[i]){const e=!1;this.accumulations[i]={originalName:`${t}/momentum`,variable:Object(Ge.h)((()=>Object(tt.a)(n).variable(e)))}}const r=this.accumulations[i].variable,o=Array.isArray(e)?e[i].tensor:e[t];null!=o&&Object(Ge.h)((()=>{let e;const t=Object(Ze.a)(Object(Je.a)(this.m,r),o);e=this.useNesterov?Object(Ze.a)(Object(Je.a)(this.c,Object(Ze.a)(o,Object(Je.a)(t,this.m))),n):Object(Ze.a)(Object(Je.a)(this.c,t),n),r.assign(t),n.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(Ge.b)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}pt.className="Momentum",Be(pt);class ft extends Ke{constructor(e,t=.9,n=0,r=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,null==r&&(this.epsilon=f.a.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,i)=>{const n=f.a.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[i]&&(this.accumulatedMeanSquares[i]={originalName:`${t}/rms`,variable:Object(Ge.h)((()=>Object(tt.a)(n).variable(r)))}),null==this.accumulatedMoments[i]&&(this.accumulatedMoments[i]={originalName:`${t}/momentum`,variable:Object(Ge.h)((()=>Object(tt.a)(n).variable(r)))}),null==this.accumulatedMeanGrads[i]&&this.centered&&(this.accumulatedMeanGrads[i]={originalName:`${t}/mg`,variable:Object(Ge.h)((()=>Object(tt.a)(n).variable(r)))});const o=Array.isArray(e)?e[i].tensor:e[t];if(null==o)return;const c=this.accumulatedMeanSquares[i].variable,l=this.accumulatedMoments[i].variable;Object(Ge.h)((()=>{const e=Object(Ze.a)(Object(Je.a)(c,this.decay),Object(Je.a)(Object(et.a)(o),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[i].variable,r=Object(Ze.a)(Object(Je.a)(t,this.decay),Object(Je.a)(o,1-this.decay)),d=Object(div.a)(Object(Je.a)(o,this.learningRate),Object(Qe.a)(Object(sub.a)(e,Object(Ze.a)(Object(et.a)(r),this.epsilon)))),h=Object(Ze.a)(Object(Je.a)(l,this.momentum),d);c.assign(e),t.assign(r),l.assign(h);const f=Object(sub.a)(n,h);n.assign(f)}else{const e=Object(Ze.a)(Object(Je.a)(c,this.decay),Object(Je.a)(Object(et.a)(o),1-this.decay)),t=Object(Ze.a)(Object(Je.a)(l,this.momentum),Object(div.a)(Object(Je.a)(o,this.learningRate),Object(Qe.a)(Object(Ze.a)(e,this.epsilon))));c.assign(e),l.assign(t);const r=Object(sub.a)(n,t);n.assign(r)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(Ge.b)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Object(Ge.b)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Object(Ge.b)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}ft.className="RMSProp",Be(ft);class mt{static sgd(e){return new ht(e)}static momentum(e,t,n=!1){return new pt(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,o=!1){return new ft(e,t,n,r,o)}static adam(e=.001,t=.9,n=.999,r=null){return new ot(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new nt(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,o=0){return new lt(e,t,n,r,o)}static adagrad(e,t=.1){return new st(e,t)}}const bt={sgd:mt.sgd,momentum:mt.momentum,adadelta:mt.adadelta,adagrad:mt.adagrad,rmsprop:mt.rmsprop,adamax:mt.adamax,adam:mt.adam};var gt=n(1152),yt=n(552);function xt(e,t){const n=e[0].length;e.forEach(((e,i)=>{A.b(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${i}] must be the same as the rank of the rest (${n})`))})),A.b(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,i)=>{for(let o=0;o<n;o++)A.b(o===t||e[o]===r[o],(()=>`Error in concat${n}D: Shape of tensors[${i}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${i}.`))}))}function vt(e,t){const n=e[0].slice();for(let i=1;i<e.length;i++)n[t]+=e[i][t];return n}var Ot=n(430),wt=n(807);const kt=30;function It(e){return e<=kt?e:Object(A.G)(e,Math.floor(Math.sqrt(e)))}function St(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Nt(e,t,n,r=!0){let o=[];if(r)o=o.concat(t.slice(0)),o.push(e[0]/n),o=o.concat(e.slice(1));else{o=o.concat(e[0]);const n=t.length;for(let i=0;i<n;++i)o=o.concat([e[i+1]/t[i],t[i]]);o=o.concat(e.slice(n+1))}return o}function jt(e,t,n=!0){const r=[];if(n){r.push(t);for(let i=t+1;i<e;++i)i<=2*t?(r.push(i),r.push(i-(t+1))):r.push(i)}else{const n=[],o=[];for(let i=1;i<e;++i)i>=2*t+1||i%2==1?o.push(i):n.push(i);r.push(...n),r.push(0),r.push(...o)}return r}function Tt(e,t,n,r=!0){const o=[];r?o.push(e[0]/n):o.push(e[0]*n);for(let i=1;i<e.length;++i)i<=t.length?r?o.push(t[i-1]*e[i]):o.push(e[i]/t[i-1]):o.push(e[i]);return o}function Ct(e,t){const n=[0];for(let i=0;i<t;++i)n.push(e[i][0]);return n}function $t(e,t,n){const r=e.slice(0,1);for(let i=0;i<n;++i)r.push(e[i+1]-t[i][0]-t[i][1]);return r}function Et(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Object(A.O)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const o=t.shape,c=o[o.length-1];let l=1;for(let i=0;i<o.length-1;++i)l*=o[i];const d=e.shape,h=o.slice();h.pop();let f=1;for(let i=c;i<n;++i)f*=d[i],h.push(d[i]);const m=[...Object(A.j)(e.shape).map((e=>e/f)),1].slice(0,c);return[h,l,f,m]}var At=n(980),Rt=n(1093);const Ft=.3275911,Dt=.254829592,_t=-.284496736,Mt=1.421413741,zt=-1.453152027,Lt=1.061405429;var Pt=n(995);function Bt(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let i=0;i<n.length;i+=2)n[i]=e[i/2],n[i+1]=t[i/2];return n}function Wt(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let i=0;i<e.length;i+=2)t[i/2]=e[i],n[i/2]=e[i+1];return{real:t,imag:n}}function Ut(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let i=0;i<e.length;i+=4)n[Math.floor(i/4)]=e[i],r[Math.floor(i/4)]=e[i+1];return{real:n,imag:r}}function Vt(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let i=2;i<e.length;i+=4)n[Math.floor(i/4)]=e[i],r[Math.floor(i/4)]=e[i+1];return{real:n,imag:r}}function Gt(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Ht(data,e,t,n){data[2*n]=e,data[2*n+1]=t}function qt(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let i=0;i<Math.ceil(e/2);i++){const o=(t?2:-2)*Math.PI*(i/e);n[i]=Math.cos(o),r[i]=Math.sin(o)}return{real:n,imag:r}}function Kt(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Xt="->",Yt=/->/g;function Zt(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Yt,"").length)/Xt.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,o]=e.split(Xt);Object(A.b)(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const c=r.split(","),l=c.length;if(t!==l)throw new Error(`Expected ${l} input tensors, received ${t}`);if(l>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const d=[];for(let i=0;i<o.length;++i){const e=o[i];if(!c.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===d.indexOf(e)&&d.push(e)}for(let i=0;i<r.length;++i){const e=r[i];-1===d.indexOf(e)&&","!==e&&d.push(e)}const h=new Array(c.length);for(let i=0;i<l;++i){if(new Set(c[i].split("")).size!==c[i].length)throw new Error(`Found duplicate axes in input component ${c[i]}. Support for duplicate axes in input is not implemented yet.`);h[i]=[];for(let e=0;e<c[i].length;++e)h[i].push(d.indexOf(c[i][e]))}const f=d.length,m=[];for(let i=o.length;i<f;++i)m.push(i);return{allDims:d,summedDims:m,idDims:h}}function Jt(e,t){let n=new Array(e);n.fill(-1);for(let i=0;i<t.length;++i)n[t[i]]=i;const r=[];for(let i=0;i<e;++i)-1===n[i]&&r.push(i);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Qt(e,t,n){const r=new Array(e);for(let i=0;i<n.length;++i){const e=n[i].shape;for(let n=0;n<t[i].length;++n)void 0===r[t[i][n]]?r[t[i][n]]=e[n]:Object(A.b)(r[t[i][n]]===e[n],(()=>`Expected dimension ${r[t[i][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function en(e,t){const path=e,n=[];let r=0;0===e.length&&path.push(-1),r=e.length+1;for(let i=0;i<r;++i)n.push([]);const o=[];for(let i=0;i<path.length;++i){const e=nn(t,path[i]);for(const t of e)-1===o.indexOf(t)&&(n[i].push(t),o.push(t))}return{path:path,steps:n}}function tn(e){return e.every(((e,t)=>e===t))}function nn(e,t){const n=[];for(let i=0;i<e.length;++i)0!==e[i].length&&-1===e[i].indexOf(t)&&-1!==t||n.push(i);return n}function rn(e,t,n=0){let r=[];if("number"==typeof t)Object(A.b)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const o=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);Object(A.b)(o<=1,(()=>"There should be only one negative value in split array."));const c=t.indexOf(-1);if(-1!==c){const r=t.reduce(((a,b)=>b>0?a+b:a));t[c]=e.shape[n]-r}Object(A.b)(e.shape[n]===t.reduce(((a,b)=>a+b)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function an(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function sn(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function on(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function un(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function cn(e,t){return`size ${e} must be non-negative, not ${t}`}function ln(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function dn(e,t){return`Input to reshape is a SparseTensor with ${Object(A.O)(e)}\n  dense values, but the requested shape requires a multiple of ${Object(A.O)(t)}. inputShape=${e} outputShape= ${t}`}function hn(e,t){return`Input to reshape is a tensor with ${Object(A.O)(e)} dense values, but the requested shape has ${Object(A.O)(t)}. inputShape=${e} outputShape=${t}`}function pn(){return"segment ids must be >= 0"}function fn(){return"segment ids are not increasing"}function mn(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function bn(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function gn(e,t){let n,r=!1;for(e<=kt?(n=e,r=!0):n=Object(A.G)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Object(A.G)(e,n+1);return n}function yn(e,t,n){const r=[],o=e.length;for(let c=0;c<o;c++)c!==t?r.push(e[c]):r.push(n);return r}function xn(e,t,n,r){const o=t.shape.length,c=e.shape.length;if(0!==r&&(r<-o||r>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${r}`);if(r<0&&(r+=o),r>c)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${c}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let i=0;i<r;++i)if(e.shape[i]!==t.shape[i])throw new Error(`x.shape[${i}]: ${e.shape[i]} should be equal to indices.shape[${i}]: ${t.shape[i]}.`);const l=e.shape[n],d=[];let h=1,f=1,m=1;for(let i=0;i<r;++i)d.push(e.shape[i]),h*=e.shape[i];for(let i=r;i<n;i++)d.push(e.shape[i]),f*=e.shape[i];for(let i=r;i<o;i++)d.push(t.shape[i]);for(let i=n+1;i<c;i++)d.push(e.shape[i]),m*=e.shape[i];return{batchSize:h,sliceSize:m,outerSize:f,dimSize:l,outputShape:d}}function vn(e){try{return e.map((e=>Object(Ue.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function On(e){return e.map((s=>Object(Ue.encodeString)(s)))}var wn=n(1071),kn=n(810),In=n(1094),Sn=n(996)},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return c})),n.d(t,"d",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"f",(function(){return h})),n.d(t,"g",(function(){return f})),n.d(t,"h",(function(){return m})),n.d(t,"i",(function(){return y})),n.d(t,"j",(function(){return x})),n.d(t,"k",(function(){return v})),n.d(t,"l",(function(){return O})),n.d(t,"n",(function(){return w})),n.d(t,"m",(function(){return k})),n.d(t,"o",(function(){return I})),n.d(t,"r",(function(){return S})),n.d(t,"p",(function(){return N})),n.d(t,"q",(function(){return j})),n.d(t,"s",(function(){return T})),n.d(t,"t",(function(){return C})),n.d(t,"u",(function(){return $})),n.d(t,"w",(function(){return E})),n.d(t,"v",(function(){return A})),n.d(t,"x",(function(){return R})),n.d(t,"y",(function(){return F})),n.d(t,"z",(function(){return D})),n.d(t,"A",(function(){return _})),n.d(t,"B",(function(){return M})),n.d(t,"C",(function(){return z})),n.d(t,"D",(function(){return L})),n.d(t,"E",(function(){return P})),n.d(t,"F",(function(){return B})),n.d(t,"G",(function(){return W})),n.d(t,"H",(function(){return U})),n.d(t,"I",(function(){return V})),n.d(t,"J",(function(){return G})),n.d(t,"K",(function(){return H})),n.d(t,"M",(function(){return K})),n.d(t,"L",(function(){return X})),n.d(t,"N",(function(){return Y})),n.d(t,"O",(function(){return Z})),n.d(t,"P",(function(){return J})),n.d(t,"Q",(function(){return Q})),n.d(t,"R",(function(){return ee})),n.d(t,"S",(function(){return te})),n.d(t,"T",(function(){return ne})),n.d(t,"V",(function(){return re})),n.d(t,"U",(function(){return ae})),n.d(t,"lc",(function(){return se})),n.d(t,"W",(function(){return ie})),n.d(t,"X",(function(){return oe})),n.d(t,"Y",(function(){return ue})),n.d(t,"ab",(function(){return ce})),n.d(t,"Z",(function(){return le})),n.d(t,"bb",(function(){return de})),n.d(t,"cb",(function(){return he})),n.d(t,"db",(function(){return pe})),n.d(t,"eb",(function(){return fe})),n.d(t,"fb",(function(){return me})),n.d(t,"gb",(function(){return be})),n.d(t,"hb",(function(){return ge})),n.d(t,"ib",(function(){return ye})),n.d(t,"kb",(function(){return xe})),n.d(t,"ob",(function(){return ve})),n.d(t,"nb",(function(){return Oe})),n.d(t,"pb",(function(){return we})),n.d(t,"qb",(function(){return ke})),n.d(t,"sb",(function(){return Ie})),n.d(t,"rb",(function(){return Se})),n.d(t,"tb",(function(){return Ne})),n.d(t,"ub",(function(){return je})),n.d(t,"vb",(function(){return Te})),n.d(t,"wb",(function(){return Ce})),n.d(t,"zb",(function(){return $e})),n.d(t,"Ab",(function(){return Ee})),n.d(t,"Bb",(function(){return Ae})),n.d(t,"Cb",(function(){return Re})),n.d(t,"Db",(function(){return Fe})),n.d(t,"Eb",(function(){return De})),n.d(t,"Gb",(function(){return _e})),n.d(t,"Hb",(function(){return Me})),n.d(t,"Ib",(function(){return ze})),n.d(t,"Fb",(function(){return Le})),n.d(t,"xb",(function(){return Pe})),n.d(t,"yb",(function(){return Be})),n.d(t,"Jb",(function(){return We})),n.d(t,"Pb",(function(){return Ue})),n.d(t,"Kb",(function(){return Ve})),n.d(t,"Nb",(function(){return Ge})),n.d(t,"Lb",(function(){return He})),n.d(t,"Mb",(function(){return qe})),n.d(t,"Ob",(function(){return Ke})),n.d(t,"Qb",(function(){return Xe})),n.d(t,"Rb",(function(){return Ye})),n.d(t,"Sb",(function(){return Ze})),n.d(t,"Tb",(function(){return Je})),n.d(t,"Ub",(function(){return Qe})),n.d(t,"Vb",(function(){return et})),n.d(t,"Wb",(function(){return tt})),n.d(t,"Xb",(function(){return nt})),n.d(t,"bc",(function(){return at})),n.d(t,"Yb",(function(){return st})),n.d(t,"Zb",(function(){return it})),n.d(t,"ac",(function(){return ot})),n.d(t,"dc",(function(){return ut})),n.d(t,"cc",(function(){return ct})),n.d(t,"ec",(function(){return lt})),n.d(t,"fc",(function(){return ht})),n.d(t,"gc",(function(){return pt})),n.d(t,"hc",(function(){return ft})),n.d(t,"ic",(function(){return mt})),n.d(t,"jc",(function(){return bt})),n.d(t,"kc",(function(){return gt})),n.d(t,"mc",(function(){return yt})),n.d(t,"nc",(function(){return xt})),n.d(t,"pc",(function(){return vt})),n.d(t,"sc",(function(){return Ot})),n.d(t,"tc",(function(){return wt})),n.d(t,"qc",(function(){return kt})),n.d(t,"rc",(function(){return It})),n.d(t,"oc",(function(){return St})),n.d(t,"uc",(function(){return Nt})),n.d(t,"wc",(function(){return jt})),n.d(t,"xc",(function(){return Tt})),n.d(t,"yc",(function(){return Ct})),n.d(t,"zc",(function(){return $t})),n.d(t,"Ac",(function(){return Et})),n.d(t,"Fc",(function(){return At})),n.d(t,"Dc",(function(){return Rt})),n.d(t,"Ec",(function(){return Ft})),n.d(t,"Cc",(function(){return Dt})),n.d(t,"Bc",(function(){return _t})),n.d(t,"Hc",(function(){return Mt})),n.d(t,"Pc",(function(){return zt})),n.d(t,"Yc",(function(){return Lt})),n.d(t,"Ic",(function(){return Pt})),n.d(t,"Oc",(function(){return Bt})),n.d(t,"Gc",(function(){return Wt})),n.d(t,"Jc",(function(){return Ut})),n.d(t,"Kc",(function(){return Vt})),n.d(t,"Lc",(function(){return Gt})),n.d(t,"Mc",(function(){return Ht})),n.d(t,"Nc",(function(){return qt})),n.d(t,"Rc",(function(){return Kt})),n.d(t,"Qc",(function(){return Xt})),n.d(t,"Tc",(function(){return Yt})),n.d(t,"Uc",(function(){return Zt})),n.d(t,"Vc",(function(){return Jt})),n.d(t,"Wc",(function(){return Qt})),n.d(t,"Xc",(function(){return en})),n.d(t,"Zc",(function(){return tn})),n.d(t,"ad",(function(){return nn})),n.d(t,"bd",(function(){return rn})),n.d(t,"cd",(function(){return an})),n.d(t,"dd",(function(){return sn})),n.d(t,"ed",(function(){return on})),n.d(t,"fd",(function(){return un})),n.d(t,"gd",(function(){return cn})),n.d(t,"hd",(function(){return ln})),n.d(t,"id",(function(){return dn})),n.d(t,"Sc",(function(){return hn})),n.d(t,"jb",(function(){return pn})),n.d(t,"vc",(function(){return fn})),n.d(t,"jd",(function(){return mn})),n.d(t,"lb",(function(){return bn})),n.d(t,"mb",(function(){return gn}));const r="Abs",o="Acos",c="Acosh",l="Add",d="AddN",h="All",f="Any",m="ArgMax",y="ArgMin",x="Asin",v="Asinh",O="Atan",w="Atanh",k="Atan2",I="AvgPool",S="AvgPoolGrad",N="AvgPool3D",j="AvgPool3DGrad",T="BatchMatMul",C="BatchToSpaceND",$="Bincount",E="BroadcastTo",A="BroadcastArgs",R="Cast",F="Ceil",D="ClipByValue",_="Complex",M="ComplexAbs",z="Concat",L="Conv2D",P="Conv2DBackpropFilter",B="Conv2DBackpropInput",W="Conv3D",U="Conv3DBackpropFilterV2",V="Conv3DBackpropInputV2",G="Cos",H="Cosh",K="Cumsum",X="CropAndResize",Y="DenseBincount",Z="DepthToSpace",J="DepthwiseConv2dNative",Q="DepthwiseConv2dNativeBackpropFilter",ee="DepthwiseConv2dNativeBackpropInput",te="Diag",ne="Dilation2D",re="Dilation2DBackpropInput",ae="Dilation2DBackpropFilter",se="RealDiv",ie="Einsum",oe="Elu",ue="EluGrad",ce="Erf",le="Equal",de="Exp",he="ExpandDims",pe="Expm1",fe="FFT",me="Fill",be="FlipLeftRight",ge="Floor",ye="FloorDiv",xe="FusedBatchNorm",ve="GatherV2",Oe="GatherNd",we="Greater",ke="GreaterEqual",Ie="Identity",Se="IFFT",Ne="Imag",je="IsFinite",Te="IsInf",Ce="IsNan",$e="LeakyRelu",Ee="Less",Ae="LessEqual",Re="LinSpace",Fe="Log",De="Log1p",_e="LogicalAnd",Me="LogicalNot",ze="LogicalOr",Le="LogSoftmax",Pe="LRN",Be="LRNGrad",We="Max",Ue="Maximum",Ve="MaxPool",Ge="MaxPoolGrad",He="MaxPool3D",qe="MaxPool3DGrad",Ke="MaxPoolWithArgmax",Xe="Mean",Ye="Min",Ze="Minimum",Je="MirrorPad",Qe="Mod",et="Multinomial",tt="Multiply",nt="Neg",at="NotEqual",st="NonMaxSuppressionV3",it="NonMaxSuppressionV4",ot="NonMaxSuppressionV5",ut="OnesLike",ct="OneHot",lt="Pack",ht="PadV2",pt="Pow",ft="Prelu",mt="Prod",bt="Range",gt="Real",yt="Reciprocal",xt="Relu",vt="Reshape",Ot="ResizeNearestNeighbor",wt="ResizeNearestNeighborGrad",kt="ResizeBilinear",It="ResizeBilinearGrad",St="Relu6",Nt="Reverse",jt="Round",Tt="Rsqrt",Ct="ScatterNd",$t="Select",Et="Selu",At="Slice",Rt="Sin",Ft="Sinh",Dt="Sign",_t="Sigmoid",Mt="Softplus",zt="Sqrt",Lt="Sum",Pt="SpaceToBatchND",Bt="SplitV",Wt="Softmax",Ut="SparseFillEmptyRows",Vt="SparseReshape",Gt="SparseSegmentMean",Ht="SparseSegmentSum",qt="SparseToDense",Kt="SquaredDifference",Xt="Square",Yt="StridedSlice",Zt="StringNGrams",Jt="StringSplit",Qt="StringToHashBucketFast",en="Sub",tn="Tan",nn="Tanh",rn="Tile",an="TopK",sn="Transform",on="Transpose",un="Unique",cn="Unpack",ln="UnsortedSegmentSum",dn="ZerosLike",hn="Step",pn="FromPixels",fn="RotateWithOffset",mn="_FusedMatMul",bn="FusedConv2D",gn="FusedDepthwiseConv2D"},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(371),o=n(967);function c(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const c=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const l=(...e)=>{r.a.startScope(n);try{const t=c(...e);return Object(o.x)(t)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(t),t}catch(e){throw r.a.endScope(null),e}};return Object.defineProperty(l,"name",{value:n,configurable:!0}),l}},,function(e,t,n){"use strict";n.d(t,"c",(function(){return h})),n.d(t,"a",(function(){return y})),n.d(t,"b",(function(){return x}));var r=n(371),o=n(445),c=n(373),l=n(967),d=n(375);function h(e,t){let n=e;if(Object(l.A)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Object(l.A)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Object(o.b)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&f(e,r,[]),r}function f(e,t,n){if(n=n||[],!Array.isArray(e)&&!Object(l.A)(e))return void Object(l.b)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Object(l.b)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Object(l.b)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let i=0;i<e.length;++i)f(e[i],r,n.concat(i))}function m(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function y(e,t,n,o="numeric"){if(e instanceof c.a)return m(o,e.dtype,t,n),e;let f=Object(l.r)(e);if("string"!==f&&["bool","int32","float32"].indexOf(o)>=0&&(f=o),m(o,f,t,n),null==e||!Object(l.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const y=h(e,f);Object(l.A)(e)||Array.isArray(e)||(e=[e]);const x="string"!==f?Object(d.toTypedArray)(e,f):Object(l.m)(e,[],!0);return r.a.makeTensor(x,y,f)}function x(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,i)=>y(e,`${t}[${i}]`,n,r)))}},function(e,t,n){"use strict";n.d(t,"b",(function(){return N})),n.d(t,"a",(function(){return j}));var r=n(996),o=n(445),c=n(1070),l=n(367),d=n(968),h=n(995),f=n(375),m=n(967);class y{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new v)}profileKernel(e,t,n){let r;const c=()=>{r=n()};let l;const d=f.now();if(this.backendTimer.timerAvailable())l=this.backendTimer.time(c);else{c();for(const output of r)output.dataSync();l=Promise.resolve({kernelMs:f.now()-d})}if(Object(o.b)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let i=0;i<r.length;i++){const output=r[i];output.data().then((t=>{x(t,output.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:l.then((e=>e.kernelMs)),extraInfo:l.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:o,extraInfo:c}=e;n.forEach((e=>{Promise.all([e.data(),r,c]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],o,n[2])}))}))}}function x(e,t,n){if("float32"!==t)return!1;for(let i=0;i<e.length;i++){const t=e[i];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class v{logKernelProfile(e,t,n,r,o,c){const time="number"==typeof r?m.L(`${r}ms`,9):r.error,l=m.L(e,25),d=t.rank,h=t.size,f=m.L(t.shape.toString(),14);let y="";for(const e in o){const input=o[e];if(null!=input){const n=input.shape||t.shape,r=n.length;y+=`${e}: ${r}D ${r>0?n:""} `}}console.log(`%c${l}\t%c${time}\t%c${d}D ${f}\t%c${h}\t%c${y}\t%c${c}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var O=n(373),w=n(413);function k(e){return null!=e.kernelName}class I{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class S{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new I}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let i=0;i<e.length;i++){const t=e[i];if(await this.initializeBackend(t).success)return void await this.setBackend(t)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(h.b(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new y(this.backendInstance),!0}setupRegisteredKernels(){Object(d.c)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Object(d.c)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.b||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,h.b(`Initialization of backend ${e} failed`),h.b(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return h.b(`Initialization of backend ${e} failed`),h.b(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((a,b)=>this.registryFactory[b].priority-this.registryFactory[a].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let i=0;i<e.length;i++){const t=e[i],{success:n,asyncInit:r}=this.initializeBackend(t);if(r||n)return{name:t,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,o=this.readSync(t),c=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,o,n.shape,n.dtype,c),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return S.nextTensorId++}nextVariableId(){return S.nextVariableId++}clone(e){const t=j.runKernel(l.sb,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return j.runKernel(l.x,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=Object(d.b)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let o=0;n.forEach((e=>{o+="complex64"===e.dtype?3:1}));const c=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=r-t-o-c;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),o=this.state.numBytes,c=this.state.numTensors;let l,h;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const f=k(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(k(e)){const{kernelName:t,inputs:o,attrs:c}=e;null==this.backendName&&this.backend;const f=Object(d.b)(t,this.backendName);m.b(null!=f,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),l=()=>{const e=this.backend.numDataIds();h=f.kernelFunc({inputs:o,attrs:c,backend:this.backend});const l=Array.isArray(h)?h:[h];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,l);const d=l.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,o,d);n=this.saveTensorsForBackwardMode(e)}return d}}else{const{forwardFunc:t}=e,o=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};l=()=>{const e=this.backend.numDataIds();h=this.tidy((()=>t(this.backend,o)));const n=Array.isArray(h)?h:[h];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,e,n),n}}const{inputs:y,attrs:x}=e,v=k(e)?null:e.backwardsFunc;let O;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(O=this.profiler.profileKernel(f,y,(()=>l())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(O),t=O.outputs):t=l()})),r&&this.addTapeNode(f,y,t,v,n,x),this.state.profiling&&this.state.activeProfile.kernels.push({name:f,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-c,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(y).map((e=>null!=y[e]?y[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:O.timeMs,extraInfo:O.extraInfo}),Array.isArray(h)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=Object(d.a)(e);if(null!=r){const e=r.inputsToSave||[],o=r.outputsToSave||[];let c;r.saveAllInputs?(m.b(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),c=Object.keys(t).map((e=>t[e]))):c=e.map((e=>t[e]));const l=n.filter(((e,i)=>o[i]));return c.concat(l)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let o=e;"string"===n&&m.z(e[0])&&(o=e.map((e=>f.encodeString(e))));const c=r.write(o,t,n),l=new O.a(t,n,c,this.nextTensorId());if(this.trackTensor(l,r),"string"===n){const e=this.state.tensorInfo.get(c),t=Object(m.f)(o);this.state.numBytes+=t-e.bytes,e.bytes=t}return l}makeTensorFromDataId(e,t,n,r){n=n||"float32";const o=new O.a(t,n,e,this.nextTensorId());return this.trackTensor(o,r),o}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const o=new O.c(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[o.name])throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(a,e){this.state.numTensors++,"string"===a.dtype&&this.state.numStringTensors++;let t=0;"complex64"!==a.dtype&&"string"!==a.dtype&&(t=a.size*m.g(a.dtype)),this.state.numBytes+=t,this.state.tensorInfo.has(a.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(a.dataId,{backend:e||this.backend,dtype:a.dtype,shape:a.shape,bytes:t})),a instanceof O.c||this.track(a)}incRef(a,e){this.trackTensor(a,e),this.backend.incRef(a.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(a){if(!this.state.tensorInfo.has(a.dataId))return;const e=this.state.tensorInfo.get(a.dataId);if(this.state.numTensors--,"string"===a.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==a.dtype&&"string"!==a.dtype){const e=a.size*m.g(a.dtype);this.state.numBytes-=e}e.backend.disposeData(a.dataId)&&this.removeDataId(a.dataId,e.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,o,c){const l={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:o},h=Object(d.a)(e);null!=h&&(r=h.gradFunc),null!=r&&(l.gradient=e=>(e=e.map(((e,i)=>{if(null==e){const output=n[i],e=m.F(output.size,output.dtype);return this.makeTensor(e,output.shape,output.dtype)}return e})),r(e.length>1?e:e[0],o,c))),this.state.activeTape.push(l)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Object(w.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let i=0;i<this.state.activeScope.track.length;i++){const e=this.state.activeScope.track[i];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(m.b(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const o=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));m.b(o instanceof O.a,(()=>"The result y returned by f() must be a tensor."));const c=function(e,t,n){const r={},o={};for(let i=0;i<t.length;i++)r[t[i].id]=!0;for(let i=0;i<e.length;i++){const n=e[i],c=n.inputs;for(const e in c){const input=c[e];let l=!1;for(let e=0;e<t.length;e++)if(r[input.id]){n.outputs.forEach((output=>r[output.id]=!0)),l=!0,o[n.id]=!0;break}if(l)break}}const c={};c[n.id]=!0;const l={};for(let i=e.length-1;i>=0;i--){const t=e[i],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(c[t.outputs[e].id]){for(const e in n)c[n[e].id]=!0,l[t.id]=!0;break}}const d=[];for(let i=0;i<e.length;i++){const t=e[i];if(o[t.id]&&l[t.id]){const e={};for(const n in t.inputs){const o=t.inputs[n];r[o.id]&&(e[n]=o)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,d.push(n)}}return d}(this.state.activeTape,t,o);if(!r&&0===c.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[o.id]=null==n?function(e){const t=Object(m.D)(Object(m.O)(e),"float32");return j.makeTensor(t,e,"float32")}(o.shape):n,function(e,t,n,r){for(let i=t.length-1;i>=0;i--){const o=t[i],c=[];if(o.outputs.forEach((t=>{const n=e[t.id];null!=n?c.push(n):c.push(null)})),null==o.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const l=o.gradient(c);for(const t in o.inputs){if(!(t in l))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(l)}.`);const c=n((()=>l[t]()));if("float32"!==c.dtype)throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${c.dtype}'`);const d=o.inputs[t];if(!m.a(c.shape,d.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${t}' has shape '${c.shape}', which does not match the shape of the input '${d.shape}'`);if(null==e[d.id])e[d.id]=c;else{const t=e[d.id];e[d.id]=r(t,c),t.dispose()}}}}(e,c,(e=>this.tidy(e)),T);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:o,grads:r}}))}customGrad(e){return m.b(m.u(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;m.b(t.every((e=>e instanceof O.a)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((input,i)=>{r[i]=input}));return this.runKernelFunc({forwardFunc:(r,o)=>(n=e(...t,o),m.b(n.value instanceof O.a,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),m.b(m.u(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const o=n.gradFunc(e,r),c=Array.isArray(o)?o:[o];m.b(c.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),m.b(c.every((e=>e instanceof O.a)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const l={};return c.forEach(((e,i)=>{l[i]=()=>e})),l},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Object(f.now)(),n=await this.backend.time(e);return n.wallMs=Object(f.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new I;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function N(){const e=Object(c.b)();if(null==e._tfengine){const t=new o.a(e);e._tfengine=new S(t)}return Object(o.c)(e._tfengine.ENV),Object(O.g)((()=>e._tfengine)),e._tfengine}S.nextTensorId=0,S.nextVariableId=0;const j=N();function T(a,b){const e={a:a,b:b};return j.runKernel(l.d,e)}},,function(e,t,n){"use strict";n.d(t,"b",(function(){return y})),n.d(t,"g",(function(){return w})),n.d(t,"f",(function(){return k})),n.d(t,"e",(function(){return I})),n.d(t,"a",(function(){return S})),n.d(t,"d",(function(){return N})),n.d(t,"c",(function(){return j}));var r=n(1070),o=n(967);function c(e,t,n,r){const c=Object(o.j)(t),d=function(e,t,n,r){const c=Object(o.O)(t),d=r[r.length-1],h=new Array(d).fill(0),m=t.length,y="complex64"===n?f(e):e;if(m>1)for(let e=0;e<c/d;e++){const t=e*d;for(let e=0;e<d;e++)h[e]=Math.max(h[e],l(y[t+e],0,n).length)}return h}(e,t,n,c),m=t.length,y=h(e,t,n,c,d),x=["Tensor"];return r&&(x.push(`  dtype: ${n}`),x.push(`  rank: ${m}`),x.push(`  shape: [${t}]`),x.push("  values:")),x.push(y.map((e=>"    "+e)).join("\n")),x.join("\n")}function l(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Object(o.z)(e)?`'${e}'`:"bool"===n?d(e):parseFloat(e.toFixed(7)).toString(),Object(o.L)(r,t)}function d(e){return 0===e?"false":"true"}function h(e,t,n,r,o,c=!0){const m="complex64"===n?2:1,y=t[0],x=t.length;if(0===x){if("complex64"===n){return[l(f(e)[0],0,n)]}return"bool"===n?[d(e[0])]:[e[0].toString()]}if(1===x){if(y>20){const t=3*m;let r=Array.from(e.slice(0,t)),c=Array.from(e.slice((y-3)*m,y*m));return"complex64"===n&&(r=f(r),c=f(c)),["["+r.map(((e,i)=>l(e,o[i],n))).join(", ")+", ..., "+c.map(((e,i)=>l(e,o[y-3+i],n))).join(", ")+"]"]}return["["+("complex64"===n?f(e):Array.from(e)).map(((e,i)=>l(e,o[i],n))).join(", ")+"]"]}const v=t.slice(1),O=r.slice(1),w=r[0]*m,k=[];if(y>20){for(let i=0;i<3;i++){const t=i*w,r=t+w;k.push(...h(e.slice(t,r),v,n,O,o,!1))}k.push("...");for(let i=y-3;i<y;i++){const t=i*w,r=t+w;k.push(...h(e.slice(t,r),v,n,O,o,i===y-1))}}else for(let i=0;i<y;i++){const t=i*w,r=t+w;k.push(...h(e.slice(t,r),v,n,O,o,i===y-1))}const I=2===x?",":"";k[0]="["+k[0]+I;for(let i=1;i<k.length-1;i++)k[i]=" "+k[i]+I;let S=",\n";for(let i=2;i<x;i++)S+="\n";return k[k.length-1]=" "+k[k.length-1]+"]"+(c?"":S),k}function f(e){const t=[];for(let i=0;i<e.length;i+=2)t.push([e[i],e[i+1]]);return t}var m=n(375);class y{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=o.O(e),null!=n){const e=n.length;o.b(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||o.n(t,this.size),this.strides=Object(o.j)(e)}set(e,...t){0===t.length&&(t=[0]),o.b(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let i=0;for(const t of e){if(t<0||t>=this.shape[i]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}i++}let t=e[e.length-1];for(let i=0;i<e.length-1;++i)t+=this.strides[i]*e[i];return this.values[t]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let i=0;i<e.length-1;++i)t+=this.strides[i]*e[i];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let i=0;i<t.length-1;++i)t[i]=Math.floor(e/this.strides[i]),e-=t[i]*this.strides[i];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return x().makeTensor(this.values,this.shape,this.dtype)}}let x=null,v=null,O=null;function w(e){x=e}function k(e){v=e}function I(e){O=e}class S{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=o.O(e),this.strides=Object(o.j)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return v.buffer(this.shape,this.dtype,e)}bufferSync(){return v.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Object(o.U)(this.shape,e,"complex64"===this.dtype)}arraySync(){return Object(o.U)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const data=x().read(this.dataId);if("string"===this.dtype){const e=await data;try{return e.map((b=>m.decodeString(b)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return data}dataToGPU(e){return this.throwIfDisposed(),x().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const data=x().readSync(this.dataId);if("string"===this.dtype)try{return data.map((b=>m.decodeString(b)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return data}async bytes(){this.throwIfDisposed();const data=await x().read(this.dataId);return"string"===this.dtype?data:new Uint8Array(data.buffer)}dispose(){this.isDisposed||(x().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return v.print(this,e)}clone(){return this.throwIfDisposed(),v.clone(this)}toString(e=!1){return c(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),v.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),x().makeVariable(this,e,t,n)}}function N(){return Object(r.a)("Tensor",(()=>S))}Object.defineProperty(S,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),N();class j extends S{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!o.a(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);x().disposeTensor(this),this.dataId=e.dataId,x().incRef(this,null)}dispose(){x().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(j,Symbol.hasInstance,{value:e=>e instanceof S&&null!=e.assign&&e.assign instanceof Function})},,function(e,t,n){"use strict";n.r(t),n.d(t,"shuffle",(function(){return o.M})),n.d(t,"shuffleCombo",(function(){return o.N})),n.d(t,"clamp",(function(){return o.i})),n.d(t,"nearestLargerEven",(function(){return o.H})),n.d(t,"swap",(function(){return o.S})),n.d(t,"sum",(function(){return o.R})),n.d(t,"randUniform",(function(){return o.J})),n.d(t,"distSquared",(function(){return o.l})),n.d(t,"assert",(function(){return o.b})),n.d(t,"assertShapesMatch",(function(){return o.e})),n.d(t,"assertNonNull",(function(){return o.d})),n.d(t,"flatten",(function(){return o.m})),n.d(t,"sizeFromShape",(function(){return o.O})),n.d(t,"isScalarShape",(function(){return o.y})),n.d(t,"arraysEqual",(function(){return o.a})),n.d(t,"isInt",(function(){return o.v})),n.d(t,"tanh",(function(){return o.T})),n.d(t,"sizeToSquarishShape",(function(){return o.P})),n.d(t,"createShuffledIndices",(function(){return o.k})),n.d(t,"rightPad",(function(){return o.L})),n.d(t,"repeatedTry",(function(){return o.K})),n.d(t,"inferFromImplicitShape",(function(){return o.s})),n.d(t,"parseAxisParam",(function(){return o.I})),n.d(t,"squeezeShape",(function(){return o.Q})),n.d(t,"getTypedArrayFromDType",(function(){return o.o})),n.d(t,"getArrayFromDType",(function(){return o.n})),n.d(t,"checkConversionForErrors",(function(){return o.h})),n.d(t,"isValidDtype",(function(){return o.B})),n.d(t,"hasEncodingLoss",(function(){return o.p})),n.d(t,"isTypedArray",(function(){return o.A})),n.d(t,"bytesPerElement",(function(){return o.g})),n.d(t,"bytesFromStringArray",(function(){return o.f})),n.d(t,"isString",(function(){return o.z})),n.d(t,"isBoolean",(function(){return o.t})),n.d(t,"isNumber",(function(){return o.w})),n.d(t,"inferDtype",(function(){return o.r})),n.d(t,"isFunction",(function(){return o.u})),n.d(t,"nearestDivisor",(function(){return o.G})),n.d(t,"computeStrides",(function(){return o.j})),n.d(t,"toNestedArray",(function(){return o.U})),n.d(t,"makeOnesTypedArray",(function(){return o.D})),n.d(t,"makeZerosTypedArray",(function(){return o.F})),n.d(t,"makeZerosNestedTypedArray",(function(){return o.E})),n.d(t,"assertNonNegativeIntegerDimensions",(function(){return o.c})),n.d(t,"locToIndex",(function(){return o.C})),n.d(t,"indexToLoc",(function(){return o.q})),n.d(t,"isPromise",(function(){return o.x})),n.d(t,"hexToLong",(function(){return d})),n.d(t,"fingerPrint64",(function(){return S})),n.d(t,"createScalarValue",(function(){return N})),n.d(t,"toTypedArray",(function(){return j})),n.d(t,"now",(function(){return T})),n.d(t,"fetch",(function(){return C})),n.d(t,"encodeString",(function(){return $})),n.d(t,"decodeString",(function(){return E}));var r=n(445),o=n(967),c=n(1273);const l=n.n(c).a||c;function d(e){return l.fromString(e,!0,16)}const h=d("c3a5c85c97cb3127"),f=d("b492b66fbe98f273"),m=d("9ae16a3b2f90404f");function y(e){return e.xor(e.shru(47))}function x(s,e,t){const n=s.slice(e,e+t);return l.fromBytes(Array.from(n),!0,!0)}function v(s,e){return x(s,e,8)}function O(s,e){return x(s,e,4)}function w(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function k(u,e,t=d("9ddfea08eb382d69")){let a=u.xor(e).mul(t);a=a.xor(a.shru(47));let b=e.xor(a).mul(t);return b=b.xor(b.shru(47)),b=b.mul(t),b}function I(s,e,a,b){return function(e,t,n,r,a,b){a=a.add(e),b=w(b.add(a).add(r),21);const o=a;return a=(a=a.add(t)).add(n),b=b.add(w(a,44)),[a.add(r),b.add(o)]}(v(s,e),v(s,e+8),v(s,e+16),v(s,e+24),a,b)}function S(s,e=s.length){const t=l.fromNumber(81,!0);if(e<=32)return e<=16?function(s,e=s.length){if(e>=8){const t=m.add(2*e),a=v(s,0).add(m),b=v(s,e-8);return k(w(b,37).mul(t).add(a),w(a,25).add(b).mul(t),t)}if(e>=4){const t=m.add(2*e);return k(O(s,0).shl(3).add(e),O(s,e-4),t)}if(e>0){const t=s[0]+(s[e>>1]<<8),n=e+(s[e-1]<<2);return y(m.mul(t).xor(h.mul(n))).mul(m)}return m}(s,e):function(s,e=s.length){const t=m.add(2*e),a=v(s,0).mul(f),b=v(s,8),n=v(s,e-8).mul(t),r=v(s,e-16).mul(m);return k(w(a.add(b),43).add(w(n,30)).add(r),a.add(w(b.add(m),18)).add(n),t)}(s,e);if(e<=64)return function(s,e=s.length){const t=m.add(2*e),a=v(s,0).mul(m),b=v(s,8),n=v(s,e-8).mul(t),r=v(s,e-16).mul(m),o=w(a.add(b),43).add(w(n,30)).add(r),c=k(o,a.add(w(b.add(m),18)).add(n),t),l=v(s,16).mul(t),d=v(s,24),g=o.add(v(s,e-32)).mul(t),h=c.add(v(s,e-24)).mul(t);return k(w(l.add(d),43).add(w(g,30)).add(h),l.add(w(d.add(a),18)).add(g),t)}(s,e);let n=t,r=t.mul(f).add(113),o=y(r.mul(m).add(113)).mul(m),c=[l.UZERO,l.UZERO],d=[l.UZERO,l.UZERO];n=n.mul(m).add(v(s,0));let x=0;const S=64*(e-1>>6),N=S+(e-1&63)-63;do{n=w(n.add(r).add(c[0]).add(v(s,x+8)),37).mul(f),r=w(r.add(c[1]).add(v(s,x+48)),42).mul(f),n=n.xor(d[1]),r=r.add(c[0]).add(v(s,x+40)),o=w(o.add(d[0]),33).mul(f),c=I(s,x,c[1].mul(f),n.add(d[0])),d=I(s,x+32,o.add(d[1]),r.add(v(s,x+16))),[o,n]=[n,o],x+=64}while(x!==S);const j=f.add(o.and(255).shl(1));return x=N,d[0]=d[0].add(e-1&63),c[0]=c[0].add(d[0]),d[0]=d[0].add(c[0]),n=w(n.add(r).add(c[0]).add(v(s,x+8)),37).mul(j),r=w(r.add(c[1]).add(v(s,x+48)),42).mul(j),n=n.xor(d[1].mul(9)),r=r.add(c[0].mul(9).add(v(s,x+40))),o=w(o.add(d[0]),33).mul(j),c=I(s,x,c[1].mul(j),n.add(d[0])),d=I(s,x+32,o.add(d[1]),r.add(v(s,x+16))),[o,n]=[n,o],k(k(c[0],d[0],j).add(y(r).mul(h)).add(o),k(c[1],d[1],j).add(n),j)}function N(e,t){return"string"===t?$(e):j([e],t)}function j(a,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(a)&&(a=o.m(a)),Object(r.b)().getBool("DEBUG")&&o.h(a,e),function(a,e){return a instanceof Float32Array&&"float32"===e||a instanceof Int32Array&&"int32"===e||a instanceof Uint8Array&&"bool"===e}(a,e))return a;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(a);if("int32"===e)return new Int32Array(a);if("bool"===e){const e=new Uint8Array(a.length);for(let i=0;i<e.length;++i)0!==Math.round(a[i])&&(e[i]=1);return e}throw new Error(`Unknown data type ${e}`)}function T(){return Object(r.b)().platform.now()}function C(path,e){return Object(r.b)().platform.fetch(path,e)}function $(s,e="utf-8"){return e=e||"utf-8",Object(r.b)().platform.encode(s,e)}function E(e,t="utf-8"){return t=t||"utf-8",Object(r.b)().platform.decode(e,t)}},,,function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({reshape_:function(e,t){const n={x:Object(c.a)(e,"x","reshape","string_or_numeric")},l={shape:t};return r.a.runKernel(o.pc,n,l)}})},,function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(413),l=n(370),d=n(368);const h=Object(d.a)({mul_:function(a,b){let e=Object(l.a)(a,"a","mul"),t=Object(l.a)(b,"b","mul");[e,t]=Object(c.makeTypesMatch)(e,t);const n={a:e,b:t};return r.a.runKernel(o.Wb,n)}})},,function(e,t,n){"use strict";n.d(t,"a",(function(){return o.a})),n.d(t,"b",(function(){return c.a})),n.d(t,"c",(function(){return l.a})),n.d(t,"d",(function(){return d.a})),n.d(t,"e",(function(){return h.a})),n.d(t,"f",(function(){return f.a})),n.d(t,"g",(function(){return m.a})),n.d(t,"h",(function(){return w})),n.d(t,"i",(function(){return k})),n.d(t,"j",(function(){return I})),n.d(t,"k",(function(){return S.a})),n.d(t,"l",(function(){return N.a})),n.d(t,"m",(function(){return j.a})),n.d(t,"n",(function(){return T.a})),n.d(t,"o",(function(){return C.a})),n.d(t,"p",(function(){return $})),n.d(t,"q",(function(){return E})),n.d(t,"r",(function(){return A})),n.d(t,"s",(function(){return R})),n.d(t,"t",(function(){return F.a})),n.d(t,"u",(function(){return D.a})),n.d(t,"v",(function(){return _.a})),n.d(t,"w",(function(){return M.a})),n.d(t,"x",(function(){return L})),n.d(t,"y",(function(){return P.a})),n.d(t,"z",(function(){return div.a})),n.d(t,"B",(function(){return B.a})),n.d(t,"C",(function(){return W.a})),n.d(t,"D",(function(){return U.a})),n.d(t,"E",(function(){return V.a})),n.d(t,"F",(function(){return K})),n.d(t,"G",(function(){return X.a})),n.d(t,"H",(function(){return Y.a})),n.d(t,"J",(function(){return Z.a})),n.d(t,"K",(function(){return J.a})),n.d(t,"L",(function(){return Q.a})),n.d(t,"N",(function(){return ee.a})),n.d(t,"P",(function(){return te.a})),n.d(t,"Q",(function(){return ne.a})),n.d(t,"R",(function(){return re.a})),n.d(t,"S",(function(){return ae.a})),n.d(t,"T",(function(){return se.a})),n.d(t,"U",(function(){return ie.a})),n.d(t,"V",(function(){return oe.a})),n.d(t,"W",(function(){return ue.a})),n.d(t,"X",(function(){return ce.a})),n.d(t,"Y",(function(){return le.a})),n.d(t,"Z",(function(){return de.a})),n.d(t,"ab",(function(){return fe})),n.d(t,"bb",(function(){return me.a})),n.d(t,"cb",(function(){return be.a})),n.d(t,"db",(function(){return ge.a})),n.d(t,"eb",(function(){return ye.a})),n.d(t,"fb",(function(){return xe.a})),n.d(t,"gb",(function(){return ve.a})),n.d(t,"hb",(function(){return Oe.a})),n.d(t,"ib",(function(){return we.a})),n.d(t,"jb",(function(){return ke.a})),n.d(t,"kb",(function(){return Se})),n.d(t,"lb",(function(){return Ne.a})),n.d(t,"mb",(function(){return je.a})),n.d(t,"nb",(function(){return G.a})),n.d(t,"ob",(function(){return Te.a})),n.d(t,"pb",(function(){return Ce.a})),n.d(t,"qb",(function(){return $e.a})),n.d(t,"rb",(function(){return Ee.a})),n.d(t,"sb",(function(){return Ae.a})),n.d(t,"tb",(function(){return Re.a})),n.d(t,"ub",(function(){return Fe})),n.d(t,"vb",(function(){return De})),n.d(t,"wb",(function(){return _e})),n.d(t,"xb",(function(){return Me})),n.d(t,"yb",(function(){return ze.a})),n.d(t,"zb",(function(){return Le.a})),n.d(t,"Bb",(function(){return Pe.a})),n.d(t,"Cb",(function(){return Be.a})),n.d(t,"Db",(function(){return We.a})),n.d(t,"Eb",(function(){return Ue.a})),n.d(t,"Gb",(function(){return sub.a})),n.d(t,"Hb",(function(){return Ve.a})),n.d(t,"Ib",(function(){return Ge.a})),n.d(t,"Jb",(function(){return He.a})),n.d(t,"Kb",(function(){return qe.a})),n.d(t,"Lb",(function(){return Xe})),n.d(t,"Mb",(function(){return H.a})),n.d(t,"Ob",(function(){return Ye.a})),n.d(t,"Pb",(function(){return Ze.a})),n.d(t,"Qb",(function(){return Qe})),n.d(t,"Rb",(function(){return et.a})),n.d(t,"Sb",(function(){return tt.a})),n.d(t,"Tb",(function(){return nt.a})),n.d(t,"Nb",(function(){return at.a})),n.d(t,"A",(function(){return it})),n.d(t,"M",(function(){return hn})),n.d(t,"O",(function(){return pn})),n.d(t,"I",(function(){return r})),n.d(t,"Ab",(function(){return fn})),n.d(t,"Fb",(function(){return mn}));var r={};n.r(r),n.d(r,"conv2d",(function(){return vt})),n.d(r,"depthwiseConv2d",(function(){return kt})),n.d(r,"matMul",(function(){return It}));var o=n(797),c=n(414),l=n(1074),d=n(1075),h=n(1076),f=n(998),m=n(1138),y=n(370),x=n(967),v=n(959),O=n(368);const w=Object(O.a)({batchNorm2d_:function(e,t,n,r,o,c){const l=Object(y.a)(e,"x","batchNorm"),d=Object(y.a)(t,"mean","batchNorm"),h=Object(y.a)(n,"variance","batchNorm");let f,m;return null!=o&&(f=Object(y.a)(o,"scale","batchNorm")),null!=r&&(m=Object(y.a)(r,"offset","batchNorm")),x.b(2===l.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`)),x.b(2===d.rank||1===d.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${d.rank}.`)),x.b(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${h.rank}.`)),null!=f&&x.b(2===f.rank||1===f.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${f.rank}.`)),null!=m&&x.b(2===m.rank||1===m.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${m.rank}.`)),Object(v.a)(l,d,h,m,f,c)}});const k=Object(O.a)({batchNorm3d_:function(e,t,n,r,o,c){const l=Object(y.a)(e,"x","batchNorm"),d=Object(y.a)(t,"mean","batchNorm"),h=Object(y.a)(n,"variance","batchNorm");let f,m;return null!=o&&(f=Object(y.a)(o,"scale","batchNorm")),null!=r&&(m=Object(y.a)(r,"offset","batchNorm")),x.b(3===l.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`)),x.b(3===d.rank||1===d.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${d.rank}.`)),x.b(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${h.rank}.`)),null!=f&&x.b(3===f.rank||1===f.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${f.rank}.`)),null!=m&&x.b(3===m.rank||1===m.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${m.rank}.`)),Object(v.a)(l,d,h,m,f,c)}});const I=Object(O.a)({batchNorm4d_:function(e,t,n,r,o,c){const l=Object(y.a)(e,"x","batchNorm"),d=Object(y.a)(t,"mean","batchNorm"),h=Object(y.a)(n,"variance","batchNorm");let f,m;return null!=o&&(f=Object(y.a)(o,"scale","batchNorm")),null!=r&&(m=Object(y.a)(r,"offset","batchNorm")),x.b(4===l.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`)),x.b(4===d.rank||1===d.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${d.rank}.`)),x.b(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${h.rank}.`)),null!=f&&x.b(4===f.rank||1===f.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${f.rank}.`)),null!=m&&x.b(4===m.rank||1===m.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${m.rank}.`)),Object(v.a)(l,d,h,m,f,c)}});var S=n(784),N=n(391),j=n(1139),T=n(813),C=n(522);const $=Object(O.a)({concat1d_:function(e){return Object(C.a)(e,0)}});const E=Object(O.a)({concat2d_:function(e,t){return Object(C.a)(e,t)}});const A=Object(O.a)({concat3d_:function(e,t){return Object(C.a)(e,t)}});const R=Object(O.a)({concat4d_:function(e,t){return Object(C.a)(e,t)}});var F=n(1077),D=n(798),_=n(1078),M=n(1140),z=n(1141);const L=Object(O.a)({conv3dTranspose_:function(e,filter,t,n,r){const o=Object(y.a)(e,"x","conv3dTranspose"),c=Object(y.a)(filter,"filter","conv3dTranspose");return Object(z.a)(t,o,c,n,r)}});var P=n(971),div=n(399),B=n(1e3),W=n(972),U=n(580),V=n(973),G=n(378),H=n(814);const K=Object(O.a)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const o=Object(S.a)([e,t],r),c=e<=t?e:t;for(let i=0;i<c;++i)o.set(1,i,i);const l=Object(G.a)(o.toTensor(),[e,t]);if(null==n)return l;if(1===n.length)return Object(H.a)(Object(V.a)(l,0),[n[0],1,1]);if(2===n.length)return Object(H.a)(Object(V.a)(Object(V.a)(l,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(H.a)(Object(V.a)(Object(V.a)(Object(V.a)(l,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var X=n(974),Y=n(1001),Z=n(1002),J=n(581),Q=n(799),ee=n(1003),te=n(815),ne=n(1080),re=n(1142),ae=n(800),se=n(801),ie=n(816),oe=n(1004),ue=n(1143),ce=n(975),le=n(976),de=n(1005),he=n(552),pe=n(426),sub=n(404);const fe=Object(O.a)({moments_:function(e,t=null,n=!1){e=Object(y.a)(e,"x","moments");const r=Object(x.I)(t,e.shape),o=Object(le.a)(e,r,n);let c=o.shape;n||(c=Object(he.e)(o.shape,r));const l=Object(pe.a)(Object(sub.a)(Object(N.a)(e,"float32"),Object(G.a)(o,c)));return{mean:o,variance:Object(le.a)(l,r,n)}}});var me=n(380),be=n(469),ge=n(1006),ye=n(1081),xe=n(817),ve=n(1144),Oe=n(1007),we=n(802),ke=n(1008),Ie=n(1082);const Se=Object(O.a)({randomNormal_:function(e,t=0,n=1,r,o){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const c=new Ie.a(t,n,r,!1,o),l=Object(S.a)(e,r);for(let i=0;i<l.values.length;i++)l.values[i]=c.nextValue();return l.toTensor()}});var Ne=n(1084),je=n(819),Te=n(977),Ce=n(409),$e=n(1085),Ee=n(1086),Ae=n(978),Re=n(507);const Fe=Object(O.a)({slice1d_:function(e,t,n){const r=Object(y.a)(e,"x","slice1d");return x.b(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Object(Re.a)(r,[t],[n])}});const De=Object(O.a)({slice2d_:function(e,t,n){const r=Object(y.a)(e,"x","slice2d");return x.b(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Object(Re.a)(r,t,n)}});const _e=Object(O.a)({slice3d_:function(e,t,n){const r=Object(y.a)(e,"x","slice3d");return x.b(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Object(Re.a)(r,t,n)}});const Me=Object(O.a)({slice4d_:function(e,t,n){const r=Object(y.a)(e,"x","slice4d");return x.b(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Object(Re.a)(r,t,n)}});var ze=n(1145),Le=n(1087),Pe=n(803),Be=n(553),We=n(1009),Ue=n(804),Ve=n(417),Ge=n(1146),He=n(997),qe=n(805),Ke=n(970);function Xe(e,t,n){if(Object(x.d)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(y.c)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(Ke.a)(e,t,r,n)}var Ye=n(1147),Ze=n(820),Je=n(371);function Qe(e,t=!0,n,r){return Je.a.makeVariable(e,t,n,r)}var et=n(517),tt=n(818),nt=n(410),at=n(806),st=n(373);const it=Object(O.a)({dropout_:function(e,t,n,r){const o=Object(y.a)(e,"x","dropout");if(x.b("float32"===o.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`)),x.b(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof st.a?o.clone():o;const l=function(e,t){if(null==t)return e.shape.slice();if(x.a(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let i=0;i<e.shape.length;i++)null==t[i]&&null!=e.shape[i]?n.push(e.shape[i]):n.push(t[i]);return n}return t}(o,n),d=1-t,h=Object(div.a)(Object(Y.a)(Object(c.a)(Object(Ne.a)(l,0,1,"float32",r),d)),d);return Object(me.a)(o,h)}});var ot=n(1013),ut=n(1011),ct=n(1012),lt=n(1088),ht=n(506),pt=n(367),ft=n(413),mt=n(403),bt=n(1091),gt=n(1079),yt=n(430),xt=n(807);const vt=Object(O.a)({fusedConv2d_:function({x:e,filter:filter,strides:t,pad:n,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:l,bias:d,activation:h="linear",preluActivationWeights:f,leakyreluAlpha:m}){if(h=h||"linear",!1===Object(xt.d)(Je.a.state.gradientDepth,h)){let y=Object(D.a)(e,filter,t,n,r,o,l);return null!=d&&(y=Object(c.a)(y,d)),Object(xt.a)(y,h,f,m)}const v=Object(y.a)(e,"x","conv2d","float32"),O=Object(y.a)(filter,"filter","conv2d","float32");let w=v,k=!1;3===v.rank&&(k=!0,w=Object(G.a)(v,[1,v.shape[0],v.shape[1],v.shape[2]])),x.b(4===w.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${w.rank}.`)),x.b(4===O.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${O.rank}.`)),yt.a("fused conv2d",n,l),x.b(w.shape[3]===O.shape[2],(()=>`Error in conv2d: depth of input (${w.shape[3]}) must match input depth for filter ${O.shape[2]}.`)),x.b(yt.i(t,o),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`)),x.b("NHWC"===r,(()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`));const I=yt.b(w.shape,O.shape,t,o,n,l);let S,N;null!=d&&(S=Object(y.a)(d,"bias","fused conv2d"),[S]=Object(ft.makeTypesMatch)(S,v),mt.assertAndGetBroadcastShape(I.outShape,S.shape)),null!=f&&(N=Object(y.a)(f,"prelu weights","fused conv2d"));const j=(e,r)=>{const[c,l,d,f]=r,m=Object(xt.c)(e,d,h);x.b(yt.j(o),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`));const y=[Object(gt.a)(l.shape,m,c,t,n),Object(bt.a)(l,m,c.shape,t,n)];if(null!=f){const e=Object(xt.b)(f,m);y.push(e)}return y},T={x:w,filter:O,bias:S,preluActivationWeights:N},C={strides:t,pad:n,dataFormat:r,dilations:o,dimRoundingMode:l,activation:h,leakyreluAlpha:m};if(null==d){const e=Object(ht.a)(((e,filter,t)=>{let n=Je.a.runKernel(pt.lb,T,C);return t([filter,e,n]),k&&(n=Object(G.a)(n,[n.shape[1],n.shape[2],n.shape[3]])),{value:n,gradFunc:j}}));return e(w,O)}{const e=Object(ht.a)(((e,filter,t,n)=>{let r=Je.a.runKernel(pt.lb,T,C);return n([filter,e,r,t]),k&&(r=Object(G.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:j}}));return e(w,O,S)}}});var Ot=n(1151),wt=n(1150);const kt=Object(O.a)({fusedDepthwiseConv2d_:function({x:e,filter:filter,strides:t,pad:n,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:l,bias:d,activation:h="linear",preluActivationWeights:f,leakyreluAlpha:m}){if(!1===Object(xt.d)(Je.a.state.gradientDepth,h)){let y=Object(P.a)(e,filter,t,n,r,o,l);return null!=d&&(y=Object(c.a)(y,d)),Object(xt.a)(y,h,f,m)}const v=Object(y.a)(e,"x","depthwiseConv2d","float32"),O=Object(y.a)(filter,"filter","depthwiseConv2d","float32");let w=v,k=!1;3===v.rank&&(k=!0,w=Object(G.a)(v,[1,v.shape[0],v.shape[1],v.shape[2]])),x.b(4===w.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${w.rank}.`)),x.b(4===O.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${O.rank}.`)),x.b(w.shape[3]===O.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${w.shape[3]}) must match the inChannels dimension in filter ${O.shape[2]}.`)),null==o&&(o=[1,1]),x.b(yt.i(t,o),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`)),yt.a("fused depthwiseConv2d",n,l);const I=yt.b(w.shape,O.shape,t,o,n,l,!0);let S,N;null!=d&&(S=Object(y.a)(d,"bias","fused conv2d"),[S]=Object(ft.makeTypesMatch)(S,v),mt.assertAndGetBroadcastShape(I.outShape,S.shape)),null!=f&&(N=Object(y.a)(f,"prelu weights","fused depthwiseConv2d"));const j=(e,r)=>{x.b(yt.j(o),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[c,d,f,m]=r,y=Object(xt.c)(e,f,h),v=Object(wt.a)(d.shape,y,c,t,n,o,l),O=Object(Ot.a)(d,y,c.shape,t,n,o,l);if(null!=m){return[v,O,Object(xt.b)(S,y)]}return[v,O]},T={x:w,filter:O,bias:S,preluActivationWeights:N},C={strides:t,pad:n,dataFormat:r,dilations:o,dimRoundingMode:l,activation:h,leakyreluAlpha:m};if(null==d){const e=Object(ht.a)(((e,filter,t)=>{let n=Je.a.runKernel(pt.mb,T,C);return t([filter,e,n]),k&&(n=Object(G.a)(n,[n.shape[1],n.shape[2],n.shape[3]])),{value:n,gradFunc:j}}));return e(w,O)}{const e=Object(ht.a)(((e,filter,t,n)=>{let r=Je.a.runKernel(pt.mb,T,C);return n([filter,e,r,t]),k&&(r=Object(G.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:j}}));return e(w,O,S)}}});const It=Object(O.a)({fusedMatMul_:function({a:a,b:b,transposeA:e=!1,transposeB:t=!1,bias:n,activation:r="linear",preluActivationWeights:o,leakyreluAlpha:l}){if(!1===Object(xt.d)(Je.a.state.gradientDepth,r)){let d=Object(se.a)(a,b,e,t);return null!=n&&(d=Object(c.a)(d,n)),Object(xt.a)(d,r,o,l)}let d=Object(y.a)(a,"a","fused matMul"),h=Object(y.a)(b,"b","fused matMul");[d,h]=Object(ft.makeTypesMatch)(d,h);const f=e?d.shape[d.rank-2]:d.shape[d.rank-1],m=t?h.shape[h.rank-1]:h.shape[h.rank-2],v=e?d.shape[d.rank-1]:d.shape[d.rank-2],O=t?h.shape[h.rank-2]:h.shape[h.rank-1],w=d.shape.slice(0,-2),k=h.shape.slice(0,-2),I=x.O(w),S=x.O(k);x.b(f===m,(()=>`Error in fused matMul: inner shapes (${f}) and (${m}) of Tensors with shapes ${d.shape} and ${h.shape} and transposeA=${e} and transposeB=${t} must match.`));const N=mt.assertAndGetBroadcastShape(d.shape.slice(0,-2),h.shape.slice(0,-2)).concat([v,O]),j=e?Object(G.a)(d,[I,f,v]):Object(G.a)(d,[I,v,f]),T=t?Object(G.a)(h,[S,O,m]):Object(G.a)(h,[S,m,O]);let C,$;null!=n&&(C=Object(y.a)(n,"bias","fused matMul"),[C]=Object(ft.makeTypesMatch)(C,d),mt.assertAndGetBroadcastShape(N,C.shape)),null!=o&&($=Object(y.a)(o,"prelu weights","fused matMul"));const E=(o,c)=>{const[l,d,h,f]=c,m=Object(xt.c)(Object(G.a)(o,h.shape),h,r);let y,x;if(e||t?!e&&t?(y=Object(se.a)(m,d,!1,!1),x=Object(se.a)(m,l,!0,!1)):e&&!t?(y=Object(se.a)(d,m,!1,!0),x=Object(se.a)(l,m,!1,!1)):(y=Object(se.a)(d,m,!0,!0),x=Object(se.a)(m,l,!0,!0)):(y=Object(se.a)(m,d,!1,!0),x=Object(se.a)(l,m,!0,!1)),null!=n){return[y,x,Object(xt.b)(f,m)]}return[y,x]},A={a:j,b:T,bias:C,preluActivationWeights:$},R={transposeA:e,transposeB:t,activation:r,leakyreluAlpha:l};if(null==n){const e=Object(ht.a)(((e,t,n)=>{const r=Je.a.runKernel(pt.jd,A,R);return n([e,t,r]),{value:Object(G.a)(r,N),gradFunc:E}}));return e(j,T)}{const e=Object(ht.a)(((e,t,n,r)=>{const o=Je.a.runKernel(pt.jd,A,R);return r([e,t,o,n]),{value:Object(G.a)(o,N),gradFunc:E}}));return e(j,T,C)}}});function St(e,a,b){const t=1-e%2,n=new Float32Array(e);for(let i=0;i<e;++i){const r=2*Math.PI*i/(e+t-1);n[i]=a-b*Math.cos(r)}return Object(qe.a)(n,"float32")}Object(O.a)({hammingWindow_:function(e){return St(e,.54,.46)}});const Nt=Object(O.a)({hannWindow_:function(e){return St(e,.5,.5)}});const jt=Object(O.a)({frame_:function(e,t,n,r=!1,o=0){let c=0;const output=[];for(;c+t<=e.size;)output.push(Object(Re.a)(e,c,t)),c+=n;if(r)for(;c<e.size;){const r=c+t-e.size,l=Object(C.a)([Object(Re.a)(e,c,t-r),Object(X.a)([r],o)]);output.push(l),c+=n}return 0===output.length?Xe([],[0,t]):Object(G.a)(Object(C.a)(output),[output.length,t])}});Object(O.a)({stft_:function(e,t,n,r,o=Nt){var c;null==r&&(c=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(c)/Math.log(2)))));const l=jt(e,t,n),d=Object(me.a)(l,o(t));return Object(ot.a)(d,r)}});const Tt=Object(O.a)({cropAndResize_:function(image,e,t,n,r="bilinear",o=0){const c=Object(y.a)(image,"image","cropAndResize"),l=Object(y.a)(e,"boxes","cropAndResize","float32"),d=Object(y.a)(t,"boxInd","cropAndResize","int32"),h=l.shape[0];x.b(4===c.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${c.rank}.`)),x.b(2===l.rank&&4===l.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${h},4] but had shape ${l.shape}.`)),x.b(1===d.rank&&d.shape[0]===h,(()=>`Error in cropAndResize: boxInd must be have size [${h}] but had shape ${l.shape}.`)),x.b(2===n.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`)),x.b(n[0]>=1&&n[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${n}`)),x.b("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const f={image:c,boxes:l,boxInd:d},m={method:r,extrapolationValue:o,cropSize:n};return Je.a.runKernel(pt.L,f,m)}});const Ct=Object(O.a)({flipLeftRight_:function(image){const e=Object(y.a)(image,"image","flipLeftRight","float32");x.b(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const t={image:e};return Je.a.runKernel(pt.gb,t,{})}});const $t=Object(O.a)({grayscaleToRGB_:function(image){const e=Object(y.a)(image,"image","grayscaleToRGB"),t=e.rank-1,n=e.shape[t];x.b(e.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`)),x.b(1===n,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`));const r=new Array(e.rank);return r.fill(1,0,t),r[t]=3,Object(H.a)(e,r)}});const Et=Object(O.a)({rotateWithOffset_:function(image,e,t=0,n=.5){const r=Object(y.a)(image,"image","rotateWithOffset","float32");x.b(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const o={image:r},c={radians:e,fillValue:t,center:n};return Je.a.runKernel(pt.vc,o,c)}});function At(e,t,n,r,o,c){null==r&&(r=.5),null==o&&(o=Number.NEGATIVE_INFINITY),null==c&&(c=0);const l=e.shape[0];return n=Math.min(n,l),x.b(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),x.b(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),x.b(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),x.b(1===t.rank,(()=>"scores must be a 1D tensor")),x.b(t.shape[0]===l,(()=>`scores has incompatible shape with boxes. Expected ${l}, but was ${t.shape[0]}`)),x.b(0<=c&&c<=1,(()=>`softNmsSigma must be in [0, 1], but was '${c}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:o,softNmsSigma:c}}const Rt=Object(O.a)({nonMaxSuppression_:function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY){const c=Object(y.a)(e,"boxes","nonMaxSuppression","float32"),l=Object(y.a)(t,"scores","nonMaxSuppression","float32"),d=At(c,l,n,r,o),h={maxOutputSize:n=d.maxOutputSize,iouThreshold:r=d.iouThreshold,scoreThreshold:o=d.scoreThreshold};return Je.a.runKernel(pt.Yb,{boxes:c,scores:l},h)}});var Ft=n(810);const Dt=async function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY){const c=Object(y.a)(e,"boxes","nonMaxSuppressionAsync"),l=Object(y.a)(t,"scores","nonMaxSuppressionAsync"),d=At(c,l,n,r,o);n=d.maxOutputSize,r=d.iouThreshold,o=d.scoreThreshold;const h=await Promise.all([c.data(),l.data()]),f=h[0],m=h[1],{selectedIndices:x}=Object(Ft.a)(f,m,n,r,o);return c!==e&&c.dispose(),l!==t&&l.dispose(),Object(qe.a)(x,"int32")};const _t=Object(O.a)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,c=0){const l=Object(y.a)(e,"boxes","nonMaxSuppression"),d=Object(y.a)(t,"scores","nonMaxSuppression"),h=At(l,d,n,r,o,c),f={boxes:l,scores:d},m={maxOutputSize:n=h.maxOutputSize,iouThreshold:r=h.iouThreshold,scoreThreshold:o=h.scoreThreshold,softNmsSigma:c=h.softNmsSigma},x=Je.a.runKernel(pt.ac,f,m);return{selectedIndices:x[0],selectedScores:x[1]}}});const Mt=async function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,c=0){const l=Object(y.a)(e,"boxes","nonMaxSuppressionAsync"),d=Object(y.a)(t,"scores","nonMaxSuppressionAsync"),h=At(l,d,n,r,o,c);n=h.maxOutputSize,r=h.iouThreshold,o=h.scoreThreshold,c=h.softNmsSigma;const f=await Promise.all([l.data(),d.data()]),m=f[0],x=f[1],{selectedIndices:v,selectedScores:O}=Object(Ft.c)(m,x,n,r,o,c);return l!==e&&l.dispose(),d!==t&&d.dispose(),{selectedIndices:Object(qe.a)(v,"int32"),selectedScores:Object(qe.a)(O)}};const zt=Object(O.a)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,c=!1){const l=Object(y.a)(e,"boxes","nonMaxSuppression"),d=Object(y.a)(t,"scores","nonMaxSuppression"),h=At(l,d,n,r,o,null),f={boxes:l,scores:d},m={maxOutputSize:h.maxOutputSize,iouThreshold:h.iouThreshold,scoreThreshold:h.scoreThreshold,padToMaxOutputSize:c},x=Je.a.runKernel(pt.Zb,f,m);return{selectedIndices:x[0],validOutputs:x[1]}}});const Lt=async function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,c=!1){const l=Object(y.a)(e,"boxes","nonMaxSuppressionAsync"),d=Object(y.a)(t,"scores","nonMaxSuppressionAsync"),h=At(l,d,n,r,o,null),f=h.maxOutputSize,m=h.iouThreshold,x=h.scoreThreshold,[v,O]=await Promise.all([l.data(),d.data()]),{selectedIndices:w,validOutputs:k}=Object(Ft.b)(v,O,f,m,x,c);return l!==e&&l.dispose(),d!==t&&d.dispose(),{selectedIndices:Object(qe.a)(w,"int32"),validOutputs:Object(Ce.a)(k,"int32")}};var Pt=n(1149),Bt=n(1148),Wt=n(1089),Ut=n(785),Vt=n(1090),Gt=n(1016);const Ht=Object(O.a)({threshold_:function(image,e="binary",t=!1,n=.5){const r=Object(y.a)(image,"image","threshold"),o=r.shape[0]*r.shape[1];let l,g,b,d,h=Object(me.a)(Object(qe.a)([n]),255);if(x.b(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),x.b(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),x.b("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),x.b("otsu"===e||"binary"===e,(()=>`Method must be binary or otsu, but was ${e}`)),3===r.shape[2]){[l,g,b]=Object(Pe.a)(r,[1,1,1],-1);const e=Object(me.a)(l,.2989),t=Object(me.a)(g,.587),n=Object(me.a)(b,.114);d=Object(c.a)(Object(c.a)(e,t),n)}else d=image;if("otsu"===e){h=function(e,t){let n,r,o,l,d,h,f=Object(qe.a)([-1]),m=Object(qe.a)([0]),y=Object(qe.a)([0]);for(let x=0;x<e.size-1;x++){n=Object(Re.a)(e,0,x+1),r=Object(Re.a)(e,x+1),d=Object(div.a)(Object(Ve.a)(n),t),h=Object(div.a)(Object(Ve.a)(r),t);const v=Object(Ve.a)(Object(me.a)(n,Object(Gt.a)(0,n.size)));o=Object(div.a)(v,Object(Ve.a)(n));const O=Object(X.a)(r.shape,n.size),w=Object(c.a)(Object(Gt.a)(0,r.size),O),k=Object(me.a)(r,w);l=Object(div.a)(Object(Ve.a)(k),Object(Ve.a)(r));const I=Object(sub.a)(o,l),S=Object(sub.a)(o,l),N=Object(me.a)(d,h);y=Object(me.a)(Object(me.a)(N,I),S);const j=Object(J.a)(y,m);m=Object(et.a)(j,y,m),f=Object(et.a)(j,Object(qe.a)([x]),f)}return f}(Object(Wt.a)(Object(N.a)(Object(Vt.a)(d),"int32"),Object(He.a)([]),256),o)}const f=t?Object(Ut.a)(d,h):Object(J.a)(d,h);return Object(N.a)(Object(me.a)(f,255),"int32")}});const qt=Object(O.a)({transform_:function(image,e,t="nearest",n="constant",r=0,o){const c=Object(y.a)(image,"image","transform","float32"),l=Object(y.a)(e,"transforms","transform","float32");x.b(4===c.rank,(()=>`Error in transform: image must be rank 4,but got rank ${c.rank}.`)),x.b(2===l.rank&&(l.shape[0]===c.shape[0]||1===l.shape[0])&&8===l.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),x.b(null==o||2===o.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`));const d={image:c,transforms:l},h={interpolation:t,fillMode:n,fillValue:r,outputShape:o};return Je.a.runKernel(pt.dd,d,h)}});const Kt=Object(O.a)({bandPart_:function(a,e,t){Object(x.b)(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),Object(x.b)(t%1==0,(()=>`bandPart(): numUpper must be an integer, got ${t}.`));const n=Object(y.a)(a,"a","bandPart");Object(x.b)(n.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`));const r=n.shape,[o,c]=n.shape.slice(-2);if(!(e<=o))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`);if(!(t<=c))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${c}).`);e<0&&(e=o),t<0&&(t=c);const i=Object(G.a)(Object(Gt.a)(0,o,1,"int32"),[-1,1]),l=Object(Gt.a)(0,c,1,"int32"),d=Object(sub.a)(i,l),h=Object(ae.a)(Object(Ut.a)(d,Object(Ce.a)(+e,"int32")),Object(Q.a)(d,Object(Ce.a)(-t,"int32"))),f=Object(tt.a)([o,c],n.dtype);return Object(G.a)(Object(Ue.a)(Object(Ze.a)(Object(G.a)(n,[-1,o,c])).map((e=>Object(et.a)(h,e,f)))),r)}});var Xt=n(1017);const Yt=Object(O.a)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Object(x.b)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let i=1;i<e.length;++i)Object(x.b)(e[i].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[i].shape[0]} vs. ${n})`))}else t=!0,e=Object(Pe.a)(e,e.shape[0],0).map((e=>Object(We.a)(e,[0])));Object(x.b)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let i=0;i<e.length;++i)n.push(Je.a.tidy((()=>{let e=r[i];if(i>0)for(let t=0;t<i;++t){const r=Object(me.a)(Object(Ve.a)(Object(me.a)(n[t],e)),n[t]);e=Object(sub.a)(e,r)}return Object(div.a)(e,Object(Xt.a)(e,"euclidean"))})));return t?Object(Ue.a)(n,0):n}});var Zt=n(551);function Jt(e,t=!1){return Je.a.tidy((()=>{Object(x.b)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let q=K(n),o=Object(T.a)(e);const c=Xe([[1]],[1,1]);let l=Object(T.a)(c);const d=n>=r?r:n;for(let e=0;e<d;++e){const t=o,d=l,h=q;[l,o,q]=Je.a.tidy((()=>{const t=Object(Re.a)(o,[e,e],[n-e,1]),d=Object(Xt.a)(t),h=Object(Re.a)(o,[e,e],[1,1]),s=Object(et.a)(Object(J.a)(h,0),Xe([[-1]]),Xe([[1]])),f=Object(sub.a)(h,Object(me.a)(s,d)),m=Object(div.a)(t,f);l=1===m.shape[0]?Object(T.a)(c):Object(C.a)([c,Object(Re.a)(m,[1,0],[m.shape[0]-1,m.shape[1]])],0);const y=Object(be.a)(Object(div.a)(Object(se.a)(s,f),d)),x=Object(Re.a)(o,[e,0],[n-e,r]),v=Object(me.a)(y,l),O=Object(at.a)(l);if(0===e)o=Object(sub.a)(x,Object(se.a)(v,Object(se.a)(O,x)));else{const t=Object(sub.a)(x,Object(se.a)(v,Object(se.a)(O,x)));o=Object(C.a)([Object(Re.a)(o,[0,0],[e,r]),t],0)}const w=Object(at.a)(v),k=Object(Re.a)(q,[0,e],[n,q.shape[1]-e]);if(0===e)q=Object(sub.a)(k,Object(se.a)(Object(se.a)(k,l),w));else{const t=Object(sub.a)(k,Object(se.a)(Object(se.a)(k,l),w));q=Object(C.a)([Object(Re.a)(q,[0,0],[n,e]),t],1)}return[l,o,q]})),Object(Zt.b)([t,d,h])}return!t&&n>r&&(q=Object(Re.a)(q,[0,0],[n,r]),o=Object(Re.a)(o,[0,0],[r,r])),[q,o]}))}const Qt=Object(O.a)({qr_:function(e,t=!1){if(Object(x.b)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Jt(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Object(Ze.a)(Object(G.a)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),o=[],c=[];r.forEach((e=>{const[n,r]=Jt(e,t);o.push(n),c.push(r)}));return[Object(G.a)(Object(Ue.a)(o,0),e.shape),Object(G.a)(Object(Ue.a)(c,0),e.shape)]}}});var en=n(554);const tn=Object(O.a)({computeWeightedLoss_:function(e,t,n=en.a.SUM_BY_NONZERO_WEIGHTS){const r=Object(y.a)(e,"losses","computeWeightedLoss");let o=null;null!=t&&(o=Object(y.a)(t,"weights","computeWeightedLoss"));const c=null==o?r:Object(me.a)(r,o);if(n===en.a.NONE)return c;if(n===en.a.SUM)return Object(Ve.a)(c);if(n===en.a.MEAN){if(null==o)return Object(le.a)(c);{const e=r.size/o.size,t=Object(div.a)(Object(Ve.a)(c),Object(Ve.a)(o));return e>1?Object(div.a)(t,Object(Ce.a)(e)):t}}if(n===en.a.SUM_BY_NONZERO_WEIGHTS){if(null==o)return Object(div.a)(Object(Ve.a)(c),Object(Ce.a)(r.size));{const e=Object(me.a)(o,Object(xe.a)(r.shape)),t=Object(N.a)(Object(Ve.a)(Object(ge.a)(e,Object(Ce.a)(0))),"float32");return Object(div.a)(Object(Ve.a)(c),t)}}throw Error(`Unknown reduction: ${n}`)}});Object(O.a)({absoluteDifference_:function(e,t,n,r=en.a.SUM_BY_NONZERO_WEIGHTS){const c=Object(y.a)(e,"labels","absoluteDifference"),l=Object(y.a)(t,"predictions","absoluteDifference");let d=null;null!=n&&(d=Object(y.a)(n,"weights","absoluteDifference")),Object(x.e)(c.shape,l.shape,"Error in absoluteDifference: ");const h=Object(o.a)(Object(sub.a)(c,l));return tn(h,d,r)}});Object(O.a)({cosineDistance_:function(e,t,n,r,o=en.a.SUM_BY_NONZERO_WEIGHTS){const c=Object(y.a)(e,"labels","cosineDistance"),l=Object(y.a)(t,"predictions","cosineDistance");let d=null;null!=r&&(d=Object(y.a)(r,"weights","cosineDistance")),Object(x.e)(c.shape,l.shape,"Error in cosineDistance: ");const h=Object(Ce.a)(1),f=Object(sub.a)(h,Object(Ve.a)(Object(me.a)(c,l),n,!0));return tn(f,d,o)}});Object(O.a)({hingeLoss_:function(e,t,n,r=en.a.SUM_BY_NONZERO_WEIGHTS){let o=Object(y.a)(e,"labels","hingeLoss");const c=Object(y.a)(t,"predictions","hingeLoss");let l=null;null!=n&&(l=Object(y.a)(n,"weights","hingeLoss")),Object(x.e)(o.shape,c.shape,"Error in hingeLoss: ");const d=Object(Ce.a)(1);o=Object(sub.a)(Object(me.a)(Object(Ce.a)(2),o),d);const h=Object(je.a)(Object(sub.a)(d,Object(me.a)(o,c)));return tn(h,l,r)}});Object(O.a)({huberLoss_:function(e,t,n,r=1,l=en.a.SUM_BY_NONZERO_WEIGHTS){const d=Object(y.a)(e,"labels","huberLoss"),h=Object(y.a)(t,"predictions","huberLoss");let f=null;null!=n&&(f=Object(y.a)(n,"weights","huberLoss")),Object(x.e)(d.shape,h.shape,"Error in huberLoss: ");const m=Object(Ce.a)(r),v=Object(o.a)(Object(sub.a)(h,d)),O=Object(de.a)(v,m),w=Object(sub.a)(v,O),k=Object(c.a)(Object(me.a)(Object(Ce.a)(.5),Object(pe.a)(O)),Object(me.a)(m,w));return tn(k,f,l)}});Object(O.a)({logLoss_:function(e,t,n,r=1e-7,o=en.a.SUM_BY_NONZERO_WEIGHTS){const l=Object(y.a)(e,"labels","logLoss"),d=Object(y.a)(t,"predictions","logLoss");let h=null;null!=n&&(h=Object(y.a)(n,"weights","logLoss")),Object(x.e)(l.shape,d.shape,"Error in logLoss: ");const f=Object(Ce.a)(1),m=Object(Ce.a)(r),v=Object(be.a)(Object(me.a)(l,Object(te.a)(Object(c.a)(d,m)))),O=Object(me.a)(Object(sub.a)(f,l),Object(te.a)(Object(c.a)(Object(sub.a)(f,d),m))),w=Object(sub.a)(v,O);return tn(w,h,o)}});var nn=n(1019);Object(O.a)({meanSquaredError_:function(e,t,n,r=en.a.SUM_BY_NONZERO_WEIGHTS){const o=Object(y.a)(e,"labels","meanSquaredError"),c=Object(y.a)(t,"predictions","meanSquaredError");let l=null;null!=n&&(l=Object(y.a)(n,"weights","meanSquaredError")),Object(x.e)(o.shape,c.shape,"Error in meanSquaredError: ");const d=Object(nn.a)(o,c);return tn(d,l,r)}});Object(O.a)({sigmoidCrossEntropy_:function(e,t,n,r=0,l=en.a.SUM_BY_NONZERO_WEIGHTS){let d=Object(y.a)(e,"multiClassLabels","sigmoidCrossEntropy");const h=Object(y.a)(t,"logits","sigmoidCrossEntropy");let f=null;if(null!=n&&(f=Object(y.a)(n,"weights","sigmoidCrossEntropy")),Object(x.e)(d.shape,h.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Object(Ce.a)(r),t=Object(Ce.a)(1),n=Object(Ce.a)(.5);d=Object(c.a)(Object(me.a)(d,Object(sub.a)(t,e)),Object(me.a)(n,e))}const m=function(e,t){const n=Object(y.a)(e,"labels","sigmoidCrossEntropyWithLogits"),r=Object(y.a)(t,"logits","sigmoidCrossEntropyWithLogits");Object(x.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const l=Object(je.a)(r),d=Object(me.a)(r,n),h=Object(ne.a)(Object(U.a)(Object(be.a)(Object(o.a)(r))));return Object(c.a)(Object(sub.a)(l,d),h)}(d,h);return tn(m,f,l)}});var rn=n(1020);Object(O.a)({softmaxCrossEntropy_:function(e,t,n,r=0,o=en.a.SUM_BY_NONZERO_WEIGHTS){let l=Object(y.a)(e,"onehotLabels","softmaxCrossEntropy");const d=Object(y.a)(t,"logits","softmaxCrossEntropy");let h=null;if(null!=n&&(h=Object(y.a)(n,"weights","softmaxCrossEntropy")),Object(x.e)(l.shape,d.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Object(Ce.a)(r),t=Object(Ce.a)(1),n=Object(Ce.a)(l.shape[1]);l=Object(c.a)(Object(me.a)(l,Object(sub.a)(t,e)),Object(div.a)(e,n))}const f=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=Object(ht.a)(((e,t,r)=>{const o=Object(rn.a)(t,[n],!0),c=Object(sub.a)(Object(N.a)(t,"float32"),o);r([e,c]);const l=Object(be.a)(Object(me.a)(c,e));return{value:Object(Ve.a)(l,[n]),gradFunc:(e,t)=>{const[r,o]=t,c=Object(he.e)(e.shape,[n]);return[Object(me.a)(Object(G.a)(e,c),Object(sub.a)(Object(N.a)(r,"float32"),Object(U.a)(o))),Object(me.a)(Object(G.a)(e,c),Object(sub.a)(Object(U.a)(o),Object(N.a)(r,"float32")))]}}}));return r(e,t)}(l,d);return tn(f,h,o)}});const an=Object(O.a)({sparseFillEmptyRows_:function(e,t,n,r){const o=Object(y.a)(e,"indices","sparseFillEmptyRows","int32"),c=Object(y.a)(t,"values","sparseFillEmptyRows"),l=Object(y.a)(n,"denseShape","sparseFillEmptyRows","int32"),d=Object(y.a)(r,"defaultValue","sparseFillEmptyRows",c.dtype);if(2!==o.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${o.shape}`);if(1!==c.rank)throw new Error(`Values should be Tensor1D but received shape ${c.shape}`);if(1!==l.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${l.shape}`);if(0!==d.rank)throw new Error(`Default value should be a scalar but received shape ${d.shape}`);const h={indices:o,values:c,denseShape:l,defaultValue:d},f=Je.a.runKernel(pt.Jc,h);return{outputIndices:f[0],outputValues:f[1],emptyRowIndicator:f[2],reverseIndexMap:f[3]}}});const sn=Object(O.a)({sparseReshape_:function(e,t,n){const r=Object(y.a)(e,"inputIndices","sparseReshape","int32"),o=Object(y.a)(t,"inputShape","sparseReshape","int32"),c=Object(y.a)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==o.rank)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(1!==c.rank)throw new Error(`New shape should be Tensor1D but received shape ${c.shape}`);const l={inputIndices:r,inputShape:o,newShape:c},d=Je.a.runKernel(pt.Kc,l);return{outputIndices:d[0],outputShape:d[1]}}});const on=Object(O.a)({sparseSegmentMean_:function(data,e,t){const n=Object(y.a)(data,"data","sparseSegmentMean"),r=Object(y.a)(e,"indices","sparseSegmentMean","int32"),o=Object(y.a)(t,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==o.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${o.shape}`);const c={data:n,indices:r,segmentIds:o};return Je.a.runKernel(pt.Lc,c)}});const un=Object(O.a)({sparseSegmentSum_:function(data,e,t){const n=Object(y.a)(data,"data","sparseSegmentSum"),r=Object(y.a)(e,"indices","sparseSegmentSum","int32"),o=Object(y.a)(t,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==o.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${o.shape}`);const c={data:n,indices:r,segmentIds:o};return Je.a.runKernel(pt.Mc,c)}});const cn=Object(O.a)({stringNGrams_:function(data,e,t,n,r,o,c,l){const d=Object(y.a)(data,"data","stringNGrams","string");if("string"!==d.dtype)throw new Error("Data must be of datatype string");if(1!==d.shape.length)throw new Error(`Data must be a vector, saw: ${d.shape}`);const h=Object(y.a)(e,"dataSplits","stringNGrams");if("int32"!==h.dtype)throw new Error("Data splits must be of datatype int32");const f={separator:t,nGramWidths:n,leftPad:r,rightPad:o,padWidth:c,preserveShortSequences:l},m={data:d,dataSplits:h},x=Je.a.runKernel(pt.Uc,m,f);return{nGrams:x[0],nGramsSplits:x[1]}}});const ln=Object(O.a)({stringSplit_:function(input,e,t=!0){const n=Object(y.a)(input,"input","stringSplit","string"),r=Object(y.a)(e,"delimiter","stringSplit","string");if(1!==n.rank)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const o={skipEmpty:t},c={input:n,delimiter:r},l=Je.a.runKernel(pt.Vc,c,o);return{indices:l[0],values:l[1],shape:l[2]}}});const dn=Object(O.a)({stringToHashBucketFast_:function(input,e){const t=Object(y.a)(input,"input","stringToHashBucketFast","string"),n={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:t};return Je.a.runKernel(pt.Wc,r,n)}}),hn=(ut.a,ct.a,ot.a,lt.a,{flipLeftRight:Ct,grayscaleToRGB:$t,resizeNearestNeighbor:Bt.a,resizeBilinear:Pt.a,rotateWithOffset:Et,cropAndResize:Tt,nonMaxSuppression:Rt,nonMaxSuppressionAsync:Dt,nonMaxSuppressionWithScore:_t,nonMaxSuppressionWithScoreAsync:Mt,nonMaxSuppressionPadded:zt,nonMaxSuppressionPaddedAsync:Lt,threshold:Ht,transform:qt}),pn={bandPart:Kt,gramSchmidt:Yt,qr:Qt},fn={sparseFillEmptyRows:an,sparseReshape:sn,sparseSegmentMean:on,sparseSegmentSum:un},mn={stringNGrams:cn,stringSplit:ln,stringToHashBucketFast:dn}},,,,,,,,,function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368);const h=Object(d.a)({cast_:function(e,t){const n=Object(c.a)(e,"x","cast");if(!l.B(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const d={x:n},h={dtype:t};return r.a.runKernel(o.x,d,h)}})},,,,,function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},,,function(e,t,n){"use strict";n.d(t,"a",(function(){return div}));var r=n(371),o=n(367),c=n(413),l=n(370),d=n(999),h=n(368);const div=Object(h.a)({div_:function(a,b){let e=Object(l.a)(a,"a","div"),t=Object(l.a)(b,"b","div");if([e,t]=Object(c.makeTypesMatch)(e,t),"int32"===e.dtype&&"int32"===t.dtype)return Object(d.a)(e,t);const n={a:e,b:t};return r.a.runKernel(o.lc,n,{})}})},,,,function(e,t,n){"use strict";function r(e,t){const n=e.length,r=[];for(let i=0;i<n;i++){const o=n-1-i,a=e[o]||1;(t[t.length-1-i]||1)>1&&1===a&&r.unshift(o)}return r}function o(e,t){const n=[];for(let i=0;i<t.length;i++){const r=e[e.length-i-1],o=t.length-i-1,c=t[o];(null==r||1===r&&c>1)&&n.unshift(o)}return n}function c(e,t){const n=[],r=Math.max(e.length,t.length);for(let i=0;i<r;i++){let a=e[e.length-i-1];null==a&&(a=1);let b=t[t.length-i-1];if(null==b&&(b=1),1===a)n.unshift(b);else if(1===b)n.unshift(a);else{if(a!==b){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(a)}}return n}n.r(t),n.d(t,"getBroadcastDims",(function(){return r})),n.d(t,"getReductionAxes",(function(){return o})),n.d(t,"assertAndGetBroadcastShape",(function(){return c}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return sub}));var r=n(371),o=n(367),c=n(413),l=n(370),d=n(368);const sub=Object(d.a)({sub_:function(a,b){let e=Object(l.a)(a,"a","sub"),t=Object(l.a)(b,"b","sub");[e,t]=Object(c.makeTypesMatch)(e,t);const n={a:e,b:t};return r.a.runKernel(o.Xc,n)}})},,,,,function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(967),o=n(970);function c(e,t){if((Object(r.A)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Object(r.A)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(o.a)(e,[],[],t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({zerosLike_:function(e){const t={x:Object(c.a)(e,"x","zerosLike")};return r.a.runKernel(o.id,t)}})},,,function(e,t,n){"use strict";n.r(t),n.d(t,"makeTypesMatch",(function(){return l})),n.d(t,"assertTypesMatch",(function(){return d})),n.d(t,"isTensorInList",(function(){return h})),n.d(t,"getTensorsInContainer",(function(){return f}));var r=n(373),o=n(795),c=n(967);function l(a,b){if(a.dtype===b.dtype)return[a,b];const e=Object(o.b)(a.dtype,b.dtype);return[a.cast(e),b.cast(e)]}function d(a,b){Object(c.b)(a.dtype===b.dtype,(()=>`The dtypes of the first(${a.dtype}) and second(${b.dtype}) input must match`))}function h(e,t){return t.some((t=>t.id===e.id))}function f(e){const t=[];return m(e,t,new Set),t}function m(e,t,n){if(null==e)return;if(e instanceof r.a)return void t.push(e);if(o=e,!Array.isArray(o)&&"object"!=typeof o)return;var o;const c=e;for(const e in c){const r=c[e];n.has(r)||(n.add(r),m(r,t,n))}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(413),l=n(370),d=n(368);const h=Object(d.a)({add_:function(a,b){let e=Object(l.a)(a,"a","add"),t=Object(l.a)(b,"b","add");[e,t]=Object(c.makeTypesMatch)(e,t);const n={a:e,b:t};return r.a.runKernel(o.d,n)}})},,,function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(391),d=n(368);const h=Object(d.a)({sum_:function(e,t=null,n=!1){let d=Object(c.a)(e,"x","sum");"bool"===d.dtype&&(d=Object(l.a)(d,"int32"));const h={x:d},f={axis:t,keepDims:n};return r.a.runKernel(o.Yc,h,f)}})},,,,,,,,function(e,t,n){"use strict";n.d(t,"d",(function(){return o})),n.d(t,"e",(function(){return c})),n.d(t,"f",(function(){return l})),n.d(t,"b",(function(){return d})),n.d(t,"g",(function(){return f})),n.d(t,"c",(function(){return m})),n.d(t,"a",(function(){return y}));var r=n(366);function o(e,t,n,o,l){const d=t.inputParams[e];if(d&&void 0!==d.inputIndexStart){const e=d.inputIndexStart,h=0===d.inputIndexEnd?void 0:void 0===d.inputIndexEnd?e+1:d.inputIndexEnd;if("tensor"===d.type)return c(t.inputNames[d.inputIndexStart],n,o,l);if("tensors"===d.type){return t.inputNames.slice(e,h).map((e=>c(e,n,o,l)))}const f=c(t.inputNames.slice(e)[0],n,o,l),data=f.dataSync();return"number"===d.type?data[0]:r.yf.toNestedArray(f.shape,data)}const h=t.attrParams[e];return h&&h.value}function c(e,t,n,r){const[o,c]=f(e);if(null!=r){const e=r.getHashTableHandleByName(o);if(null!=e)return e}const l=n.currentContextIds.find((e=>!!t[h(o,e)]));return void 0!==l?t[h(o,l)][c]:void 0}function l(e,t,n){return t[h(e,n.currentContextId)]}function d(e,t){const[n,r,o]=f(e);return[h(n,t&&t.currentContextId),r,o]}function h(e,t){return t?`${e}-${t}`:e}function f(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function m(e,t,n){let r=o("pad",e,t,n);if("explicit"===r){r=o("explicitPaddings",e,t,n);const c=[[0,0],[0,0],[0,0],[0,0]];for(let i=0;i<4;i++)c[i][0]=r[2*i],c[i][1]=r[2*i+1];return c}return r}function y(e){return e.kept?e:Object(r.Ed)(e)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(371),o=n(370),c=n(368);const l=Object(c.a)({square_:function(e){const t=Object(o.a)(e,"x","square");return r.a.runKernel("Square",{x:t},{})}})},,,,function(e,t,n){"use strict";n.d(t,"e",(function(){return o})),n.d(t,"f",(function(){return c})),n.d(t,"g",(function(){return l})),n.d(t,"b",(function(){return d})),n.d(t,"c",(function(){return h})),n.d(t,"d",(function(){return f})),n.d(t,"j",(function(){return O})),n.d(t,"i",(function(){return w})),n.d(t,"h",(function(){return k})),n.d(t,"a",(function(){return I}));var r=n(967);function o(e,t,n,r,o="NHWC",c){return d(e,[...t,e[3]],n,c,r,null,null,k(o))}function c(e,t,n,r,o,c,l="channelsLast"){const[h,f]=m(t);let y;if("channelsLast"===l)y=[h,f,e[3],e[3]];else{if("channelsFirst"!==l)throw new Error(`Unknown dataFormat ${l}`);y=[h,f,e[1],e[1]]}return d(e,y,n,r,o,c,!1,l)}function l(e,t,n,r,o,c,l="NDHWC"){const[d,f,m]=y(t);let x,v;if("NDHWC"===l)v="channelsLast",x=[d,f,m,e[4],e[4]];else{if("NCDHW"!==l)throw new Error(`Unknown dataFormat ${l}`);v="channelsFirst",x=[d,f,m,e[1],e[1]]}return h(e,x,n,r,o,!1,v,c)}function d(e,t,n,r,o,c,l=!1,d="channelsLast"){let[h,y,O,w]=[-1,-1,-1,-1];if("channelsLast"===d)[h,y,O,w]=e;else{if("channelsFirst"!==d)throw new Error(`Unknown dataFormat ${d}`);[h,w,y,O]=e}const[k,I,,S]=t,[N,j]=m(n),[T,C]=m(r),$=x(k,T),E=x(I,C),{padInfo:A,outHeight:R,outWidth:F}=function(e,t,n,r,o,c,l,d,h){let m,y,x;if("number"==typeof e){m={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const o=function(e,t,n,r,o){null==r&&(r=f(e,t,n));const c=e[0],l=e[1],d=v((c-t+2*r)/n+1,o),h=v((l-t+2*r)/n+1,o);return[d,h]}([t,n],c,r,e,d);y=o[0],x=o[1]}else if("same"===e){y=Math.ceil(t/r),x=Math.ceil(n/o);const e=Math.max(0,(y-1)*r+c-t),d=Math.max(0,(x-1)*o+l-n),h=Math.floor(e/2),f=e-h,v=Math.floor(d/2);m={top:h,bottom:f,left:v,right:d-v,type:"SAME"}}else if("valid"===e)m={top:0,bottom:0,left:0,right:0,type:"VALID"},y=Math.ceil((t-c+1)/r),x=Math.ceil((n-l+1)/o);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const f="channelsLast"===h?e[1][0]:e[2][0],O="channelsLast"===h?e[1][1]:e[2][1],w="channelsLast"===h?e[2][0]:e[3][0],k="channelsLast"===h?e[2][1]:e[3][1];m={top:f,bottom:O,left:w,right:k,type:0===f&&0===O&&0===w&&0===k?"VALID":"EXPLICIT"},y=v((t-c+f+O)/r+1,d),x=v((n-l+w+k)/o+1,d)}}return{padInfo:m,outHeight:y,outWidth:x}}(o,y,O,N,j,$,E,c,d),D=l?S*w:S;let _;return"channelsFirst"===d?_=[h,D,R,F]:"channelsLast"===d&&(_=[h,R,F,D]),{batchSize:h,dataFormat:d,inHeight:y,inWidth:O,inChannels:w,outHeight:R,outWidth:F,outChannels:D,padInfo:A,strideHeight:N,strideWidth:j,filterHeight:k,filterWidth:I,effectiveFilterHeight:$,effectiveFilterWidth:E,dilationHeight:T,dilationWidth:C,inShape:e,outShape:_,filterShape:t}}function h(e,t,n,r,o,c=!1,l="channelsLast",d){let[h,m,O,w,k]=[-1,-1,-1,-1,-1];if("channelsLast"===l)[h,m,O,w,k]=e;else{if("channelsFirst"!==l)throw new Error(`Unknown dataFormat ${l}`);[h,k,m,O,w]=e}const[I,S,N,,j]=t,[T,C,$]=y(n),[E,A,R]=y(r),F=x(I,E),D=x(S,A),_=x(N,R),{padInfo:M,outDepth:z,outHeight:L,outWidth:P}=function(e,t,n,r,o,c,l,d,h,m,y){let x,O,w,k;if("number"==typeof e){x={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const c=function(e,t,n,r,o,c){null==o&&(o=f(e,t,r));const l=e[0],d=e[1],h=e[2],m=v((l-t+2*o)/r+1,c),y=v((d-t+2*o)/r+1,c),x=v((h-t+2*o)/r+1,c);return[m,y,x,n]}([t,n,r,1],d,1,o,e,y);O=c[0],w=c[1],k=c[2]}else if("same"===e){O=Math.ceil(t/o),w=Math.ceil(n/c),k=Math.ceil(r/l);const e=(O-1)*o+d-t,f=(w-1)*c+h-n,y=(k-1)*l+m-r,v=Math.floor(e/2),I=e-v,S=Math.floor(f/2),N=f-S,j=Math.floor(y/2);x={top:S,bottom:N,left:j,right:y-j,front:v,back:I,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);x={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},O=Math.ceil((t-d+1)/o),w=Math.ceil((n-h+1)/c),k=Math.ceil((r-m+1)/l)}return{padInfo:x,outDepth:O,outHeight:w,outWidth:k}}(o,m,O,w,T,C,$,F,D,_,d),B=c?j*k:j;let W;return"channelsFirst"===l?W=[h,B,z,L,P]:"channelsLast"===l&&(W=[h,z,L,P,B]),{batchSize:h,dataFormat:l,inDepth:m,inHeight:O,inWidth:w,inChannels:k,outDepth:z,outHeight:L,outWidth:P,outChannels:B,padInfo:M,strideDepth:T,strideHeight:C,strideWidth:$,filterDepth:I,filterHeight:S,filterWidth:N,effectiveFilterDepth:F,effectiveFilterHeight:D,effectiveFilterWidth:_,dilationDepth:E,dilationHeight:A,dilationWidth:R,inShape:e,outShape:W,filterShape:t}}function f(e,t,n,r=1){const o=x(t,r);return Math.floor((e[0]*(n-1)-n+o)/2)}function m(param){return"number"==typeof param?[param,param,param]:2===param.length?[param[0],param[1],1]:param}function y(param){return"number"==typeof param?[param,param,param]:param}function x(e,t){return t<=1?e:e+(e-1)*(t-1)}function v(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function O(param){const[e,t,n]=m(param);return 1===e&&1===t&&1===n}function w(e,t){return O(e)||O(t)}function k(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function I(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)r.b(r.v(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((p=>{p.forEach((t=>{r.b(r.v(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},,,,,,,,,,,,,,,function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return d})),n.d(t,"c",(function(){return f}));var r=n(967);const o="tfjsflags";class c{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=l,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(d().getBool("IS_TEST")||d().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];d().getBool("IS_TEST")||d().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Object(r.x)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(o in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}}function l(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((s,...e)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,e[0],e[1]),e.join("=")))),t}function d(){return h}let h=null;function f(e){h=e}},,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({neg_:function(e){const t={x:Object(c.a)(e,"x","neg")};return r.a.runKernel(o.Xb,t)}})},function(e,t){(function(t){e.exports=t}).call(this,{})},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return l}));var r=n(371),o=n(373),c=(n(370),n(967));function l(e,t){c.b(c.u(e),(()=>"The f passed in variableGrads(f) must be a function")),c.b(null==t||Array.isArray(t)&&t.every((e=>e instanceof o.c)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.a.registeredVariables)t.push(r.a.registeredVariables[e])}const l=n?t.filter((e=>!e.trainable)):null,d=t.length;t=t.filter((e=>e.trainable)),c.b(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${d} variables is trainable.`));const{value:h,grads:f}=r.a.gradients(e,t,null,!0);c.b(f.some((g=>null!=g)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),c.b(0===h.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${h.rank} tensor`));const m={};return t.forEach(((e,i)=>{null!=f[i]&&(m[e.name]=f[i])})),null!=l&&l.forEach((e=>m[e.name]=null)),{value:h,grads:m}}function d(e){return r.a.customGrad(e)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({slice_:function(e,t,n){const l=Object(c.a)(e,"x","slice","string_or_numeric");if(0===l.rank)throw new Error("Slicing scalar is not possible");const d={x:l},h={begin:t,size:n};return r.a.runKernel(o.Fc,d,h)}})},,,,,,,,,,function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(371),o=n(367),c=n(370),l=n(1010),d=n(403),h=n(368);const f=Object(h.a)({where_:function(e,a,b){const t=Object(c.a)(a,"a","where"),n=Object(c.a)(b,"b","where"),h=Object(c.a)(e,"condition","where","bool"),f=Object(d.assertAndGetBroadcastShape)(Object(d.assertAndGetBroadcastShape)(h.shape,t.shape),n.shape),m={condition:Object(l.a)(h,f),t:Object(l.a)(t,f),e:Object(l.a)(n,f)};return r.a.runKernel(o.zc,m)}})},,,,,function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(813),h=n(368);const f=Object(h.a)({concat_:function(e,t=0){Object(l.b)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Object(c.b)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Object(d.a)(n[0]);const h=n,f={axis:t};return r.a.runKernel(o.C,h,f)}})},,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";(function(e){n.d(t,"f",(function(){return d})),n.d(t,"e",(function(){return h})),n.d(t,"a",(function(){return x})),n.d(t,"b",(function(){return v})),n.d(t,"d",(function(){return O})),n.d(t,"c",(function(){return w})),n.d(t,"i",(function(){return k})),n.d(t,"g",(function(){return I})),n.d(t,"h",(function(){return S}));var r=n(796),o=n(997),c=n(967),l=n(1137);async function d(e,t){const n=[],r=[],o=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let i=0;i<o.length;++i){const c=o[i],l=Array.isArray(e)?e[i].tensor:e[c];if("float32"!==l.dtype&&"int32"!==l.dtype&&"bool"!==l.dtype&&"string"!==l.dtype&&"complex64"!==l.dtype)throw new Error(`Unsupported dtype in weight '${c}': ${l.dtype}`);const d={name:c,shape:l.shape,dtype:l.dtype};if("string"===l.dtype){const e=new Promise((async e=>{const t=await l.bytes(),n=t.reduce(((p,e)=>p+e.length),0)+4*t.length,r=new Uint8Array(n);let o=0;for(let i=0;i<t.length;i++){const e=t[i],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,o),o+=4,r.set(e,o),o+=e.length}e(r)}));r.push(e)}else r.push(l.data());null!=t&&(d.group=t),n.push(d)}return{data:f(await Promise.all(r)),specs:n}}function h(e,t){const n={};let d,h=0;for(const f of t){const t=f.name,m=f.dtype,y=f.shape,x=Object(c.O)(y);let v;if("quantization"in f){const n=f.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${f.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${f.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==m)throw new Error(`Weight ${f.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${m}.`)}const r=l.a[n.dtype],o=e.slice(h,h+x*r),c="uint8"===n.dtype?new Uint8Array(o):new Uint16Array(o);if("float32"===m)if("uint8"===n.dtype||"uint16"===n.dtype){v=new Float32Array(c.length);for(let i=0;i<c.length;i++){const e=c[i];v[i]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===d&&(d=N()),v=d(c)}else{if("int32"!==m)throw new Error(`Unsupported dtype in weight '${t}': ${m}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);v=new Int32Array(c.length);for(let i=0;i<c.length;i++){const e=c[i];v[i]=Math.round(e*n.scale+n.min)}}h+=x*r}else if("string"===m){const t=Object(c.O)(f.shape);v=[];for(let i=0;i<t;i++){const t=new Uint32Array(e.slice(h,h+4))[0];h+=4;const n=new Uint8Array(e.slice(h,h+t));v.push(n),h+=t}}else{const c=l.a[m],d=e.slice(h,h+x*c);if("float32"===m)v=new Float32Array(d);else if("int32"===m)v=new Int32Array(d);else if("bool"===m)v=new Uint8Array(d);else{if("complex64"!==m)throw new Error(`Unsupported dtype in weight '${t}': ${m}`);{v=new Float32Array(d);const e=new Float32Array(v.length/2),image=new Float32Array(v.length/2);for(let i=0;i<e.length;i++)e[i]=v[2*i],image[i]=v[2*i+1];const c=Object(o.a)(e,y,"float32"),l=Object(o.a)(image,y,"float32");n[t]=Object(r.a)(c,l),c.dispose(),l.dispose()}}h+=x*c}"complex64"!==m&&(n[t]=Object(o.a)(v,y,m))}return n}function f(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let o=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),o),o+=e.byteLength})),r.buffer}const m=void 0!==e&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function y(t){return m?e.byteLength(t):new Blob([t]).size}function x(t){if(m)return e.from(t).toString("base64");const n=new Uint8Array(t);let s="";for(let i=0,e=n.length;i<e;i++)s+=String.fromCharCode(n[i]);return btoa(s)}function v(t){if(m){const n=e.from(t,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const s=atob(t),n=new Uint8Array(s.length);for(let i=0;i<s.length;++i)n.set([s.charCodeAt(i)],i);return n.buffer}function O(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function w(path){for(path=path.trim();path.endsWith("/");)path=path.slice(0,path.length-1);const e=path.split("/");return e[e.length-1]}function k(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function I(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,o]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=o}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function S(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:y(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:y(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function N(){const e=function(){const e=i=>{let e=i<<13,t=0;for(;0==(8388608&e);)t-=8388608,e<<=1;return e&=-8388609,t+=947912704,e|t},t=new Uint32Array(2048);t[0]=0;for(let i=1;i<1024;i++)t[i]=e(i);for(let i=1024;i<2048;i++)t[i]=939524096+(i-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let i=1;i<31;i++)e[i]=i<<23;for(let i=33;i<63;i++)e[i]=2147483648+(i-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let i=0;i<64;i++)e[i]=1024;return e[0]=e[32]=0,e}();return r=>{const o=new ArrayBuffer(4*r.length),c=new Uint32Array(o);for(let o=0;o<r.length;o++){const l=r[o],d=e[n[l>>10]+(1023&l)]+t[l>>10];c[o]=d}return new Float32Array(o)}}}).call(this,n(1072).Buffer)},function(e,t,n){"use strict";n.d(t,"c",(function(){return d})),n.d(t,"e",(function(){return h})),n.d(t,"h",(function(){return f})),n.d(t,"b",(function(){return m})),n.d(t,"d",(function(){return y})),n.d(t,"g",(function(){return x})),n.d(t,"f",(function(){return v})),n.d(t,"a",(function(){return O}));var r=n(371),o=n(445),c=n(373),l=n(413);function d(){return r.a}function h(){return r.a.memory()}function f(e,t){return r.a.tidy(e,t)}function m(e){Object(l.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return r.a.keep(e)}function x(e){return r.a.setBackend(e)}function v(e,t,n=1){return r.a.registerBackend(e,t,n)}function O(){return r.a.backend}Object(c.e)((function(e){Object(o.b)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}))},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return c})),n.d(t,"d",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"a",(function(){return h})),n.d(t,"f",(function(){return f})),n.d(t,"h",(function(){return m})),n.d(t,"g",(function(){return y}));var r=n(967);function o(e,t){for(let i=0;i<e.length;++i)if(e[e.length-i-1]!==t-1-i)return!1;return!0}function c(e,t,n){const r=e.length+t.length,o=[];let c=0,l=0;for(let d=0;d<r;d++)-1===n.indexOf(d)?o.push(e[c++]):o.push(t[l++]);return o}function l(e,t){const n=[],r=e.length;for(let o=0;o<r;o++)-1===t.indexOf(o)&&n.push(e[o]);return[n,t.map((t=>e[t]))]}function d(e,t){return c(e,t.map((e=>1)),t)}function h(e,t,n){r.b(o(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function f(e,t){if(o(e,t))return null;const n=[];for(let i=0;i<t;++i)-1===e.indexOf(i)&&n.push(i);return e.forEach((e=>n.push(e))),n}function m(e){return e.map(((e,i)=>[i,e])).sort(((a,b)=>a[1]-b[1])).map((e=>e[0]))}function y(e,t){const n=[];for(let i=t-e;i<t;++i)n.push(i);return n}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({sqrt_:function(e){const t={x:Object(c.a)(e,"x","sqrt","float32")};return r.a.runKernel(o.Pc,t)}})},function(e,t,n){"use strict";var r;n.d(t,"a",(function(){return r})),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n.d(t,"d",(function(){return o.he})),n.d(t,"c",(function(){return o.Vd})),n.d(t,"f",(function(){return o.rf})),n.d(t,"b",(function(){return o.Rd})),n.d(t,"a",(function(){return o.Ad})),n.d(t,"e",(function(){return _l}));var r={};n.r(r),n.d(r,"simpleAbsImpl",(function(){return Fd})),n.d(r,"addImpl",(function(){return Sd})),n.d(r,"bincountImpl",(function(){return yh})),n.d(r,"bincountReduceImpl",(function(){return xh})),n.d(r,"ceilImpl",(function(){return wh})),n.d(r,"concatImpl",(function(){return Th})),n.d(r,"equalImpl",(function(){return dp})),n.d(r,"expImpl",(function(){return wp})),n.d(r,"expm1Impl",(function(){return jp})),n.d(r,"floorImpl",(function(){return Vp})),n.d(r,"gatherNdImpl",(function(){return Jp})),n.d(r,"gatherV2Impl",(function(){return ef})),n.d(r,"greaterImpl",(function(){return nf})),n.d(r,"greaterEqualImpl",(function(){return sf})),n.d(r,"lessImpl",(function(){return bf})),n.d(r,"lessEqualImpl",(function(){return xf})),n.d(r,"linSpaceImpl",(function(){return wf})),n.d(r,"logImpl",(function(){return If})),n.d(r,"maxImpl",(function(){return Lf})),n.d(r,"maximumImpl",(function(){return Wf})),n.d(r,"minimumImpl",(function(){return Jf})),n.d(r,"multiplyImpl",(function(){return np})),n.d(r,"negImpl",(function(){return lm})),n.d(r,"notEqualImpl",(function(){return ym})),n.d(r,"prodImpl",(function(){return Em})),n.d(r,"rangeImpl",(function(){return Rm})),n.d(r,"rsqrtImpl",(function(){return Gm})),n.d(r,"sigmoidImpl",(function(){return hd})),n.d(r,"sliceImpl",(function(){return fh})),n.d(r,"sparseFillEmptyRowsImpl",(function(){return db})),n.d(r,"sparseReshapeImpl",(function(){return pb})),n.d(r,"sparseSegmentReductionImpl",(function(){return mb})),n.d(r,"sqrtImpl",(function(){return vb})),n.d(r,"squaredDifferenceImpl",(function(){return Ib})),n.d(r,"stridedSliceImpl",(function(){return Cb})),n.d(r,"stringNGramsImpl",(function(){return Ab})),n.d(r,"stringSplitImpl",(function(){return Db})),n.d(r,"stringToHashBucketFastImpl",(function(){return Mb})),n.d(r,"subImpl",(function(){return Rp})),n.d(r,"tileImpl",(function(){return Ub})),n.d(r,"topKImpl",(function(){return qb})),n.d(r,"transposeImpl",(function(){return Bd})),n.d(r,"uniqueImpl",(function(){return eg}));var o=n(366),c=n(367),l=n(391),d=n(380),h=n(821);const f={kernelName:c.a,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(h.a)(Object(l.a)(n,"float32"),-1))}}};var div=n(399),m=n(469),y=n(409),x=n(553),v=n(426),sub=n(404);const O={kernelName:c.b,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const a=Object(v.a)(Object(l.a)(n,"float32")),b=Object(x.a)(Object(sub.a)(Object(y.a)(1),a));return Object(m.a)(Object(div.a)(e,b))}}}},w={kernelName:c.c,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const a=Object(x.a)(Object(sub.a)(Object(v.a)(Object(l.a)(n,"float32")),1));return Object(div.a)(e,a)}}}};var k=n(403),I=n(378),S=n(417);const N={kernelName:c.d,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=k.assertAndGetBroadcastShape(a.shape,b.shape);return{a:()=>{let t=e;const r=k.getReductionAxes(a.shape,n);return r.length>0&&(t=Object(S.a)(t,r)),Object(I.a)(t,a.shape)},b:()=>{let t=e;const r=k.getReductionAxes(b.shape,n);return r.length>0&&(t=Object(S.a)(t,r)),Object(I.a)(t,b.shape)}}}},j={kernelName:c.e,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,i)=>{n[i]=()=>e.clone()})),n}};var T=n(410);const C={kernelName:c.h,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(T.a)(n)}}},$={kernelName:c.i,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(T.a)(n)}}},E={kernelName:c.j,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(x.a)(Object(sub.a)(Object(y.a)(1),Object(v.a)(Object(l.a)(n,"float32")))))}}};var A=n(414);const R={kernelName:c.k,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const a=Object(x.a)(Object(A.a)(Object(y.a)(1),Object(v.a)(Object(l.a)(n,"float32"))));return Object(div.a)(e,a)}}}},F={kernelName:c.m,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=Object(k.assertAndGetBroadcastShape)(a.shape,b.shape);return{a:()=>{const t=Object(A.a)(Object(v.a)(a),Object(v.a)(b));let r=Object(d.a)(e,Object(div.a)(b,t));const o=Object(k.getReductionAxes)(a.shape,n);return o.length>0&&(r=Object(S.a)(r,o)),Object(I.a)(r,a.shape)},b:()=>{const t=Object(A.a)(Object(v.a)(a),Object(v.a)(b));let r=Object(m.a)(Object(d.a)(e,Object(div.a)(a,t)));const o=Object(k.getReductionAxes)(b.shape,n);return o.length>0&&(r=Object(S.a)(r,o)),Object(I.a)(r,b.shape)}}}},D={kernelName:c.l,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(A.a)(Object(v.a)(Object(l.a)(n,"float32")),1))}}},_={kernelName:c.n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(sub.a)(Object(y.a)(1),Object(v.a)(Object(l.a)(n,"float32"))))}}};var M=n(371),z=n(370),L=n(967),P=n(430),B=n(368);const W=Object(B.a)({avgPool3dGrad_:function(e,input,t,n,r,o){const l=Object(z.a)(e,"dy","avgPool3dGrad"),d=Object(z.a)(input,"input","avgPool3dGrad");let h=l,f=d,m=!1;4===d.rank&&(m=!0,h=Object(I.a)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),f=Object(I.a)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),L.b(5===h.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),L.b(5===f.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${f.rank}.`)),Object(P.a)("avgPool3dGrad",r,o);const y={dy:h,input:f},x={filterSize:t,strides:n,pad:r,dimRoundingMode:o},v=M.a.runKernel(c.q,y,x);return m?Object(I.a)(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}}),U={kernelName:c.p,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:o,strides:c,pad:l,dimRoundingMode:d}=n;return{x:()=>W(e,r,o,c,l,d)}}};const V=Object(B.a)({avgPoolGrad_:function(e,input,t,n,r){const o=Object(z.a)(e,"dy","avgPoolGrad"),l=Object(z.a)(input,"input","avgPoolGrad");L.b(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`));let d=l,h=o,f=!1;3===l.rank&&(f=!0,d=Object(I.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=Object(I.a)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),L.b(4===h.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${h.rank}.`)),L.b(4===d.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${d.rank}.`));const m={dy:h,input:d},y={filterSize:t,strides:n,pad:r},x=M.a.runKernel(c.r,m,y);return f?Object(I.a)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),G={kernelName:c.o,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:o,strides:c,pad:l}=n;return{x:()=>V(e,r,o,c,l)}}};var H=n(801);const K={kernelName:c.s,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,b]=t,{transposeA:r,transposeB:o}=n;return r||o?!r&&o?{a:()=>Object(H.a)(e,b,!1,!1),b:()=>Object(H.a)(e,a,!0,!1)}:r&&!o?{a:()=>Object(H.a)(b,e,!1,!0),b:()=>Object(H.a)(a,e,!1,!1)}:{a:()=>Object(H.a)(b,e,!0,!0),b:()=>Object(H.a)(e,a,!0,!0)}:{a:()=>Object(H.a)(e,b,!1,!0),b:()=>Object(H.a)(a,e,!0,!1)}}};var X=n(981);const Y={kernelName:c.t,gradFunc:(e,t,n)=>{const{blockShape:r,crops:o}=n;return{x:()=>Object(X.a)(e,r,o)}}},Z={kernelName:c.w,gradFunc:(e,t,n)=>{const r=n,o=r.inputShape,c=r.shape,l=Array.from(c);for(let i=o.length-1;i>=0;i--)if(o[i]===c[i])l[i]=1;else if(1!==o[i])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${c}].`);const d=[];for(let i=0;i<l.length;i++)l[i]>1&&d.push(i);return{x:()=>Object(S.a)(e,d,!0)}}},J={kernelName:c.x,gradFunc:e=>({x:()=>e.clone()})},Q={kernelName:c.y,gradFunc:e=>({x:()=>Object(T.a)(e)})};var ee=n(799),te=n(785),ne=n(800),re=n(517);const ae={kernelName:c.z,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:o,clipValueMax:c}=n;return{x:()=>Object(re.a)(Object(ne.a)(Object(ee.a)(r,o),Object(te.a)(r,c)),e,Object(T.a)(e))}}},se={kernelName:c.B,inputsToSave:["x"],gradFunc:f.gradFunc};var ie=n(803);const oe={kernelName:c.C,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:o}=n,c=Object(L.I)(o,t[0].shape)[0],l=r.map((s=>s[c]));return Object(ie.a)(e,l,c).map((e=>()=>e))}};var ue=n(1091),ce=n(1079);const le={kernelName:c.D,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,o]=t,{dilations:c,strides:l,pad:d,dataFormat:h}=n;return L.b(P.j(c),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${c}'`)),{x:()=>Object(ce.a)(r.shape,e,o,l,d,h),filter:()=>Object(ue.a)(r,e,o.shape,l,d,h)}}};var de=n(798);const he={kernelName:c.F,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,filter]=t,{strides:o,pad:c,dataFormat:l,dimRoundingMode:d}=n;return{dy:()=>Object(de.a)(e,filter,o,c,l,1,d),filter:()=>Object(ue.a)(e,r,filter.shape,o,c,l,d)}}};const pe=Object(B.a)({conv3DBackpropFilter_:function(e,t,n,r,o){let l=e;4===e.rank&&(l=Object(I.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let d=t;4===d.rank&&(d=Object(I.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),L.b(5===l.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${l.shape}.`)),L.b(5===d.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${d.shape}.`)),L.b(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),L.b(l.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${l.shape[4]}) must match input depth in filter (${n[3]}.`)),L.b(d.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${d.shape[4]}) must match output depth for filter (${n[4]}).`));const h={x:l,dy:d},f={strides:r,pad:o,filterShape:n};return M.a.runKernel(c.H,h,f)}});var fe=n(1141);const me={kernelName:c.G,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:o,pad:c}=n;L.b(Object(P.j)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[l,d]=t;return{x:()=>Object(fe.a)(l.shape,e,d,o,c),filter:()=>pe(l,e,d.shape,o,c)}}};var be=n(1095);const ge={kernelName:c.J,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(Object(m.a)(Object(be.a)(Object(l.a)(n,"float32"))),e)}}};var ye=n(1096);const xe={kernelName:c.K,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(Object(ye.a)(Object(l.a)(n,"float32")),e)}}};var ve=n(552),Oe=n(1022),we=n(806);const ke={kernelName:c.M,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:o,exclusive:c,reverse:l}=n;return{x:()=>{const t=Object(ve.f)([o],r.rank);let n=Object(Oe.a)(e,o,c,!l);return null!=t&&(n=Object(we.a)(n,t)),n}}}};var Ie=n(1151),Se=n(1150);const Ne={kernelName:c.P,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:o,pad:c,dimRoundingMode:l}=n,d=null==r?[1,1]:r;L.b(P.j(d),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${d}'`));const[h,filter]=t;return L.b(4===h.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${h.rank}.`)),L.b(4===filter.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${filter.rank}.`)),L.b(h.shape[3]===filter.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${filter.shape[2]}.`)),L.b(P.i(o,d),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${d}'.`)),P.a("depthwiseConv2d",c,l),{x:()=>Object(Se.a)(h.shape,e,filter,o,c,d,l),filter:()=>Object(Ie.a)(h,e,filter.shape,o,c,d,l)}}},je={kernelName:c.T,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,filter]=t,o={x:r,filter:filter,dy:e},l={x:r,filter:filter,dy:e};return{x:()=>M.a.runKernel(c.V,o,n),filter:()=>M.a.runKernel(c.U,l,n)}}},Te={kernelName:c.X,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>M.a.runKernel(c.Y,r)}}};var Ce=n(580);const $e={kernelName:c.ab,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=Object(d.a)(Object(Ce.a)(Object(m.a)(Object(v.a)(n))),2/Math.sqrt(Math.PI));return{x:()=>Object(d.a)(e,a)}}},Ee={kernelName:c.bb,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,n)}}},Ae={kernelName:c.cb,inputsToSave:["input"],gradFunc:(e,t)=>{const[input]=t;return{input:()=>Object(I.a)(e,input.shape)}}},Re={kernelName:c.db,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(Ce.a)(n))}}},Fe={kernelName:c.hb,gradFunc:e=>({x:()=>Object(T.a)(e)})},De={kernelName:c.ib,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=Object(k.assertAndGetBroadcastShape)(a.shape,b.shape);return{a:()=>{const t=Object(div.a)(e,Object(l.a)(b,"float32")),r=Object(k.getReductionAxes)(a.shape,n);return r.length>0?Object(I.a)(Object(S.a)(t,r),a.shape):t},b:()=>{let t=Object(d.a)(e,Object(l.a)(a,"float32"));const r=Object(k.getReductionAxes)(b.shape,n);r.length>0&&(t=Object(I.a)(Object(S.a)(t,r),b.shape));const o=Object(v.a)(b);return Object(m.a)(Object(div.a)(t,Object(l.a)(o,"float32")))}}}};var _e=n(1097),Me=n(814);const ze={kernelName:c.kb,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[o,c,l,h]=t,f=null==h?Object(y.a)(1):h,m=Object(k.getReductionAxes)(c.shape,o.shape),x=[];if(1===c.rank){for(let i=0;i<o.shape.length-1;++i)x.push(o.shape[i]);x.push(1)}const v=Object(sub.a)(o,c),O=Object(d.a)(e,f),w=Object(_e.a)(Object(A.a)(l,Object(y.a)(r))),N=Object(d.a)(Object(d.a)(Object(d.a)(w,w),w),Object(y.a)(-.5));return{x:()=>1===c.rank?Object(I.a)(Object(d.a)(Object(d.a)(e,Object(Me.a)(Object(I.a)(w,[1,1,1,c.shape[0]]),x)),f),o.shape):Object(I.a)(Object(d.a)(Object(d.a)(e,w),f),o.shape),mean:()=>{let e=Object(d.a)(Object(d.a)(w,Object(y.a)(-1)),O);return 1===c.rank&&(e=Object(S.a)(e,m)),Object(I.a)(e,c.shape)},variance:()=>{let e=Object(d.a)(Object(d.a)(N,v),O);return 1===c.rank&&(e=Object(S.a)(e,m)),Object(I.a)(e,c.shape)},scale:()=>{const t=Object(d.a)(v,w);let n=Object(d.a)(e,t);return 1===c.rank&&(n=Object(S.a)(n,m)),Object(I.a)(n,c.shape)},offset:()=>{let t=e;return 1===c.rank&&(t=Object(S.a)(t,m)),Object(I.a)(t,c.shape)}}}};var Le=n(1023);const Pe={kernelName:c.ob,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,o]=t,{axis:c}=n,l=Object(L.I)(c,r.shape)[0];return{x:()=>{const t=r.shape,n=o.size,d=t.slice(0,l),h=d.length,f=t.slice(c,t.length).slice(1),m=f.length,y=Be(0,h),x=Be(h+1,h+1+m),v=We([d,[n],f]),O=Object(I.a)(e,v),w=Object(I.a)(o,[n]),k=We([[h],y,x]),S=Object(we.a)(O,k);let N=Object(Le.a)(S,w,r.shape[l]);const j=Object(ve.h)(k);return N=Object(we.a)(N,j),N},indices:()=>o}}};function Be(e,t){const n=[];for(let i=e;i<t;++i)n.push(i);return n}function We(e){const t=[];for(let i=0;i<e.length;++i)for(let n=0;n<e[i].length;++n)t.push(e[i][n]);return t}const Ue={kernelName:c.qb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t;return{a:()=>Object(T.a)(a),b:()=>Object(T.a)(b)}}},Ve={kernelName:c.sb,gradFunc:e=>({x:()=>Object(l.a)(e,"float32")})},Ge={kernelName:c.ub,gradFunc:e=>({x:()=>Object(T.a)(e)})},He={kernelName:c.vb,gradFunc:e=>({x:()=>Object(T.a)(e)})},qe={kernelName:c.wb,gradFunc:e=>({x:()=>Object(T.a)(e)})};var Ke=n(581);const Xe={kernelName:c.zb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:o}=n,mask=Object(Ke.a)(r,0);return{x:()=>Object(re.a)(mask,e,Object(d.a)(e,o))}}},Ye={kernelName:c.Eb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(A.a)(n,1))}}},Ze={kernelName:c.Db,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(l.a)(n,"float32"))}}},Je={kernelName:c.Fb,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:o}=n;return{logits:()=>{const t=Object(Ce.a)(r);return Object(sub.a)(e,Object(d.a)(Object(S.a)(e,o,!0),t))}}}};const Qe=Object(B.a)({localResponseNormalizationBackprop_:function(e,t,n,r=5,o=1,l=1,d=.5){const h={x:e,y:t,dy:n},f={depthRadius:r,bias:o,alpha:l,beta:d};return M.a.runKernel(c.yb,h,f)}}),et={kernelName:c.xb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,o]=t,{depthRadius:c,bias:l,alpha:d,beta:h}=n;return{x:()=>Qe(r,o,e,c,l,d,h)}}};var tt=n(972);function nt(e,t,n,r){return t.rank<n.rank&&(t=Object(I.a)(t,ve.e(t.shape,r))),e.rank<n.rank&&(e=Object(I.a)(e,ve.e(e.shape,r))),{x:()=>Object(d.a)(e,Object(l.a)(Object(tt.a)(n,t),e.dtype))}}const at={kernelName:c.Jb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:o}=r,c=t[0],l=nt(e,t[1],c,L.I(o,c.shape));return{x:()=>l.x()}}};var st=n(1024);const it={kernelName:c.Pb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t;return{a:()=>Object(d.a)(e,Object(l.a)(Object(ee.a)(a,b),"float32")),b:()=>Object(d.a)(e,Object(l.a)(Object(st.a)(a,b),"float32"))}}};const ot=Object(B.a)({maxPool3dGrad_:function(e,input,output,t,n,r,o){const l=Object(z.a)(e,"dy","maxPool3dGrad"),d=Object(z.a)(input,"input","maxPool3dGrad"),h=Object(z.a)(output,"output","maxPool3dGrad");let f=l,m=d,y=h,x=!1;4===d.rank&&(x=!0,f=Object(I.a)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),m=Object(I.a)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]]),y=Object(I.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),L.b(5===f.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${f.rank}.`)),L.b(5===m.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${m.rank}.`)),L.b(5===y.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${y.rank}.`)),Object(P.a)("maxPool3dGrad",r,o);const v={dy:f,input:m,output:y},O={filterSize:t,strides:n,pad:r,dimRoundingMode:o},w=M.a.runKernel(c.Mb,v,O);return x?Object(I.a)(w,[w.shape[1],w.shape[2],w.shape[3],w.shape[4]]):w}}),ut={kernelName:c.Lb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,o]=t,{filterSize:c,strides:l,pad:d,dimRoundingMode:h}=n;return{x:()=>ot(e,r,o,c,l,d,h)}}};const ct=Object(B.a)({maxPoolGrad_:function(e,input,output,t,n,r,o){const l=Object(z.a)(e,"dy","maxPoolGrad"),d=Object(z.a)(input,"input","maxPoolGrad"),h=Object(z.a)(output,"output","maxPoolGrad");L.b(d.rank===l.rank,(()=>`Rank of input (${d.rank}) does not match rank of dy (${l.rank})`)),L.b(4===l.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),L.b(4===d.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${d.rank}.`)),P.a("maxPoolGrad",r,o);const f={dy:l,input:d,output:h},m={filterSize:t,strides:n,pad:r,dimRoundingMode:o};return M.a.runKernel(c.Nb,f,m)}}),lt={kernelName:c.Kb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,o]=t,{filterSize:c,strides:l,pad:d}=n;return{x:()=>ct(e,r,o,c,l,d)}}};var ht=n(817);const pt={kernelName:c.Qb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:o}=n,c=L.I(o,r.shape),l=Object(ve.d)(r.shape,c)[1],h=L.O(l);return{x:()=>{const t=r.shape.slice();c.forEach((e=>{t[e]=1}));const n=Object(I.a)(e,t);return Object(div.a)(Object(d.a)(n,Object(ht.a)(r.shape,"float32")),h)}}}},ft={kernelName:c.Rb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:o}=r,[c,l]=t,d=nt(e,l,c,L.I(o,c.shape));return{x:()=>d.x()}}},mt={kernelName:c.Sb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t;return{a:()=>Object(d.a)(e,Object(l.a)(Object(te.a)(a,b),"float32")),b:()=>Object(d.a)(e,Object(l.a)(Object(Ke.a)(a,b),"float32"))}}};var bt=n(507);const gt={kernelName:c.Tb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:o}=n,c=o.map((p=>p[0]));return{x:()=>Object(bt.a)(e,c,r.shape)}}};var yt=n(1001);const xt={kernelName:c.Ub,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=Object(k.assertAndGetBroadcastShape)(a.shape,b.shape);return{a:()=>{const t=Object(k.getReductionAxes)(a.shape,n);return t.length>0?Object(I.a)(Object(S.a)(e,t),a.shape):e},b:()=>{const t=Object(d.a)(e,Object(m.a)(Object(yt.a)(Object(div.a)(a,b)))),r=Object(k.getReductionAxes)(b.shape,n);return r.length>0?Object(I.a)(Object(S.a)(t,r),b.shape):t}}}},vt={kernelName:c.Wb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=Object(k.assertAndGetBroadcastShape)(a.shape,b.shape);return{a:()=>{const t=Object(d.a)(e,Object(l.a)(b,"float32")),r=Object(k.getReductionAxes)(a.shape,n);return r.length>0?Object(I.a)(Object(S.a)(t,r),a.shape):t},b:()=>{const t=Object(d.a)(e,Object(l.a)(a,"float32")),r=Object(k.getReductionAxes)(b.shape,n);return r.length>0?Object(I.a)(Object(S.a)(t,r),b.shape):t}}}},Ot={kernelName:c.Xb,gradFunc:e=>({x:()=>Object(m.a)(e)})};var wt=n(818);const kt={kernelName:c.cc,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Object(wt.a)(n.shape,"float32")}}},It={kernelName:c.dc,gradFunc:e=>({x:()=>Object(T.a)(e)})};var St=n(820);const Nt={kernelName:c.ec,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Object(St.a)(e,r).map((e=>()=>e))}},jt={kernelName:c.fc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:o}=n,c=o.map((p=>p[0]));return{x:()=>Object(bt.a)(e,c,r.shape)}}};var Tt=n(815),Ct=n(802);const $t={kernelName:c.gc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[a,b,n]=t,base=a,r=b,o=k.assertAndGetBroadcastShape(base.shape,r.shape);return{a:()=>{const t=Object(l.a)(r,"float32");let n=Object(d.a)(e,Object(d.a)(t,Object(Ct.a)(base,Object(sub.a)(t,Object(y.a)(1)))));const c=k.getReductionAxes(base.shape,o);return c.length>0&&(n=Object(S.a)(n,c)),Object(I.a)(n,base.shape)},b:()=>{const t=Object(Ke.a)(base,0),c=Object(re.a)(t,Object(Tt.a)(base),Object(T.a)(base));let l=Object(d.a)(e,Object(d.a)(n,c));const h=k.getReductionAxes(r.shape,o);return h.length>0&&(l=Object(S.a)(l,h)),Object(I.a)(l,r.shape)}}}},Et={kernelName:c.hc,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,mask=Object(Ke.a)(n,0);return{x:()=>Object(re.a)(mask,e,Object(d.a)(e,r)),alpha:()=>{let t=Object(re.a)(mask,Object(T.a)(e),Object(d.a)(e,n));const o=Object(k.getReductionAxes)(r.shape,e.shape);return o.length>0&&(t=Object(S.a)(t,o)),Object(I.a)(t,r.shape)}}}},At={kernelName:c.lc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=k.assertAndGetBroadcastShape(a.shape,b.shape);return{a:()=>{const t=Object(div.a)(e,Object(l.a)(b,"float32")),r=k.getReductionAxes(a.shape,n);return r.length>0?Object(I.a)(Object(S.a)(t,r),a.shape):t},b:()=>{let t=Object(d.a)(e,Object(l.a)(a,"float32"));const r=k.getReductionAxes(b.shape,n);r.length>0&&(t=Object(I.a)(Object(S.a)(t,r),b.shape));const o=Object(v.a)(b);return Object(m.a)(Object(div.a)(t,Object(l.a)(o,"float32")))}}}},Rt={kernelName:c.mc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(m.a)(Object(v.a)(n)))}}},Ft={kernelName:c.oc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,mask=Object(d.a)(Object(te.a)(n,6),Object(h.a)(n));return{x:()=>Object(d.a)(e,Object(l.a)(mask,"float32"))}}},Dt={kernelName:c.nc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(l.a)(Object(h.a)(n),"float32"))}}},_t={kernelName:c.pc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(I.a)(e,n.shape)}}},Mt={kernelName:c.qc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,o={dy:e,images:r};return{images:()=>M.a.runKernel(c.rc,o,n)}}},zt={kernelName:c.sc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,o={dy:e,images:r};return{images:()=>M.a.runKernel(c.tc,o,n)}}};var Lt=n(977);const Pt={kernelName:c.uc,gradFunc:(e,t,n)=>{const{dims:r}=n,o=Object(L.I)(r,e.shape);return{x:()=>Object(Lt.a)(e,o)}}},Bt={kernelName:c.wc,gradFunc:e=>({x:()=>Object(T.a)(e)})},Wt={kernelName:c.xc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(m.a)(Object(div.a)(e,Object(d.a)(Object(Ct.a)(n,1.5),2)))}}};var Ut=n(982);const Vt={kernelName:c.zc,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Object(l.a)(Object(T.a)(n),"float32"),t:()=>Object(d.a)(e,Object(l.a)(n,e.dtype)),e:()=>Object(d.a)(e,Object(l.a)(Object(Ut.a)(n),e.dtype))}}};var Gt=n(1093);const Ht={kernelName:c.Ac,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const mask=Object(Ke.a)(n,Object(y.a)(0)),t=Object(y.a)(Gt.b),r=Object(y.a)(Gt.a),o=Object(d.a)(e,r),c=Object(d.a)(Object(d.a)(e,t),Object(Ce.a)(Object(l.a)(n,"float32")));return Object(re.a)(mask,o,c)}}}},qt={kernelName:c.Bc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(d.a)(n,Object(sub.a)(Object(y.a)(1),n)))}}},Kt={kernelName:c.Cc,gradFunc:e=>({x:()=>Object(T.a)(e)})};var Xt=n(1025);const Yt={kernelName:c.Dc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(Object(Xt.a)(Object(l.a)(n,"float32")),e)}}};var Zt=n(1098);const Jt={kernelName:c.Ec,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(Object(Zt.a)(Object(l.a)(n,"float32")),e)}}};var Qt=n(1007),en=n(979);const tn={kernelName:c.Fc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:o,size:c}=n,l=r.shape,[d,h]=Object(en.parseSliceParams)(r,o,c),f=[];for(let i=0;i<e.rank;i++)f.push([d[i],l[i]-d[i]-h[i]]);return{x:()=>Object(Qt.a)(e,f)}}},nn={kernelName:c.Gc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:o}=n,c=Object(d.a)(e,r);return{logits:()=>Object(sub.a)(c,Object(d.a)(Object(S.a)(c,[o],true),r))}}};var rn=n(978);const an={kernelName:c.Hc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(rn.a)(n))}}};var sn=n(983);const on={kernelName:c.Ic,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:o}=n;return{x:()=>Object(sn.a)(e,r,o)}}};var un=n(522);const cn={kernelName:c.Oc,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Object(un.a)(e,r)}}},ln={kernelName:c.Pc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(d.a)(Object(x.a)(Object(l.a)(n,"float32")),2))}}},dn={kernelName:c.Qc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(d.a)(Object(l.a)(n,"float32"),2))}}},hn={kernelName:c.Rc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=Object(y.a)(2);return{a:()=>Object(d.a)(e,Object(d.a)(n,Object(sub.a)(a,b))),b:()=>Object(d.a)(e,Object(d.a)(n,Object(sub.a)(b,a)))}}},pn={kernelName:c.Sc,gradFunc:e=>({x:()=>Object(T.a)(e)})},fn={kernelName:c.Xc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=k.assertAndGetBroadcastShape(a.shape,b.shape);return{a:()=>{let t=e;const r=k.getReductionAxes(a.shape,n);return r.length>0&&(t=Object(S.a)(t,r)),Object(I.a)(t,a.shape)},b:()=>{let t=e;const r=k.getReductionAxes(b.shape,n);return r.length>0&&(t=Object(S.a)(t,r)),Object(I.a)(Object(m.a)(t),b.shape)}}}},mn={kernelName:c.Yc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,o=r.shape.slice(),{axis:c}=n;Object(L.I)(c,r.shape).forEach((e=>{o[e]=1}));const l=Object(I.a)(e,o),h=Object(d.a)(l,Object(ht.a)(r.shape,"float32"));return{x:()=>h}}},bn={kernelName:c.Zc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(v.a)(Object(Xt.a)(n)))}}},gn={kernelName:c.ad,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(Object(sub.a)(Object(y.a)(1),Object(v.a)(n)),e)}}},yn={kernelName:c.bd,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:o}=n;return{x:()=>{let t=Object(T.a)(r);if(1===r.rank)for(let i=0;i<o[0];++i)t=Object(A.a)(t,Object(bt.a)(e,[i*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let i=0;i<o[0];++i)for(let n=0;n<o[1];++n)t=Object(A.a)(t,Object(bt.a)(e,[i*r.shape[0],n*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let i=0;i<o[0];++i)for(let n=0;n<o[1];++n)for(let c=0;c<o[2];++c)t=Object(A.a)(t,Object(bt.a)(e,[i*r.shape[0],n*r.shape[1],c*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let i=0;i<o[0];++i)for(let n=0;n<o[1];++n)for(let c=0;c<o[2];++c)for(let l=0;l<o[3];++l)t=Object(A.a)(t,Object(bt.a)(e,[i*r.shape[0],n*r.shape[1],c*r.shape[2],l*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},xn={kernelName:c.ed,gradFunc:(e,t,n)=>{const r=n,{perm:o}=r,c=ve.h(o);return{x:()=>Object(we.a)(e,c)}}};var vn=n(804);const On={kernelName:c.gd,gradFunc:(e,t,n)=>{const r=n,{axis:o}=r;return{value:()=>Object(vn.a)(e,o)}}};var wn=n(973),kn=n(1002),In=n(975);const Sn={kernelName:c.hd,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Object(In.a)(t,Object(T.a)(t)),r=Object(kn.a)(e,n);let o=Object(ee.a)(t,Object(y.a)(0,"int32"));const c=r.rank-o.rank;for(let i=0;i<c;++i)o=Object(wn.a)(o,i+1);o=Object(ne.a)(o,Object(ht.a)(r.shape,"bool"));const l=Object(T.a)(r);return Object(re.a)(o,r,l)}(e,n)}}};const Nn={kernelName:c.id,gradFunc:e=>({x:()=>Object(T.a)(e)})};var jn=n(968);const Tn=[f,O,w,N,j,C,$,E,R,F,D,_,U,G,K,Y,Z,J,Q,ae,se,oe,he,le,me,ge,xe,ke,Ne,je,At,Te,$e,Ee,Ae,Re,De,Fe,ze,Pe,Ue,Ve,Ge,He,qe,Xe,Ye,Ze,Je,et,at,at,it,ut,lt,pt,ft,mt,gt,xt,vt,Ot,kt,It,Nt,jt,jt,$t,Et,Rt,Ft,Dt,_t,Mt,zt,Pt,Bt,Wt,Vt,Ht,qt,Kt,Yt,Jt,tn,nn,an,on,on,cn,cn,ln,hn,dn,pn,fn,mn,bn,gn,yn,xn,On,Sn,Nn];for(const e of Tn)Object(jn.d)(e);var Cn=n(797),$n=n(373);Object($n.d)().prototype.abs=function(){return this.throwIfDisposed(),Object(Cn.a)(this)};var En=n(1153);Object($n.d)().prototype.acos=function(){return this.throwIfDisposed(),Object(En.a)(this)};var An=n(1154);Object($n.d)().prototype.acosh=function(){return this.throwIfDisposed(),Object(An.a)(this)},Object($n.d)().prototype.add=function(b){return this.throwIfDisposed(),Object(A.a)(this,b)};var Rn=n(1074);Object($n.d)().prototype.all=function(e,t){return this.throwIfDisposed(),Object(Rn.a)(this,e,t)};var Fn=n(1075);Object($n.d)().prototype.any=function(e,t){return this.throwIfDisposed(),Object(Fn.a)(this,e,t)};var Dn=n(1076);Object($n.d)().prototype.argMax=function(e){return this.throwIfDisposed(),Object(Dn.a)(this,e)};var _n=n(1099);Object($n.d)().prototype.argMin=function(e){return this.throwIfDisposed(),Object(_n.a)(this,e)},Object($n.d)().prototype.asScalar=function(){return this.throwIfDisposed(),Object(L.b)(1===this.size,(()=>"The array must have only 1 element.")),Object(I.a)(this,[])},Object($n.d)().prototype.asType=function(e){return this.throwIfDisposed(),Object(l.a)(this,e)},Object($n.d)().prototype.as1D=function(){return this.throwIfDisposed(),Object(I.a)(this,[this.size])},Object($n.d)().prototype.as2D=function(e,t){return this.throwIfDisposed(),Object(I.a)(this,[e,t])},Object($n.d)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Object(I.a)(this,[e,t,n])},Object($n.d)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Object(I.a)(this,[e,t,n,r])},Object($n.d)().prototype.as5D=function(e,t,n,r,o){return this.throwIfDisposed(),Object(I.a)(this,[e,t,n,r,o])};var Mn=n(1155);Object($n.d)().prototype.asin=function(){return this.throwIfDisposed(),Object(Mn.a)(this)};var zn=n(1156);Object($n.d)().prototype.asinh=function(){return this.throwIfDisposed(),Object(zn.a)(this)};var Ln=n(1157);Object($n.d)().prototype.atan=function(){return this.throwIfDisposed(),Object(Ln.a)(this)};var Pn=n(1100);Object($n.d)().prototype.atan2=function(b){return this.throwIfDisposed(),Object(Pn.a)(this,b)};var Bn=n(1158);Object($n.d)().prototype.atanh=function(){return this.throwIfDisposed(),Object(Bn.a)(this)};var Wn=n(998);Object($n.d)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Object(Wn.a)(this,e,t,n,r)},Object($n.d)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Object(sn.a)(this,e,t)};var Un=n(959);Object($n.d)().prototype.batchNorm=function(e,t,n,r,o){return this.throwIfDisposed(),Object(Un.a)(this,e,t,n,r,o)};var Vn=n(1010);Object($n.d)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Object(Vn.a)(this,e)},Object($n.d)().prototype.cast=function(e){return this.throwIfDisposed(),Object(l.a)(this,e)};var Gn=n(1159);Object($n.d)().prototype.ceil=function(){return this.throwIfDisposed(),Object(Gn.a)(this)};var Hn=n(1139);Object($n.d)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Object(Hn.a)(this,e,t)},Object($n.d)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof $n.a&&(e=[e]),Object(un.a)([this,...e],t)};var qn=n(1077);Object($n.d)().prototype.conv1d=function(filter,e,t,n,r,o){return this.throwIfDisposed(),Object(qn.a)(this,filter,e,t,n,r,o)};var Kn=n(1078);Object($n.d)().prototype.conv2dTranspose=function(filter,e,t,n,r){return this.throwIfDisposed(),Object(Kn.a)(this,filter,e,t,n,r)},Object($n.d)().prototype.conv2d=function(filter,e,t,n,r,o){return this.throwIfDisposed(),Object(de.a)(this,filter,e,t,n,r,o)},Object($n.d)().prototype.cos=function(){return this.throwIfDisposed(),Object(Xt.a)(this)},Object($n.d)().prototype.cosh=function(){return this.throwIfDisposed(),Object(Zt.a)(this)},Object($n.d)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Object(Oe.a)(this,e,t,n)};var Xn=n(1101);Object($n.d)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Object(Xn.a)(this,e,t)};var Yn=n(971);Object($n.d)().prototype.depthwiseConv2d=function(filter,e,t,n,r,o){return this.throwIfDisposed(),Object(Yn.a)(this,filter,e,t,n,r,o)};var Zn=n(1102);Object($n.d)().prototype.dilation2d=function(filter,e,t,n,r){return this.throwIfDisposed(),Object(Zn.a)(this,filter,e,t,n,r)};var Jn=n(1103);Object($n.d)().prototype.divNoNan=function(b){return this.throwIfDisposed(),Object(Jn.a)(this,b)},Object($n.d)().prototype.div=function(b){return this.throwIfDisposed(),Object(div.a)(this,b)};var Qn=n(1104);Object($n.d)().prototype.dot=function(b){return this.throwIfDisposed(),Object(Qn.a)(this,b)};var er=n(1e3);Object($n.d)().prototype.elu=function(){return this.throwIfDisposed(),Object(er.a)(this)},Object($n.d)().prototype.equal=function(b){return this.throwIfDisposed(),Object(tt.a)(this,b)};var nr=n(1160);Object($n.d)().prototype.erf=function(){return this.throwIfDisposed(),Object(nr.a)(this)},Object($n.d)().prototype.exp=function(){return this.throwIfDisposed(),Object(Ce.a)(this)},Object($n.d)().prototype.expandDims=function(e){return this.throwIfDisposed(),Object(wn.a)(this,e)};var rr=n(1161);Object($n.d)().prototype.expm1=function(){return this.throwIfDisposed(),Object(rr.a)(this)};var ar=n(1011);Object($n.d)().prototype.fft=function(){return this.throwIfDisposed(),Object(ar.a)(this)},Object($n.d)().prototype.flatten=function(){return this.throwIfDisposed(),Object(I.a)(this,[this.size])},Object($n.d)().prototype.floor=function(){return this.throwIfDisposed(),Object(yt.a)(this)};var sr=n(999);Object($n.d)().prototype.floorDiv=function(b){return this.throwIfDisposed(),Object(sr.a)(this,b)},Object($n.d)().prototype.gather=function(e,t){return this.throwIfDisposed(),Object(kn.a)(this,e,t)},Object($n.d)().prototype.greaterEqual=function(b){return this.throwIfDisposed(),Object(ee.a)(this,b)},Object($n.d)().prototype.greater=function(b){return this.throwIfDisposed(),Object(Ke.a)(this,b)};var ir=n(1012);Object($n.d)().prototype.ifft=function(){return this.throwIfDisposed(),Object(ir.a)(this)};var or=n(1088);Object($n.d)().prototype.irfft=function(){return this.throwIfDisposed(),Object(or.a)(this)};var ur=n(1162);Object($n.d)().prototype.isFinite=function(){return this.throwIfDisposed(),Object(ur.a)(this)};var cr=n(1163);Object($n.d)().prototype.isInf=function(){return this.throwIfDisposed(),Object(cr.a)(this)};var lr=n(1164);Object($n.d)().prototype.isNaN=function(){return this.throwIfDisposed(),Object(lr.a)(this)};var dr=n(1003);Object($n.d)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Object(dr.a)(this,e)},Object($n.d)().prototype.lessEqual=function(b){return this.throwIfDisposed(),Object(te.a)(this,b)},Object($n.d)().prototype.less=function(b){return this.throwIfDisposed(),Object(st.a)(this,b)};var pr=n(1105);Object($n.d)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Object(pr.a)(this,e,t,n,r)};var fr=n(1165);Object($n.d)().prototype.logSigmoid=function(){return this.throwIfDisposed(),Object(fr.a)(this)};var mr=n(1142);Object($n.d)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Object(mr.a)(this,e)};var gr=n(1020);Object($n.d)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Object(gr.a)(this,e,t)},Object($n.d)().prototype.log=function(){return this.throwIfDisposed(),Object(Tt.a)(this)};var yr=n(1080);Object($n.d)().prototype.log1p=function(){return this.throwIfDisposed(),Object(yr.a)(this)},Object($n.d)().prototype.logicalAnd=function(b){return this.throwIfDisposed(),Object(ne.a)(this,b)},Object($n.d)().prototype.logicalNot=function(){return this.throwIfDisposed(),Object(Ut.a)(this)};var xr=n(1026);Object($n.d)().prototype.logicalOr=function(b){return this.throwIfDisposed(),Object(xr.a)(this,b)};var vr=n(1106);Object($n.d)().prototype.logicalXor=function(b){return this.throwIfDisposed(),Object(vr.a)(this,b)},Object($n.d)().prototype.matMul=function(b,e,t){return this.throwIfDisposed(),Object(H.a)(this,b,e,t)};var Or=n(1004);Object($n.d)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Object(Or.a)(this,e,t,n,r)};var wr=n(816);Object($n.d)().prototype.max=function(e,t){return this.throwIfDisposed(),Object(wr.a)(this,e,t)},Object($n.d)().prototype.maximum=function(b){return this.throwIfDisposed(),Object(In.a)(this,b)};var kr=n(976);Object($n.d)().prototype.mean=function(e,t){return this.throwIfDisposed(),Object(kr.a)(this,e,t)};var Ir=n(1018);Object($n.d)().prototype.min=function(e,t){return this.throwIfDisposed(),Object(Ir.a)(this,e,t)};var Sr=n(1005);Object($n.d)().prototype.minimum=function(b){return this.throwIfDisposed(),Object(Sr.a)(this,b)};var Nr=n(1107);Object($n.d)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Object(Nr.a)(this,e,t)};var jr=n(1108);Object($n.d)().prototype.mod=function(b){return this.throwIfDisposed(),Object(jr.a)(this,b)},Object($n.d)().prototype.mul=function(b){return this.throwIfDisposed(),Object(d.a)(this,b)},Object($n.d)().prototype.neg=function(){return this.throwIfDisposed(),Object(m.a)(this)};var Tr=n(1017);Object($n.d)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Object(Tr.a)(this,e,t,n)};var Cr=n(1006);Object($n.d)().prototype.notEqual=function(b){return this.throwIfDisposed(),Object(Cr.a)(this,b)};var $r=n(1081);Object($n.d)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Object($r.a)(this,e,t,n)};var Er=n(1144);Object($n.d)().prototype.onesLike=function(){return this.throwIfDisposed(),Object(Er.a)(this)},Object($n.d)().prototype.pad=function(e,t){return this.throwIfDisposed(),Object(Qt.a)(this,e,t)};var Ar=n(1109);Object($n.d)().prototype.pool=function(e,t,n,r,o,c){return this.throwIfDisposed(),Object(Ar.a)(this,e,t,n,r,o,c)},Object($n.d)().prototype.pow=function(e){return this.throwIfDisposed(),Object(Ct.a)(this,e)};var Rr=n(1008);Object($n.d)().prototype.prelu=function(e){return this.throwIfDisposed(),Object(Rr.a)(this,e)};var Fr=n(1110);Object($n.d)().prototype.prod=function(e,t){return this.throwIfDisposed(),Object(Fr.a)(this,e,t)};var Dr=n(1166);Object($n.d)().prototype.reciprocal=function(){return this.throwIfDisposed(),Object(Dr.a)(this)};var _r=n(819);Object($n.d)().prototype.relu=function(){return this.throwIfDisposed(),Object(_r.a)(this)};var Mr=n(1021);Object($n.d)().prototype.relu6=function(){return this.throwIfDisposed(),Object(Mr.a)(this)},Object($n.d)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Object(I.a)(this,e.shape)},Object($n.d)().prototype.reshape=function(e){return this.throwIfDisposed(),Object(I.a)(this,e)};var zr=n(1149);Object($n.d)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Object(zr.a)(this,e,t,n)};var Lr=n(1148);Object($n.d)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Object(Lr.a)(this,e,t,n)},Object($n.d)().prototype.reverse=function(e){return this.throwIfDisposed(),Object(Lt.a)(this,e)};var Pr=n(1013);Object($n.d)().prototype.rfft=function(){return this.throwIfDisposed(),Object(Pr.a)(this)};var Br=n(1090);Object($n.d)().prototype.round=function(){return this.throwIfDisposed(),Object(Br.a)(this)},Object($n.d)().prototype.rsqrt=function(){return this.throwIfDisposed(),Object(_e.a)(this)};var Wr=n(1085);Object($n.d)().prototype.selu=function(){return this.throwIfDisposed(),Object(Wr.a)(this)};var Ur=n(1086);Object($n.d)().prototype.separableConv2d=function(e,t,n,r,o,c){return this.throwIfDisposed(),Object(Ur.a)(this,e,t,n,r,o,c)},Object($n.d)().prototype.sigmoid=function(){return this.throwIfDisposed(),Object(rn.a)(this)};var Vr=n(1167);Object($n.d)().prototype.sign=function(){return this.throwIfDisposed(),Object(Vr.a)(this)},Object($n.d)().prototype.sin=function(){return this.throwIfDisposed(),Object(be.a)(this)},Object($n.d)().prototype.sinh=function(){return this.throwIfDisposed(),Object(ye.a)(this)},Object($n.d)().prototype.slice=function(e,t){return this.throwIfDisposed(),Object(bt.a)(this,e,t)};var Gr=n(1145);Object($n.d)().prototype.softmax=function(e){return this.throwIfDisposed(),Object(Gr.a)(this,e)};var Hr=n(1087);Object($n.d)().prototype.softplus=function(){return this.throwIfDisposed(),Object(Hr.a)(this)},Object($n.d)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Object(X.a)(this,e,t)},Object($n.d)().prototype.split=function(e,t){return this.throwIfDisposed(),Object(ie.a)(this,e,t)},Object($n.d)().prototype.sqrt=function(){return this.throwIfDisposed(),Object(x.a)(this)},Object($n.d)().prototype.square=function(){return this.throwIfDisposed(),Object(v.a)(this)};var qr=n(1019);Object($n.d)().prototype.squaredDifference=function(b){return this.throwIfDisposed(),Object(qr.a)(this,b)};var Kr=n(1009);Object($n.d)().prototype.squeeze=function(e){return this.throwIfDisposed(),Object(Kr.a)(this,e)},Object($n.d)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof $n.a?[this,e]:[this,...e];return Object(vn.a)(n,t)},Object($n.d)().prototype.step=function(e){return this.throwIfDisposed(),Object(h.a)(this,e)};var Xr=n(1168);Object($n.d)().prototype.stridedSlice=function(e,t,n,r,o,c,l,d){return this.throwIfDisposed(),Object(Xr.a)(this,e,t,n,r,o,c,l,d)},Object($n.d)().prototype.sub=function(b){return this.throwIfDisposed(),Object(sub.a)(this,b)},Object($n.d)().prototype.sum=function(e,t){return this.throwIfDisposed(),Object(S.a)(this,e,t)};var Yr=n(1169);Object($n.d)().prototype.tan=function(){return this.throwIfDisposed(),Object(Yr.a)(this)};var Zr=n(1146);Object($n.d)().prototype.tanh=function(){return this.throwIfDisposed(),Object(Zr.a)(this)},Object($n.d)().prototype.tile=function(e){return this.throwIfDisposed(),Object(Me.a)(this,e)},Object($n.d)().prototype.toBool=function(){return this.throwIfDisposed(),Object(l.a)(this,"bool")},Object($n.d)().prototype.toFloat=function(){return this.throwIfDisposed(),Object(l.a)(this,"float32")},Object($n.d)().prototype.toInt=function(){return this.throwIfDisposed(),Object(l.a)(this,"int32")};var Jr=n(1111);Object($n.d)().prototype.topk=function(e,t){return this.throwIfDisposed(),Object(Jr.a)(this,e,t)},Object($n.d)().prototype.transpose=function(e){return this.throwIfDisposed(),Object(we.a)(this,e)};var Qr=n(1112);let ea;function ta(){return null==ea&&(ea=Object(o.ud)().epsilon()),ea}Object($n.d)().prototype.unique=function(e){return this.throwIfDisposed(),Object(Qr.a)(this,e)},Object($n.d)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Object(Le.a)(this,e,t)},Object($n.d)().prototype.unstack=function(e){return this.throwIfDisposed(),Object(St.a)(this,e)},Object($n.d)().prototype.where=function(e,t){return this.throwIfDisposed(),Object(re.a)(e,this,t)},Object($n.d)().prototype.zerosLike=function(){return this.throwIfDisposed(),Object(T.a)(this)};class na extends Error{constructor(e){super(e),Object.setPrototypeOf(this,na.prototype)}}class ra extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ra.prototype)}}class aa extends Error{constructor(e){super(e),Object.setPrototypeOf(this,aa.prototype)}}class sa extends Error{constructor(e){super(e),Object.setPrototypeOf(this,sa.prototype)}}class ia extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ia.prototype)}}Error;function oa(e,t){if(Array.isArray(e)){let n=[];for(let i=0;i<t;i++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function ua(e,t){if(!e)throw new ia(t)}function ca(e,t){let n=0;for(const r of e)r===t&&n++;return n}function la(e){return 1===e.length?e[0]:e}function da(e){return Array.isArray(e)?e:[e]}function ha(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function pa(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let fa={};function ma(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function ba(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>ba(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?ba(t):e[n]=t.value)}}}function ga(e,t={},n={},r="object",o=!1){if("string"==typeof e){const o=e;let c;if(o in n)c=n[o];else if(o in fa)c=fa[o];else if(c=t[o],null==c)throw new aa(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return c}{const c=e;if(null==c.className||null==c.config)throw new aa(`${r}: Improper config format: ${JSON.stringify(c)}.\n'className' and 'config' must set.`);const l=c.className;let d,h;if(l in n?[d,h]=n[l]:l in fa?[d,h]=fa.className:l in t&&([d,h]=t[l]),null==d)throw new aa(`Unknown ${r}: ${l}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=h){const e={};for(const t of Object.keys(fa))e[t]=fa[t];for(const t of Object.keys(n))e[t]=n[t];c.config.customObjects=e;const t=Object.assign({},fa);for(const e of Object.keys(n))fa[e]=n[e];ba(c.config);const r=h(d,c.config,n,o);return fa=Object.assign({},t),r}{const e=Object.assign({},fa);for(const e of Object.keys(n))fa[e]=n[e];const t=new d(c.config);return fa=Object.assign({},e),t}}}function ya(a,b){return-1*function(a,b){return a<b?-1:a>b?1:0}(a,b)}function xa(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function va(e){if(null==e)throw new aa(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Oa(e,label,t){if(null!=t&&e.indexOf(t)<0)throw new aa(`${t} is not a valid ${label}.  Valid values are ${e} or null/undefined.`)}function wa(e,t,n=0,r=1/0){return ua(n>=0),ua(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function ka(e,t){Array.isArray(e)?(o.yf.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,i)=>ka(e,`element ${i+1} of ${t}`)))):o.yf.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Ia(e)}.`))}function Ia(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Ia(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Sa(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function Na(e,t){return Object(o.rf)((()=>o.gf(o.kf(o.Ae(e,e),t,!0))))}class ja extends o.Ue.Serializable{getConfig(){return{}}}class Ta extends ja{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(o.rf)((()=>{const t=Na(e,this.axis),n=o.Dd(t,0,this.maxValue);return o.Ae(e,o.Sd(n,o.od(ta(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Ta.className="MaxNorm",o.Ue.registerClass(Ta);class Ca extends ja{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(o.rf)((()=>o.Sd(e,o.od(ta(),Na(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Ca.className="UnitNorm",o.Ue.registerClass(Ca);class $a extends ja{apply(e){return o.Oe(e)}}$a.className="NonNeg",o.Ue.registerClass($a);class Ea extends ja{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(o.rf)((()=>{const t=Na(e,this.axis),n=o.od(o.Ae(this.rate,o.Dd(t,this.minValue,this.maxValue)),o.Ae(1-this.rate,t));return o.Ae(e,o.Sd(n,o.od(ta(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Ea.className="MinMaxNorm",o.Ue.registerClass(Ea);const Aa={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ra(e){return ma(e)}function Fa(e,t={}){return ga(e,o.Ue.SerializationMap.getMap().classNameMap,t,"constraint")}function Da(e){if(null==e)return null;if("string"==typeof e){return Fa({className:e in Aa?Aa[e]:e,config:{}})}return e instanceof ja?e:Fa(e)}const _a=["channelsFirst","channelsLast"],Ma=["nearest","bilinear"],za=["valid","same","causal"],La=["max","avg"],Pa=["sum","mul","concat","ave"],Ba=new Map;function Wa(e){Oa(_a,"DataFormat",e)}function Ua(e){Oa(za,"PaddingMode",e)}function Va(e){Oa(La,"PoolMode",e)}const Ga=[];function Ha(e,t){Ga.push(e);try{const e=t();return Ga.pop(),e}catch(e){throw Ga.pop(),e}}function qa(e){if(!Ya(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Ga.length?"":Ga.join("/")+"/")+e}function Ka(e){if(!Ya(e))throw new Error("Not a valid tensor name: '"+e+"'");Ba.has(e)||Ba.set(e,0);const t=Ba.get(e);if(Ba.set(e,Ba.get(e)+1),t>0){const n=`${e}_${t}`;return Ba.set(n,1),n}return e}const Xa=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Ya(e){return!!e.match(Xa)}function Za(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let i=t;i<n;++i)r*=e[i];return r}function Ja(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let i=0;i<e.length;i++){const n=e[i];n<t&&(t=n)}return t}function Qa(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let i=0;i<e.length;i++){const n=e[i];n>t&&(t=n)}return t}function es(e,t){if(t<e)throw new aa(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let i=e;i<t;++i)n.push(i);return n}function ts(e,t){return o.Cd(e,t)}function ns(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),o.Pe(e,n)}function rs(e,t,n){return Object(o.rf)((()=>{switch(e.rank){case 1:return o.Ye(e,t,n);case 2:return o.Ze(e,[t,0],[n,e.shape[1]]);case 3:return o.af(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return o.bf(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return o.Xe(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return o.Xe(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new aa(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function as(e,t,n){return Object(o.rf)((()=>{switch(e.rank){case 1:return o.Ye(e,t,n);case 2:return o.Ze(e,[0,t],[e.shape[0],n]);case 3:return o.af(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return o.bf(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new aa(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ss(e,t,n,r){return Object(o.rf)((()=>{switch(e.rank){case 1:return o.Ye(e,t,n);case 2:switch(r){case 1:return rs(e,t,n);case 2:return as(e,t,n);default:throw new aa(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return rs(e,t,n);case 2:return o.af(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return as(e,t,n);default:throw new aa(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return rs(e,t,n);case 2:return o.bf(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return o.bf(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return as(e,t,n);default:throw new aa(`The axis is not within the rank of the tensor ${r}`)}default:throw new aa(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function is(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),o.Fd(e,t)}function os(a,b){switch(a.rank){case 1:return o.Gd([a,b]);case 2:return o.Hd([a,b],0);case 3:return o.Id([a,b],0);case 4:return o.Jd([a,b],0);default:throw new aa(`concatAlongFirstAxis() received an unsupported tensor rank: ${a.rank}`)}}function us(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new aa(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return o.sf(e,t)}function cs(e,t=0,n=1,r,c){return o.Ke(e,t,n,r,c)}function ls(a,b,e,t){if(a.rank<2||b.rank<2)throw new sa(`dot requires both inputs to be rank >= 2 but got x shape = ${a.shape} and y shape = ${b.shape}`);if(b.rank>=3){if(a.shape.slice(-1)[0]!==b.shape.slice(-2)[0])throw new sa(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${a.shape} and  y shape = ${b.shape}`)}if(2===a.rank&&2===b.rank){const n=!1,r=!1;return o.de.matMul({a:a,b:b,transposeA:n,transposeB:r,bias:t?ps(a.rank,t,"channelsLast"):null,activation:e})}{const n=a.shape.slice(),r=n.pop();a=o.Pe(a,[-1,r]);const c=b.shape.slice(),l=c.pop(),d=c.pop(),h=[...c,l],f=Array.from({length:b.rank},((e,i)=>0===i?b.rank-2:i<=b.rank-2?i-1:i));b=o.Pe(o.uf(b,f),[d,-1]);const m=[...n,...h],y=!1,x=!1;return o.Pe(o.de.matMul({a:a,b:b,transposeA:y,transposeB:x,bias:t?ps(a.rank,t,"channelsLast"):null,activation:e}),m)}}function ds(e,t,n){return Object(o.rf)((()=>(t=Array.isArray(t)?Object(o.of)(t,"int32"):o.Cd(t,"int32"),o.ee(e,t,n))))}function hs(e){return o.Ae(e,e)}function ps(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new aa(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?o.Pe(t,[1,r[0],1,1,1]):o.Pe(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?o.Pe(t,[1,1,1,1,r[0]]):o.Pe(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?o.Pe(t,[1,r[0],1,1]):o.Pe(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?o.Pe(t,[1,1,1,r[0]]):o.Pe(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?o.Pe(t,[1,r[0],1]):o.Pe(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?o.Pe(t,[1,1,r[0]]):o.Pe(t,[1].concat(r))}else if(e<3)return t;throw new aa(`Unsupported input rank by biasAdd: ${t.rank}`)}function fs(e,t,n){return Object(o.rf)((()=>(null==n&&(n="channelsLast"),Wa(n),o.od(e,ps(e.rank,t,n)))))}function ms(e,t,n,r){return Object(o.rf)((()=>o.Td(e,t,n,r)))}function bs(e,t,n=!1){return n?e():t()}const gs=["fanIn","fanOut","fanAvg"],ys=["normal","uniform","truncatedNormal"];class xs extends o.Ue.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class vs extends xs{apply(e,t){return Object(o.Df)(e,t)}}vs.className="Zeros",o.Ue.registerClass(vs);class Os extends xs{apply(e,t){return Object(o.Fe)(e,t)}}Os.className="Ones",o.Ue.registerClass(Os);class ws extends xs{constructor(e){if(super(),"object"!=typeof e)throw new aa(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new aa(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Object(o.rf)((()=>Object(o.Ae)(Object(o.Re)(this.value),Object(o.Fe)(e,t))))}getConfig(){return{value:this.value}}}ws.className="Constant",o.Ue.registerClass(ws);class ks extends xs{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Object(o.Le)(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}ks.className="RandomUniform",o.Ue.registerClass(ks);class Is extends xs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new sa(`randomNormal does not support dType ${t}.`);return cs(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Is.className="RandomNormal",o.Ue.registerClass(Is);class Ss extends xs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new sa(`truncatedNormal does not support dType ${t}.`);return Object(o.vf)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ss.className="TruncatedNormal",o.Ue.registerClass(Ss);class Ns extends xs{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Object(o.rf)((()=>{if(2!==e.length||e[0]!==e[1])throw new aa("Identity matrix initializer can only be used for 2D square matrices.");return Object(o.Ae)(this.gain,Object(o.ae)(e[0]))}))}getConfig(){return{gain:this.gain}}}Ns.className="Identity",o.Ue.registerClass(Ns);class js extends xs{constructor(e){if(super(),e.scale<0)throw new aa(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Oa(gs,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Oa(ys,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Wa(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Za(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Za(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Za(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],c=n[1];let l=this.scale;if("fanIn"===this.mode?l/=Math.max(1,r):"fanOut"===this.mode?l/=Math.max(1,c):l/=Math.max(1,(r+c)/2),"normal"===this.distribution){const n=Math.sqrt(l);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new sa(`${this.getClassName()} does not support dType ${t}.`);return Object(o.vf)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*l);return Object(o.Le)(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}js.className="VarianceScaling",o.Ue.registerClass(js);class Ts extends js{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return js.className}}Ts.className="GlorotUniform",o.Ue.registerClass(Ts);class Cs extends js{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return js.className}}Cs.className="GlorotNormal",o.Ue.registerClass(Cs);class $s extends js{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return js.className}}$s.className="HeNormal",o.Ue.registerClass($s);class Es extends js{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return js.className}}Es.className="HeUniform",o.Ue.registerClass(Es);class As extends js{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return js.className}}As.className="LeCunNormal",o.Ue.registerClass(As);class Rs extends js{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return js.className}}Rs.className="LeCunNormal",o.Ue.registerClass(Rs);class Fs extends xs{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new sa("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Object(o.rf)((()=>{if(e.length<2)throw new sa("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const a=cs(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let q=o.me.gramSchmidt(a);return e[0]>e[1]&&(q=Object(o.uf)(q)),Object(o.Ae)(this.gain,q)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Fs.className="Orthogonal",o.Ue.registerClass(Fs);const Ds={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function _s(e,t={}){return ga(e,o.Ue.SerializationMap.getMap().classNameMap,t,"initializer")}function Ms(e){return ma(e)}function zs(e){if("string"==typeof e){const t=e in Ds?Ds[e]:e;if("GlorotNormal"===t)return new Cs;if("GlorotUniform"===t)return new Ts;if("HeNormal"===t)return new $s;if("HeUniform"===t)return new Es;if("LeCunNormal"===t)return new As;if("LeCunUniform"===t)return new Rs;{const e={};return e.className=t,e.config={},_s(e)}}return e instanceof xs?e:_s(e)}let Ls=0;function Ps(){return Ls++}const Bs={};function Ws(e=""){return e in Bs||(Bs[e]=0),Bs[e]+=1,e+Bs[e].toString()}function Us(e){return Array.isArray(e)&&Array.isArray(e[0])}function Vs(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Gs(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new aa(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Hs(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new aa(`Expected exactly 1 Shape; got ${e.length}`)}return e}function qs(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((a,b)=>a*b));return t}const Ks="Variable";class Xs{constructor(e,t="float32",n="Variable",r=!0,c=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Ps(),n=null==n?Ks:n,this.originalName=qa(n),this.name=Ka(this.originalName),this.trainable_=r,this.constraint=c,this.val=o.zf(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Ys(e){return e.map((e=>e.read()))}function Zs(e){e.forEach((e=>{e[0].write(e[1])}))}class Js{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Qs{constructor(e,t,n,r,o,c,l){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=o,this.outputTensorIndex=l,this.id=Ps(),null!=c&&(this.originalName=qa(c),this.name=Ka(this.originalName)),this.rank=t.length}}let ei=0;class ti{constructor(e,t){this.callArgs=t,this.id=ei++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let ni=0;class ri extends o.Ue.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ni++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=ha(e)+"_"+Ws(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new ra(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new aa(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return la(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return la(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new na(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new na(`Layer ${this.name} is not connected, no input to return.`);return la(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new na(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new na(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return la(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=da(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=da(this.inputSpec);if(e.length!==t.length)throw new aa(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],o=t[n];if(null==o)continue;const c=r.rank;if(null!=o.ndim&&c!==o.ndim)throw new aa(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${o.ndim}, found ndim=${c}`);if(null!=o.maxNDim&&c>o.maxNDim)throw new aa(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${o.maxNDim}, found ndim=${c}`);if(null!=o.minNDim&&c<o.minNDim)throw new aa(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${o.minNDim}, found ndim=${c}.`);if(null!=o.dtype&&r.dtype!==o.dtype)throw new aa(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${o.dtype}, found dtype=${r.dtype}.`);if(o.axes){const e=r.shape;for(const t in o.axes){const r=Number(t),c=o.axes[t],l=r>=0?e[r]:e[e.length+r];if(null!=c&&-1===[c,null].indexOf(l))throw new aa(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${c} but got shape ${e}.`)}}if(null!=o.shape)for(let i=0;i<o.shape.length;++i){const e=o.shape[i],t=r.shape[i];if(null!=e&&null!=t&&e!==t)throw new aa(`Input ${n} is incompatible with layer ${this.name}: expected shape=${o.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=da(e);let r=!0;for(const input of n)if(!(input instanceof Qs)){r=!1;break}let o=!0;for(const input of n)if(input instanceof Qs){o=!1;break}if(r===o)throw new aa("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ha(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of da(e))t.push(n.shape);this.build(la(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&o&&(this._refCount=1)}if(this.assertInputCompatibility(e),o){let output=this.call(e,t);const r=da(output),o=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),o.push(e);if(output=la(o),null!=this.activityRegularizer)throw new sa("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return output}{const n=function(e){e=da(e);const t=[];for(const n of e)t.push(n.shape);return la(t)}(e),r=this.computeOutputShape(n);let output;const o="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),output=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Qs(o,n,this,da(e),t,this.name,r))):new Qs(o,r,this,da(e),t,this.name),this.addInboundNode(e,output,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new sa("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return output}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,i)=>{null!=n&&null!=e[i]&&e[i]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new na(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new na(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ra(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return qs(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Ys(e?this.trainableWeights:this.weights)}setWeights(e){Object(o.rf)((()=>{const t=this.weights;if(t.length!==e.length)throw new aa(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Ys(t);for(let i=0;i<r.length;++i){const c=r[i],p=t[i],l=e[i];if(!o.yf.arraysEqual(c.shape,l.shape))throw new aa(`Layer weight shape ${c.shape} not compatible with provided weight shape ${l.shape}`);n.push([p,l])}Zs(n)}))}addWeight(e,t,n,r,o,c,l,d){if(-1!==this._addedWeightNames.indexOf(e))throw new aa(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=d?d():zs("zeros"));const h=r.apply(t,n),f=new Xs(h,n,e,c,l);return h.dispose(),null!=o&&this.addLoss((()=>o.apply(f.read()))),null==c&&(c=!0),c?this._trainableWeights.push(f):this._nonTrainableWeights.push(f),f}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=da(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,mask){if(!this.supportsMasking){if(null!=mask){if(!Array.isArray(mask))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);mask.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return mask}addInboundNode(e,t,n,r,o,c,l=null){const d=da(e);t=da(t),n=da(n),r=da(r),o=Vs(o),c=Vs(c);const h=[],f=[],m=[];for(const e of d)h.push(e.sourceLayer),f.push(e.nodeIndex),m.push(e.tensorIndex);new ti({outboundLayer:this,inboundLayers:h,nodeIndices:f,tensorIndices:m,inputTensors:d,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:o,outputShapes:c},l);for(let i=0;i<t.length;i++)t[i].sourceLayer=this,t[i].nodeIndex=this.inboundNodes.length-1,t[i].tensorIndex=i}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function ai(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let i=0;i<e.inboundLayers.length;i++){const n=ai(e.inputTensors[i],e.inboundLayers[i],e.nodeIndices[i]);for(const e of n)-1===t.indexOf(e)&&t.push(e)}return t}}}class si extends ri{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Ws("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new aa("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new aa("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new aa("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Qs(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new ti({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new aa(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function ii(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new aa("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new si({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function oi(e){if(null==e)return;const t=[],n=[],r=[];for(const o in e){const c=e[o];if("number"!=typeof c){const e=c;t.push(e.data()),n.push(o),r.push(e)}}if(t.length>0){const c=await Promise.all(t);for(let i=0;i<c.length;++i)e[n[i]]=c[i][0];Object(o.Rd)(r)}}function ui(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var ci;si.className="InputLayer",o.Ue.registerClass(si),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(ci||(ci={}));class di{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class hi{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class pi extends di{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const c=Object(o.rf)((()=>Object(o.od)(this.totals[e],Object(o.Ae)(r,n))));this.totals[e]=c,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Object(o.rf)((()=>{const n=Object(o.Ae)(Object(o.Sd)(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Object(o.je)(t[e])})))}}class fi extends di{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const o=this.history[r];for(let i=0;i<o.length;++i)if("number"!=typeof o[i]){const c=o[i];e.push(c.data()),t.push(r),n.push(i)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e){this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}}class mi extends di{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||o.Ce,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");o.yf.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,c=null!=n?n():o.yf.now();return(...l)=>{const d=null!=n?n():o.yf.now();return d-c<t||(c=d,r=e(...l)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await oi(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await oi(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await oi(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await oi(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await oi(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):o.yf.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await oi(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await oi(e),await this.trainEnd(e))}}function bi(e,t){if(null==e&&(e={}),e instanceof di)return[e];if(Array.isArray(e)&&e[0]instanceof di)return e;return da(e).map((e=>new mi(e,t)))}class gi{constructor(){}static registerCallbackConstructor(e,t){o.yf.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),gi.checkForDuplicate(t),null==gi.constructors[e]&&(gi.constructors[e]=[]),gi.constructors[e].push(t)}static checkForDuplicate(e){for(const t in gi.constructors){gi.constructors[+t].forEach((t=>{if(t===e)throw new aa("Duplicate callback constructor.")}))}}static clear(){gi.constructors={}}static createCallbacks(e){const t=[];for(const n in gi.constructors){const r=+n;e>=r&&t.push(...gi.constructors[r])}return t.map((e=>new e))}}function yi(e,t,n,r,o,c,l,d,h){const f=new fi,m=[new pi,...gi.createCallbacks(t)];null!=e&&m.push(...e),m.push(f);const y=new hi(m);return y.setParams({epochs:n,initialEpoch:r,samples:o,steps:c,batchSize:l,verbose:t,doValidation:d,metrics:h}),{callbackList:y,history:f}}function xi(e,t={},n=!1){return ga(e,o.Ue.SerializationMap.getMap().classNameMap,t,"layer",n)}function vi(e,t){return Object(o.rf)((()=>{"float32"!==e.dtype&&(e=o.Cd(e,"float32"));const n=o.kf(hs(e),t,!0),r=o.be(n.shape,ta()),c=o.gf(o.ve(n,r));return o.Sd(e,c)}))}function Oi(e,t){return Object(o.rf)((()=>o.we(hs(o.jf(t,e)),-1)))}function wi(e,t){return Object(o.rf)((()=>o.we(o.nd(o.jf(t,e)),-1)))}function ki(e,t){return Object(o.rf)((()=>{const n=o.jf(e,t),r=o.Dd(o.nd(e),ta(),Number.MAX_VALUE),c=o.nd(o.Sd(n,r));return o.Ae(100,o.we(c,-1))}))}function Ii(e,t){return Object(o.rf)((()=>{const n=o.Dd(t,ta(),Number.MAX_VALUE),r=o.ne(o.od(1,n)),c=o.Dd(e,ta(),Number.MAX_VALUE),l=o.ne(o.od(1,c));return o.we(hs(o.jf(r,l)),-1)}))}function Si(e,output,t=!1){return Object(o.rf)((()=>{if(t)output=o.df(output);else{const e=o.kf(output,output.shape.length-1,!0);output=o.Sd(output,e)}return output=o.Dd(output,ta(),1-ta()),o.Be(o.kf(o.Ae(o.Cd(e,"float32"),o.ne(output)),output.shape.length-1))}))}function Ni(e,output,t=!1){return Object(o.rf)((()=>{const n=o.Cd(o.ce(function(e){const t=[Za(e.shape)];return o.Pe(e,t)}(e)),"int32"),r=(output=o.Dd(output,ta(),1-ta())).shape;return Si(o.Pe(o.Ee(n,r[r.length-1]),r),output,t)}))}function ji(e,t){return Object(o.rf)((()=>{let n;return n=o.Dd(t,ta(),1-ta()),n=o.ne(o.Sd(n,o.jf(1,n))),o.we(function(e,t){if(!o.yf.arraysEqual(e.shape,t.shape))throw new aa(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Object(o.rf)((()=>{const n=o.Oe(t),r=o.Be(o.nd(t));return o.od(o.jf(n,o.Ae(t,e)),o.oe(o.Yd(r)))}))}(e,n),-1)}))}function Ti(e,t){return Object(o.rf)((()=>{const n=o.Dd(e,ta(),1),r=o.Dd(t,ta(),1);return o.kf(o.Ae(e,o.ne(o.Sd(n,r))),-1)}))}function Ci(e,t){return Object(o.rf)((()=>{const n=vi(e,-1),r=vi(t,-1),c=o.Ae(n,r);return o.Be(o.kf(c,-1))}))}gi.constructors={};const $i={meanSquaredError:Oi,meanAbsoluteError:wi,meanAbsolutePercentageError:ki,meanSquaredLogarithmicError:Ii,squaredHinge:function(e,t){return Object(o.rf)((()=>{const n=o.ve(0,o.jf(1,o.Ae(e,t)));return o.we(hs(n),-1)}))},hinge:function(e,t){return Object(o.rf)((()=>{const n=o.ve(0,o.jf(1,o.Ae(e,t)));return o.we(n,-1)}))},categoricalHinge:function(e,t){return Object(o.rf)((()=>{const n=o.kf(o.Ae(e,t),-1),r=o.se(o.Ae(o.jf(1,e),t),-1);return o.ve(0,o.od(1,o.jf(r,n)))}))},logcosh:function(e,t){return Object(o.rf)((()=>{const n=Math.log(2),r=o.jf(t,e),c=o.jf(o.od(r,o.ef(o.Ae(-2,r))),n);return o.we(c,-1)}))},categoricalCrossentropy:Si,sparseCategoricalCrossentropy:Ni,binaryCrossentropy:ji,kullbackLeiblerDivergence:Ti,poisson:function(e,t){return Object(o.rf)((()=>{const n=o.ne(o.od(ta(),t));return o.we(o.jf(t,o.Ae(e,n)),-1)}))},cosineProximity:Ci};function Ei(e){if("string"==typeof e){if(e in $i)return $i[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new aa(t)}return e}function Ai(e,t){return Object(o.rf)((()=>{const n=o.Ae(.5,o.Ge(t)),r=ts(o.fe(t,n),e.dtype);return o.we(o.Xd(e,r),-1)}))}function Ri(e,t){return Object(o.rf)((()=>ts(o.Xd(o.rd(e,-1),o.rd(t,-1)),"float32")))}function Fi(e,t){return Object(o.rf)((()=>o.Cd(o.kf(o.qe(o.Xd(e,1),o.Xd(t,1))),"float32")))}function Di(e,t){return Object(o.rf)((()=>{const n=Fi(e,t),r=function(e,t){return Object(o.rf)((()=>o.Cd(o.kf(o.qe(o.Xd(e,0),o.Xd(t,1))),"float32")))}(e,t),c=o.od(n,r);return o.Cd(o.Cf(o.fe(c,0),o.Sd(n,c),0),"float32")}))}function _i(e,t){return ji(e,t)}function Mi(e,t){return e.rank===t.rank&&(e=o.hf(e,[e.rank-1])),(t=o.rd(t,-1)).dtype!==e.dtype&&(t=o.Cd(t,e.dtype)),o.Cd(o.Xd(e,t),"float32")}const zi=Si,Li=Ni,Pi={binaryAccuracy:Ai,categoricalAccuracy:Ri,precision:Di,categoricalCrossentropy:zi,sparseCategoricalCrossentropy:Li,mse:Oi,MSE:Oi,mae:wi,MAE:wi,mape:ki,MAPE:ki,cosine:Ci};function Bi(e){if("string"==typeof e&&e in Pi)return Pi[e];if("string"!=typeof e&&null!=e)return e;throw new aa(`Unknown metric ${e}`)}function Wi(e){if(ua(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys($i))if($i[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Pi))if(Pi[n]===e){t=n;break}return void 0!==t?t:e.name}}const Ui=1048576;function Vi(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Gi(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Ui&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Gi(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Gi(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Gi(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Hi(e,t,n,r=console.log){const o=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const o of n.inboundNodes)if(-1!==r.indexOf(o)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),c=["Layer (type)","Output shape","Param #"];let l;if(o?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((p=>Math.floor(t*p)))),!o){c.push("Receives inputs"),l=[];for(const t in e.nodesByDepth)l.push(...e.nodesByDepth[t])}r("_".repeat(t)),qi(c,n,r),r("=".repeat(t));const d=e.layers;for(let i=0;i<d.length;++i)o?Ki(d[i],n,r):Xi(d[i],n,l,r),r((i===d.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const h=function(e){let t;t=null!=e.collectedTrainableWeights?qs(e.collectedTrainableWeights):qs(e.trainableWeights);return t}(e),f=qs(e.nonTrainableWeights);r(`Total params: ${h+f}`),r(`Trainable params: ${h}`),r(`Non-trainable params: ${f}`),r("_".repeat(t))}function qi(e,t,n=console.log){let line="";for(let i=0;i<e.length;++i)i>0&&(line=line.slice(0,line.length-1)+" "),line+=e[i],line=line.slice(0,t[i]),line+=" ".repeat(t[i]-line.length);n(line)}function Ki(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}qi([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function Xi(e,t,n,r){let o;try{o=JSON.stringify(e.outputShape)}catch(e){o="multiple"}const c=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let i=0;i<t.inboundLayers.length;++i){const e=t.inboundLayers[i].name,n=t.nodeIndices[i],r=t.tensorIndices[i];c.push(`${e}[${n}][${r}]`)}const l=e.name,d=e.getClassName(),h=0===c.length?"":c[0];qi([`${l} (${d})`,o,e.countParams().toString(),h],t,r);for(let i=1;i<c.length;++i)qi(["","","",c[i]],t,r)}function Yi(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Zi(e,t){if(null===e)return null;if("string"==typeof e)return pa(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let i=0;i<r;++i){const r=e[i];Yi(t,i,r)?n.push(r):n.push(Zi(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=pa(n);t[e]=Zi(r,e)}}return t}}function Ji(e,t){if(null==e)return null;if("string"==typeof e)return ha(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let i=0;i<r;++i){const r=e[i];Yi(t,i,r)?n.push(r):n.push(Ji(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],o=ha(n);t[o]="name"!==n&&"className"!==n||"string"!=typeof r?Ji(r,n):r}return t}}class Qi{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Qi)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,mask){if(null!=this.id2Value[e.id])throw new aa(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Object(o.Cd)(t,e.dtype)}catch(n){throw new aa(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=mask&&(this.id2Mask[e.id]=mask),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Qs){if(null==this.id2Value[e.id])throw new aa(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new aa(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Qs){if(null==this.id2Value[e.id])throw new aa(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new aa(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Object(o.Rd)(this.id2Mask)}}const eo={},to={};function no(e,t,n,r){const c=null!=n&&n.training,l=Array.isArray(e),d=l?e:[e],h=d.map((e=>e.name)),f=[],m=t.names();for(const e of h)-1!==m.indexOf(e)?f.push(t.getValue(e)):f.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const y=h.join(",")+"|"+t.names().join(",");let x,v;if(null==eo[y]){const e=function(e,t){o.yf.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const o=ao(e[0],t);n=o.sorted,r=o.recipientMap}else{const o=new Set;for(const c of e){const{sorted:e,recipientMap:l}=ao(c,t);for(const t of e)o.has(t.name)||(n.push(t),o.add(t.name));for(const e in l)null==r[e]&&(r[e]=new Set),l[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:ro(r)}}(d,t);x=e.sorted,v=e.recipientCounts,eo[y]=x,to[y]=v}x=eo[y],v={},c||Object.assign(v,to[y]);const O=new Qi(t);for(let i=0;i<x.length;++i){if(null!=r){const e=Object(o.xe)().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const e=x[i],l=e.sourceLayer;if(l instanceof si)continue;const d=[],m=[],y=[];let w=!1;for(const input of e.inputs){const e=O.getValue(input),mask=O.getMask(input);d.push(e),m.push(mask),null!=mask&&(w=!0),c||(v[input.name]--,0!==v[input.name]||t.hasKey(input)||-1!==h.indexOf(input.name)||e.isDisposed||!0===input.sourceLayer.stateful||y.push(e))}w&&((n=n||{}).mask=m[0]);const k=da(l.apply(d,n));let I=null;l.supportsMasking&&(I=l.computeMask(d,m));const S=so(e),N=Array.isArray(S)?S:[S];for(let i=0;i<N.length;++i){O.hasKey(N[i])||O.add(N[i],k[i],Array.isArray(I)?I[0]:I);const e=h.indexOf(N[i].name);-1!==e&&(f[e]=k[i])}c||Object(o.Rd)(y)}return O.disposeMasks(),l?f:f[0]}function ro(e){const t={};for(const n in e)t[n]=e[n].size;return t}function ao(e,t){const n=new Set,r=[],o={};for(const e of t.names())n.add(e);const c=[],l=[];for(c.push(e);c.length>0;){const e=c[c.length-1];if(n.has(e.name)){c.pop();continue}const t=l[l.length-1]===c.length-1;if(0===e.inputs.length||t)c.pop(),r.push(e),n.add(e.name),t&&l.pop();else{l.push(c.length-1);for(const input of e.inputs)null==o[input.name]&&(o[input.name]=new Set),o[input.name].add(e.name),n.has(input.name)||c.push(input)}}return{sorted:r,recipientMap:o}}function so(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let i=0;i<e.sourceLayer.inboundNodes.length;++i)for(const t of e.sourceLayer.inboundNodes[i].outputTensors)if(t.id===e.id){n=i;break}t=e.sourceLayer.getOutputAt(n)}return t}class io extends ri{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Ws(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],xa(this.inputs).length!==this.inputs.length)throw new aa(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);xa(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;ua(0===n,"input layer has >1 nodes"),ua(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let i=0;i<this.inputLayers.length;i++){const t=this.inputLayers[i];if(!(t instanceof si))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${i} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},o={},c={},l=[],d=(e,t,n,r,o,h)=>{null!=r&&null!=o&&null!=h||(r=e.sourceLayer,o=e.nodeIndex,h=e.tensorIndex);const f=r.inboundNodes[o];if(-1!==n.indexOf(f))throw new ra(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(f))return;this.containerNodes.add(io.nodeKey(r,o)),r.id in c||(c[r.id]=Object.keys(c).length),-1===n.indexOf(f)&&n.push(f);const m=f.inboundLayers.length;for(let i=0;i<m;i++){const e=f.inputTensors[i],r=f.inboundLayers[i],o=f.nodeIndices[i],c=f.tensorIndices[i];d(e,t,n,r,o,c)}for(t.push(f);n.indexOf(f)>=0;)n.splice(n.indexOf(f),1);l.push(f)},h=[],f=[];for(const e of this.outputs)d(e,h,f);const m=l.slice().reverse();for(const e of m){n[e.id]=e,e.id in t||(t[e.id]=0);let c=t[e.id];const l=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];c=Math.max(c,l),r[e.outboundLayer.id]=c,o[e.outboundLayer.id]=e.outboundLayer,t[e.id]=c;for(let i=0;i<e.inboundLayers.length;i++){const r=e.inboundLayers[i],o=e.nodeIndices[i],l=r.inboundNodes[o],d=null==t[l.id]?0:t[l.id];t[l.id]=Math.max(c+1,d),n[l.id]=l}}const y={};for(const e in t){const r=t[e];r in y||(y[r]=[]),y[r].push(n[e])}const x={};for(const e in r){const t=r[e];t in x||(x[t]=[]),x[t].push(o[e])}let v=Object.keys(x).map((e=>parseInt(e,10))).sort(ya);this.layers=[];for(const e of v){const t=x[e];t.sort(((a,b)=>{const e=c[a.id],t=c[b.id];return e<t?-1:e>t?1:0}));for(const e of t)e instanceof io&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=x,v=Object.keys(y).map((e=>parseInt(e,10))).sort(ya);const O=this.inputs.slice(),w=[];for(const e of v)for(const t of y[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===O.indexOf(n))throw new ra(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${w}`);for(const e of t.outputTensors)O.push(e);w.push(e.name)}}this.nodesByDepth=y;const k=this.layers.map((e=>e.name));for(const e of k){const t=k.filter((t=>t===e)).length;if(1!==t)throw new ra(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(k))}this.outboundNodes=[],this.inboundNodes=[],new ti({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new aa("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new aa(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const o=[];for(const r in e){let c=r;if(null==n[r]){const e=r.split("/");c=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[c])o.push([n[c],e[r]]);else if(t)throw new aa(`Provided weight data has no target variable: ${r}`);delete n[c]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new aa(`${e.length} of ${r} weights are not set: ${e}`)}Zs(o)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.13.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Ji(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Object(o.rf)((()=>{e=da(e);const n=new Qi;for(let i=0;i<this.inputs.length;++i)n.add(this.inputs[i],e[i]);return no(this.outputs,n,t)}))}computeMask(e,mask){return Object(o.rf)((()=>{let t;return e=da(e),t=null==mask?oa(null,e.length):da(mask),this.runInternalGraph(e,t)[1]}))}computeOutputShape(e){const t=Vs(e);if(t.length!==this.inputLayers.length)throw new aa(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++){const e=this.inputLayers[i],r=t[i];n[e.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ya);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const o=e.inboundLayers[t],c=e.nodeIndices[t],l=e.tensorIndices[t],d=n[`${o.name}_${c}_${l}`];r.push(d)}const o=Vs(t.computeOutputShape(la(r))),c=t.inboundNodes.indexOf(e);for(let e=0;e<o.length;e++){n[`${t.name}_${c}_${e}`]=o[e]}}}const o=[],c=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],t=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],r=`${e.name}_${t}_${n}`;c.push(r)}for(let i=0;i<c.length;i++){const e=c[i];ua(e in n),o.push(n[e])}return la(o)}runInternalGraph(e,t){null==t&&(t=oa(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const r=this.inputs[i],o=e[i],mask=t[i];n[r.id]=[o,mask]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ya);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,o=e.outputTensors,c=new Array;for(const e of r)e.id in n&&c.push(n[e.id]);if(c.length===r.length){let r,l,d,h,f={};if(null!=e.callArgs&&(f=e.callArgs),1===c.length){const[e,n]=c[0];null==f.mask&&(f.mask=n),d=da(t.call(e,f)),h=da(t.computeMask(e,n)),r=[e],l=[n]}else r=c.map((e=>e[0])),l=c.map((e=>e[1])),null==f.mask&&(f.mask=l),d=da(t.call(r,f)),h=da(t.computeMask(r,l));if(t.activityRegularizer)throw new sa("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let i=0;i<o.length;++i){const e=o[i],t=d[i],mask=h[i];n[e.id]=[t,mask]}}}}const o=[],c=[],l=[];for(const e of this.outputs){ua(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,mask]=n[e.id];l.push(t.shape),o.push(t),c.push(mask)}return[o,c,l]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof io?1:0;for(let r=0;r<e.inboundNodes.length;r++){const o=io.nodeKey(e,r);this.containerNodes.has(o)&&(t[o]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new aa(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new aa("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new aa(`No such layer: ${e}`)}calculateLosses(){return Object(o.rf)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=io.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),o=e.getConfig(),c=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],o=io.nodeKey(e,n);let l={};if(this.containerNodes.has(o)){if(r.callArgs)try{JSON.stringify(r.callArgs),l=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),l={}}if(r.inboundLayers.length>0){const e=[];for(let i=0;i<r.inboundLayers.length;i++){const n=r.inboundLayers[i],o=r.nodeIndices[i],c=r.tensorIndices[i];let d=t[io.nodeKey(n,o)];null==d&&(d=0),e.push([n.name,d,c,l])}c.push(e)}}}const l={};l.name=e.name,l.className=r,l.config=o,l.inboundNodes=c,n.push(l)}e.layers=n;const r=[];for(let i=0;i<this.inputLayers.length;i++){const e=this.inputLayers[i],n=this.inputLayersNodeIndices[i],o=io.nodeKey(e,n);if(!this.containerNodes.has(o))continue;let c=t[o];null==c&&(c=0);const l=this.inputLayersTensorIndices[i];r.push([e.name,c,l])}e.inputLayers=r;const o=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],n=this.outputLayersNodeIndices[i],r=io.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let c=t[r];null==c&&(c=0);const l=this.outputLayersTensorIndices[i];o.push([e.name,c,l])}return e.outputLayers=o,e}static fromConfig(e,t,n={},r=!1){const o={},c={};function l(e,t){e.name in c?c[e.name].push(t):c[e.name]=[t]}function d(e,t){const n=[];let r;for(const c of t){const d=c[0],h=c[1],f=c[2];if(r=null==c[3]?{}:c[3],!(d in o))return void l(e,t);const m=o[d];if(m.inboundNodes.length<=h)return void l(e,t);const y=m.inboundNodes[h];n.push(y.outputTensors[f])}n.length>0&&e.apply(la(n),r)}function h(e){const n=e.name,c=xi(e,null!=t.customObjects?t.customObjects:{});c.setFastWeightInitDuringBuild(r),o[n]=c;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new aa(`Corrupted configuration, expected array for nodeData: ${e}`);l(c,e)}))}const f=t.name,m=t.layers;for(const e of m)h(e);for(;!va(c);)for(const e of m){const t=o[e.name];if(t.name in c){const e=c[t.name];delete c[t.name];for(const n of e)d(t,n)}}const y=[],x=[],v=t.inputLayers;for(const e of v){const t=e[0],n=e[1],r=e[2];ua(t in o);const c=o[t].inboundNodes[n].outputTensors;y.push(c[r])}const O=t.outputLayers;for(const e of O){const t=e[0],n=e[1],r=e[2];ua(t in o);const c=o[t].inboundNodes[n].outputTensors;x.push(c[r])}return new e({inputs:y,outputs:x,name:f})}get stateful(){if(this._stateful)throw new aa("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Object(o.rf)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function oo(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const output=[];return t.forEach((t=>{t in e?output.push(e[t]):output.push(null)})),output}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function uo(e,t){return oo(e,t,"classWeight")}async function co(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Object(o.rf)((()=>{if(1===e.shape.length)return Object(o.Ed)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return Object(o.rd)(e,t)}if(1===e.shape[1])return Object(o.Pe)(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Object(o.Rd)(t);const c=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);c.push(n[e])})),Object(o.of)(c,"float32")}return null}function lo(e,t){return Object(o.Ae)(e,t)}function ho(e,t){let n,r;const c=t;n=c.xs,r=c.ys,o.yf.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const l=po("input",e.inputNames,n),d=po("output",e.outputNames,r),h=l[0].shape[0];o.yf.assert(l.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${l.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),o.yf.assert(d.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${d.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<l.length;t++)o.yf.assert(l[t].shape[0]===h,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${l[t].shape[0]}; expected  ${h} based on input ${e.inputNames[0]}.`));for(let t=0;t<d.length;t++)o.yf.assert(d[t].shape[0]===h,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${d[t].shape[0]}; expected  ${h} based on input ${e.inputNames[0]}.`));return{xs:l,ys:d}}function po(e,t,n){if(n instanceof o.cd)return[n];if(Array.isArray(n))return o.yf.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const o of t){if(null==n[o])throw new aa(`The feature data generated by the dataset lacks the required ${e} key '${o}'.`);r.push(n[o])}return r}}async function fo(e,t,n){const r=null!=n.batchesPerEpoch;if(o.yf.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),o.yf.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),o.yf.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),o.yf.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),o.yf.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const c=null!=n.validationData;let l,d;if(c)if(mo(n.validationData))o.yf.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(data){if(3===data.length)throw new sa("Validation with sample weights is not implemented yet.");return{xs:data[0],ys:data[1]}}(n.validationData);l=e.xs,d=e.ys}const h=e.makeTrainFunction(),f=e.getDedupedMetricsNames();let m;m=c?f.slice().concat(f.map((e=>"val_"+e))):f.slice();const y=bi(n.callbacks,n.yieldEvery),x=null==n.verbose?1:n.verbose,{callbackList:v,history:O}=yi(y,x,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,c,m);v.setModel(e),e.history=O,await v.onTrainBegin(),e.stopTraining_=!1;let w=null==n.initialEpoch?0:n.initialEpoch,k=await t.iterator();for(;w<n.epochs;){const m={};await v.onEpochBegin(w);let y=0,x=0;for(r||(k=await t.iterator());!r||y<n.batchesPerEpoch;){const t=await k.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:c}=ho(e,t.value),l={};l.batch=x,l.size=r[0].shape[0],await v.onBatchBegin(x,l);const d=[];if(null!=n.classWeight){const t=uo(n.classWeight,e.outputNames);for(let i=0;i<t.length;++i)d.push(await co(c[i],null,t[i]))}const ins=r.concat(c).concat(d),m=h(ins);o.Rd(ins);for(let i=0;i<f.length;++i){const label=f[i],e=m[i];l[label]=e,o.je(e)}await v.onBatchEnd(x,l),ui(l),x++,y++}if(r?y>=n.batchesPerEpoch:t.done){if(c){let t;t=mo(n.validationData)?da(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):da(e.evaluate(l,d,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let i=0;i<e.metricsNames.length;++i)m[`val_${e.metricsNames[i]}`]=t[i]}break}if(e.stopTraining_)break}if(await v.onEpochEnd(w,m),w++,e.stopTraining_)break}return await v.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function mo(e){return"function"==typeof e.iterator}function bo(e){o.yf.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function go(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>rs(e,t,n-t))):rs(e,t,n-t)}function yo(e,t){return o.rf((()=>null==e?null:Array.isArray(e)?e.map((e=>yo(e,t))):ds(e,"int32"===t.dtype?t:o.Cd(t,"int32"))))}function xo(e,t){const output=[];let n=0,r=null;for(;n<e;)r=n+t,r>=e&&(r=e),output.push([n,r]),n=r;return output}async function vo(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let c,l,d,h,f,m,y,x,v;e.isTraining=!0;try{const O=null==r.batchSize?32:r.batchSize;bo(O);const w=!1,k=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,w,O);c=k[0],l=k[1],v=k[2];let I,S=!1;if(null!=r.validationData&&r.validationData.length>0){if(S=!0,2!==r.validationData.length)throw 3===r.validationData.length?new sa("validationData including sample weights is not supported yet."):new aa(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);f=r.validationData[0],m=r.validationData[1];const t=!0,n=await e.standardizeUserData(f,m,null,null,t,O);y=n[0],x=n[1],I=y.concat(x)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){S=!0;const e=Math.floor(c[0].shape[0]*(1-r.validationSplit)),t=c[0].shape[0];y=go(c,e,t),d=c,c=go(c,0,e),x=go(l,e,t),h=l,l=go(l,0,e),I=y.concat(x)}else null!=r.validationSteps&&(S=!0);const ins=c.concat(l).concat(v);e.checkTrainableWeightsConsistency();const N=e.makeTrainFunction(),j=e.getDedupedMetricsNames();let T,C;S?(e.makeTestFunction(),T=e.testFunction,C=j.slice().concat(j.map((e=>"val_"+e)))):(T=null,I=[],C=j.slice());const $=bi(r.callbacks,r.yieldEvery),E=await async function(e,t,ins,n,r,c,l,d,h,f,m,y,x,v,O){null==r&&(r=32),null==c&&(c=1),null==m&&(m=!0),null==x&&(x=0);let w=!1;if(null!=h&&null!=f&&(w=!0),null!=O&&(w=!0,null==v))throw new aa("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const k=e.checkNumSamples(ins,r,v,"steps_per_epoch");let I;null!=k&&(I=es(0,k)),null==l&&(l=1);const{callbackList:S,history:N}=yi(d,l,c,x,k,v,r,w,y);S.setModel(e),e.history=N,await S.onTrainBegin(),e.stopTraining_=!1;for(let l=x;l<c;++l){await S.onEpochBegin(l);const c={};if(null!=v)throw new sa("stepsPerEpoch mode is not implemented yet.");{if("batch"===m)throw new sa("batch shuffling is not implemneted yet");m&&o.yf.shuffle(I);const l=Object(o.of)(I),d=xo(k,r);for(let m=0;m<d.length;++m){const y={};if(await S.onBatchBegin(m,y),o.rf((()=>{const x=d[m][0],v=d[m][1],O=rs(l,x,v-x);y.batch=m,y.size=v-x;const k=yo(ins,O),I=t(k);for(let i=0;i<n.length;++i){const label=n[i],e=I[i];y[label]=e,o.je(e)}if(m===d.length-1&&w){const t=e.testLoop(h,f,r);for(let i=0;i<n.length;++i){const label=n[i],e=t[i];o.je(e),c["val_"+label]=e}}})),await S.onBatchEnd(m,y),ui(y),e.stopTraining_)break}l.dispose()}if(await S.onEpochEnd(l,c),e.stopTraining_)break}return await S.onTrainEnd(),await e.history.syncData(),e.history}(e,N,ins,j,O,r.epochs,r.verbose,$,T,I,r.shuffle,C,r.initialEpoch,null,null);return E}finally{e.isTraining=!1,wo(c,t),wo(l,n),wo(d,t),wo(h,n),wo(y,f),wo(x,m),null!=v&&o.Rd(v)}}function Oo(e){const t=[];e instanceof o.cd&&(e=[e]);for(let i=0;i<e.length;++i){const n=e[i];if(1===n.rank)t.push(ns(n,1));else{if(0===n.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(n)}}return t}function wo(e,t){if(null==e)return;const n=[];if(t instanceof o.cd)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof o.cd)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const o=e[t];-1===n.indexOf(o.id)&&r.push(o)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function ko(e){return Array.isArray(e)}function Io(e){return!function(e){return e instanceof o.cd}(e)&&!ko(e)}function So(data,e,t,n=!0,r=""){if(null==e||0===e.length){if(null!=data){let e=!1;if(ko(data)&&data.length>0)e=!0;else if(Io(data)){for(const t in data)if(data.hasOwnProperty(t)){e=!0;break}}else e=!0;if(e)throw new aa(`Error when checking model ${r} expected no data, but got ${data}`)}return[]}if(null==data)return e.map((e=>null));let o;if(Io(data)){data=data,o=[];for(const t of e){if(null==data[t])throw new aa(`No data provided for "${t}". Need data for each key in: ${e}`);o.push(data[t])}}else if(ko(data)){if((data=data).length!==e.length)throw new aa(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${data}`);o=data}else{if(data=data,e.length>1)throw new aa(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${data.shape}`);o=[data]}if(o=Oo(o),null!=t)for(let i=0;i<e.length;++i){if(null==t[i])continue;const c=o[i];if(c.shape.length!==t[i].length)throw new aa(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s). but got array with shape ${c.shape}`);for(let e=0;e<t[i].length;++e){if(0===e&&!n)continue;const o=c.shape[e],l=t[i][e];if(null!=l&&l>=0&&o!==l)throw new aa(`${r} expected a batch of elements where each example has shape [${t[i].slice(1,t[i].length)}] (i.e.,tensor shape [*,${t[i].slice(1,t[i].length)}]) but the ${r} received an input with ${c.shape[0]} examples, each with shape [${c.shape.slice(1,c.shape.length)}] (tensor shape [${c.shape}])`)}}return o}function No(data,e,t,n=!0,r=""){let o;if(Array.isArray(data)){if(data.length!==e.length)throw new aa(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${data.length} Tensors(s).`);o=data}else{if(e.length>1)throw new aa(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(data.shape)}.`);o=[data]}if(null!=t)for(let i=0;i<e.length;++i){if(null==t[i])continue;const c=o[i];if(c.shape.length!==t[i].length)throw new aa(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s), but got array with shape ${JSON.stringify(c.shape)}`);for(let o=0;o<t[i].length;++o){if(0===o&&!n)continue;const l=c.shape[o],d=t[i][o];if(null!=d&&d!==l)throw new aa(`Error when checking ${r}: expected ${e[i]} to have shape ${JSON.stringify(t[i])} but got array with shape ${JSON.stringify(c.shape)}.`)}}}class jo extends io{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new aa("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Hi(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>o.tf.adagrad(.01),Adadelta:()=>o.tf.adadelta(1,.95,ta()),Adam:()=>o.tf.adam(.001,.9,.999,ta()),Adamax:()=>o.tf.adamax(.002,.9,.999,ta(),0),RMSProp:()=>o.tf.rmsprop(.001,.9,0,ta()),SGD:()=>o.tf.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new aa(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof o.ec))throw new aa("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new aa(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Ei(e)))}else{const n=Ei(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new aa(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Ei(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const e=this.internalOutputShapes[i],t=this.outputNames[i];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[i])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ha("loss",(()=>{for(let i=0;i<this.outputs.length;++i){if(-1!==n.indexOf(i))continue;const e=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([e,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),c=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ha("metric",(()=>{for(let i=0;i<this.outputs.length;++i){if(-1!==n.indexOf(i))continue;(e=>{let t,n,r;for(const o of e){if("string"==typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const e=this.internalOutputShapes[i];let c;1===e[e.length-1]||this.lossFunctions[i]===ji?-1!==["accuracy","acc"].indexOf(o)?n=Ai:-1!==["crossentropy","ce"].indexOf(o)&&(n=_i):this.lossFunctions[i]===Ni?-1!==["accuracy","acc"].indexOf(o)?n=Mi:-1!==["crossentropy","ce"].indexOf(o)&&(n=Li):-1!==["accuracy","acc"].indexOf(o)?n=Ri:-1!==["crossentropy","ce"].indexOf(o)&&(n=zi),-1!==["accuracy","acc"].indexOf(o)?c="acc":-1!==["crossentropy","ce"].indexOf(o)&&(c="ce"),r=n,t=""+c}else{const e=Bi(o);r=e,t=""+Wi(o)}let e;Ha(t,(()=>{e=r})),c(i,t,e)}})(r[i])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;bo(r);const o=this.standardizeUserDataXY(e,t,!0,r);try{const ins=o[0].concat(o[1]);this.makeTestFunction();const c=this.testFunction;return la(this.testLoop(c,ins,r,n.verbose,n.steps))}finally{wo(o[0],e),wo(o[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,c=e.testFunction;let l=[];if(n.verbose>0)throw new sa("Verbose mode is not implemented yet.");o.yf.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const d="function"==typeof t.next?t:await t.iterator();let h=0,f=0;for(;!r||f<n.batches;){const t=await d.next();if(l=o.rf((()=>{if(t.value){const{xs:n,ys:r}=ho(e,t.value),d=n.concat(r),m=o.rf((()=>c(d)));if(o.Rd(d),0===f)for(let i=0;i<m.length;++i)l.push(Object(o.Re)(0));const y=d[0].shape[0];for(let i=0;i<m.length;++i){const e=m[i],t=l[i];l[i]=o.rf((()=>o.od(l[i],o.Ae(y,e)))),f>0&&o.Rd(t)}o.Rd(m),h+=y,++f}return l})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let i=0;i<l.length;++i){const e=l[i];l[i]=o.Sd(l[i],h),o.Rd(e)}return la(l)}(this,e,t)}checkNumSamples(ins,e,t,n="steps"){let r;if(null!=t){if(r=null,null!=e)throw new aa(`If ${n} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==ins)throw new aa(`Either the input data should have a defined shape, or ${n} shoud be specified.`);r=Array.isArray(ins)?ins[0].shape[0]:ins.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new aa("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],c=this.retrieveSymbolicTensors(r),l=new Qi;if(e instanceof o.cd&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new aa(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let i=0;i<this.inputs.length;++i)l.add(this.inputs[i],e[i])}else for(const input of this.inputs){const t=e[input.name];if(null==t)throw new aa(`No value is provided for the model's input ${input.name}`);l.add(input,t)}const d=no(c,l);return n?d:d[0]}retrieveSymbolicTensors(e){const t=oa(null,e.length);let n=e.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],c=o.map((output=>output.name));for(let i=0;i<e.length;++i){const r=c.indexOf(e[i]);if(-1!==r&&(t[i]=o[r],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,i)=>{null==t&&n.push(e[i])})),new aa(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(ins,e=32,t=!1){return o.rf((()=>{const n=this.checkNumSamples(ins);if(t)throw new sa("Verbose predictLoop() is not implemented yet.");const r=xo(n,e),c=this.outputs.map((output=>[]));for(let e=0;e<r.length;++e){o.rf((()=>{const t=r[e][0],n=r[e][1],o=go(ins,t,n),c=[];if(Array.isArray(o))for(let i=0;i<o.length;++i)c.push({key:this.inputs[i],value:o[i]});else c.push({key:this.inputs[0],value:o});const l=new Qi(c);return no(this.outputs,l)})).forEach(((e,i)=>c[i].push(e)))}return la(c.map((e=>o.Fd(e,0))))}))}predict(e,t={}){const n=Oo(e);No(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return bo(r),this.predictLoop(n,r)}finally{wo(n,e)}}predictOnBatch(e){No(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new ra("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const c=[];for(let i=0;i<this.feedOutputShapes.length;++i){const e=this.feedOutputShapes[i];this.feedLossFns[i]===Ni?c.push(e.slice(0,e.length-1).concat([1])):c.push(e)}if(function(e,t,n){const r=xa(e.map((input=>input.shape[0])));r.sort();const c=xa(t.map((e=>e.shape[0])));if(c.sort(),r.length>1)throw new aa(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((input=>input.shape)))}`);if(c.length>1)throw new aa(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&c.length>0&&!o.yf.arraysEqual(r,c))throw new aa(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${c[0]} target sample(s).`)}(e=So(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=So(t,this.feedOutputNames,c,!1,"target")),function(e,t,n){const r=[Oi,ji,Si];for(let i=0;i<e.length;++i){const o=e[i],c=t[i],l=n[i];if(null!=c){if(c===Si&&1===o.shape[o.shape.length-1])throw new aa(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(c)){const e=o.shape.slice(1),t=l.slice(1);for(let n=0;n<e.length;++n){const r=e[n],c=t[n];if(null!=c&&r!==c)throw new aa(`A target Tensor with shape ${o.shape} was passed for an output of shape ${l}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new aa(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,o=!0,c){const[l,d]=this.standardizeUserDataXY(e,t,o,c);if(null!=n)throw new Error("sample weight is not supported yet.");let h=null;if(null!=r){const e=uo(r,this.outputNames);h=[];for(let i=0;i<e.length;++i)h.push(await co(d[i],null,e[i]))}return[l,d,h]}testLoop(e,ins,t,n=0,r){return o.rf((()=>{const c=this.checkNumSamples(ins,t,r,"steps"),l=[];if(n>0)throw new sa("Verbose mode is not implemented yet.");if(null!=r)throw new sa("steps mode in testLoop() is not implemented yet");{const n=xo(c,t),r=Object(o.of)(es(0,c));for(let t=0;t<n.length;++t){const c=n[t][0],d=n[t][1],h=rs(r,c,d-c),f=yo(ins,h),m=e(f);if(0===t)for(let i=0;i<m.length;++i)l.push(Object(o.Re)(0));for(let i=0;i<m.length;++i){const e=m[i];l[i]=o.od(l[i],o.Ae(d-c,e))}}for(let i=0;i<l.length;++i)l[i]=o.Sd(l[i],c)}return l}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let i=0;i<e.length;++i){const label=e[i];let n=label;if(ca(e,label)>1){n+=`_${ca(e.slice(0,i),label)}`}t.push(n)}return t}makeTrainFunction(){return data=>{const e=[],t=data.slice(0,this.inputs.length),n=data.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=data.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),c=[],l=this.collectedTrainableWeights.map((param=>param.read()));return[this.optimizer_.minimize((()=>{const l=[];for(let i=0;i<this.inputs.length;++i)l.push({key:this.inputs[i],value:t[i]});const d=new Qi(l),h=no(this.outputs,d,{training:!0});let f;for(let i=0;i<this.lossFunctions.length;++i){let t=(0,this.lossFunctions[i])(n[i],h[i]);null!=r[i]&&(t=lo(t,r[i]));const c=o.we(t);e.push(c),f=0===i?t:o.od(f,t)}for(let i=0;i<this.metricsTensors.length;++i){let t;if(this.outputs.length>1&&i<this.outputs.length)t=e[i];else{const e=this.metricsTensors[i][0],r=this.metricsTensors[i][1];t=o.we(e(n[r],h[r]))}o.je(t),c.push(t)}return f=o.we(f),this.calculateLosses().forEach((e=>{f=o.od(f,e)})),f}),!0,l)].concat(c)}}makeTestFunction(){this.testFunction=data=>o.rf((()=>{const e=[];let t;const n=data.slice(0,this.inputs.length),r=data.slice(this.inputs.length,this.inputs.length+this.outputs.length),c=[];for(let i=0;i<this.inputs.length;++i)c.push({key:this.inputs[i],value:n[i]});const l=new Qi(c),d=no(this.outputs,l);for(let i=0;i<this.lossFunctions.length;++i){const n=this.lossFunctions[i],c=o.we(n(r[i],d[i]));t=0===i?c:o.od(t,c),e.push(t)}for(let i=0;i<this.metricsTensors.length;++i){const t=this.metricsTensors[i][0],n=this.metricsTensors[i][1],c=o.we(t(r[n],d[n]));e.push(c)}return e}))}async fit(e,t,n={}){return vo(this,e,t,n)}async fitDataset(e,t){return fo(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],c=n[1],l=this.makeTrainFunction()(r.concat(c)),d=[];for(const e of l){const t=await e.data();d.push(t[0])}return o.Rd(l),wo(n[0],e),wo(n[1],t),la(d)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,o=this.getWeights(n);for(let i=0;i<r.length;++i)n&&!r[i].trainable||t.push({name:r[i].originalName,tensor:o[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=o.xe().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-o.xe().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=ha(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>ha(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=ha(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[ha(Wi(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>ha(Wi(e))));{const e={};for(const t in this.metrics)e[t]=ha(Wi(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=xi(Zi(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=pa(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>pa(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=pa(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>pa(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=pa(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=o.ie.getSaveHandlers(e);if(0===t.length)throw new aa(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new aa(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new aa("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await o.ie.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.13.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:c}=await o.ie.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...c),n.data=o.ie.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Vi(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Vi(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}jo.className="Model",o.Ue.registerClass(jo);class To extends jo{}To.className="Functional",o.Ue.registerClass(To);class Co extends jo{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Ws("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new aa(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Co||e instanceof jo;let n;if(t){if(n=e,1!==n.outputs.length)throw new aa("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new aa("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new aa("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=ii({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new aa(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new aa("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ai(this.outputs[0])}this.inboundNodes=[],new ti({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:oa(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Hs(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new jo({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new ra("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new ra("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new ra("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new ra("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let c,l={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new aa("Legacy serialization format not supported yet.");c=t}else o.yf.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),c=t.layers,delete t.layers,l=t;const d=new e(l);if(!(d instanceof Co))throw new sa(`Sequential.fromConfig called on non-Sequential input: ${d}`);for(const e of c){const t=xi(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),d.add(t)}return d}set stopTraining(e){if(null==this.model)throw new aa("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new aa("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Co.className="Sequential",o.Ue.registerClass(Co);class $o extends o.Ue.Serializable{getConfig(){return{}}}class Eo extends $o{apply(e,t=1){return function(e,t=1){if(1!==t)throw new sa(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return o.Ud(e)}(e,t)}}Eo.className="elu",o.Ue.registerClass(Eo);class Ao extends $o{apply(e){return o.Se(e)}}Ao.className="selu",o.Ue.registerClass(Ao);class Ro extends $o{apply(e){return o.Oe(e)}}Ro.className="relu",o.Ue.registerClass(Ro);class Fo extends $o{apply(e){return Object(o.rf)((()=>o.ye(6,o.Oe(e))))}}Fo.className="relu6",o.Ue.registerClass(Fo);class Do extends $o{apply(e){return e}}Do.className="linear",o.Ue.registerClass(Do);class _o extends $o{apply(e){return o.We(e)}}_o.className="sigmoid",o.Ue.registerClass(_o);class Mo extends $o{apply(e){return function(e){return Object(o.rf)((()=>{const t=o.od(.5,o.Ae(.2,e));return o.Dd(t,0,1)}))}(e)}}Mo.className="hardSigmoid",o.Ue.registerClass(Mo);class zo extends $o{apply(e){return o.ef(e)}}zo.className="softplus",o.Ue.registerClass(zo);class Lo extends $o{apply(e){return function(e){return Object(o.rf)((()=>o.Sd(e,o.od(o.nd(e),1))))}(e)}}Lo.className="softsign",o.Ue.registerClass(Lo);class Po extends $o{apply(e){return o.mf(e)}}Po.className="tanh",o.Ue.registerClass(Po);class Bo extends $o{apply(e,t=-1){return o.df(e,t)}}Bo.className="softmax",o.Ue.registerClass(Bo);class Wo extends $o{apply(e,t=-1){return o.pe(e,t)}}Wo.className="logSoftmax",o.Ue.registerClass(Wo);class Uo extends $o{apply(e,t=1){return Object(o.rf)((()=>o.Ae(o.We(o.Ae(e,t)),e)))}}Uo.className="swish",o.Ue.registerClass(Uo);class Vo extends $o{apply(e){return Object(o.rf)((()=>o.Ae(e,o.mf(o.ef(e)))))}}function Go(e){return e.getClassName()}function Ho(e,t={}){return ga(e,o.Ue.SerializationMap.getMap().classNameMap,t,"activation")}function qo(e){if(null==e){const e={className:"linear",config:{}};return Ho(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},Ho(t)}return e instanceof $o?e:Ho(e)}function Ko(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Vo.className="mish",o.Ue.registerClass(Vo);class Xo extends o.Ue.Serializable{}class Yo extends Xo{constructor(e){super(),Ko(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Object(o.rf)((()=>{let t=Object(o.Df)([1]);return this.hasL1&&(t=Object(o.od)(t,Object(o.kf)(o.Ae(this.l1,Object(o.nd)(e))))),this.hasL2&&(t=Object(o.od)(t,Object(o.kf)(o.Ae(this.l2,hs(e))))),o.Pe(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Yo.className="L1L2",o.Ue.registerClass(Yo);const Zo={l1l2:"L1L2"};function Jo(e){return ma(e)}function Qo(e,t={}){return ga(e,o.Ue.SerializationMap.getMap().classNameMap,t,"regularizer")}function eu(e){if(null==e)return null;if("string"==typeof e){return Qo({className:e in Zo?Zo[e]:e,config:{}})}return e instanceof Xo?e:Qo(e)}class tu extends ri{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Gs(e);let output=Object(o.Oe)(e);return null!=this.maxValue&&(output=Object(o.Dd)(output,0,this.maxValue)),output}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}tu.className="ReLU",o.Ue.registerClass(tu);class nu extends ri{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Gs(e);return Object(o.le)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}nu.className="LeakyReLU",o.Ue.registerClass(nu);class ru extends ri{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=zs(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=eu(e.alphaRegularizer),this.alphaConstraint=Da(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new aa(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Hs(e)).slice(1);if(null!=this.sharedAxes)for(const i of this.sharedAxes)t[i-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let i=1;i<e.length;++i)n[i]=e[i];this.inputSpec=[new Js({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Gs(e),Object(o.Je)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ms(this.alphaInitializer),alphaRegularizer:Jo(this.alphaRegularizer),alphaConstraint:Ra(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}ru.className="PReLU",o.Ue.registerClass(ru);class au extends ri{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new sa(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Gs(e);return Object(o.Ud)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}au.className="ELU",o.Ue.registerClass(au);class su extends ri{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Gs(e);return Object(o.Ae)(n,Object(o.Cd)(Object(o.fe)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}su.className="ThresholdedReLU",o.Ue.registerClass(su);class iu extends ri{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Bo).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Gs(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function ou(e,t,n){if("number"==typeof e)return oa(e,t);if(e.length!==t)throw new aa(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let i=0;i<t;++i){const o=e[i];if((r=o)!==parseInt(r.toString(),10))throw new aa(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${o}`)}return e;var r}function uu(e,t,n,r,o=1){if(null==e)return e;let c;return c="same"===n?e:e-(t+(t-1)*(o-1))+1,Math.floor((c+r-1)/r)}function cu(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Qa([n-t,0]);else{if("same"!==r)throw new aa(`Unsupport padding mode: ${r}.`);e*=t}return e}function lu(e,t){return Object(o.rf)((()=>(Wa(t),"channelsFirst"===t?o.uf(e,[0,2,3,1]):e)))}function du(e,t){return Object(o.rf)((()=>(Wa(t),"channelsFirst"===t?o.uf(e,[0,2,3,4,1]):e)))}function hu(e,t,n,r=1,c="valid",l,d=1){return Object(o.rf)((()=>{if(null==l&&(l="channelsLast"),Wa(l),3!==e.shape.length)throw new aa(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new aa(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new aa(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===l&&(e=o.uf(e,[0,2,1])),"causal"===c)throw new sa("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let h=o.Kd(e,t,r,"same"===c?"same":"valid","NWC",d);return null!=n&&(h=fs(h,n)),h}))}function pu(e,t,n,r=[1,1],c="valid",l,d,h=null){return Object(o.rf)((()=>{if(null==l&&(l="channelsLast"),Wa(l),3!==e.rank&&4!==e.rank)throw new aa(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new aa(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let f=lu(e,l);if("causal"===c)throw new sa("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return f=o.de.conv2d({x:f,filter:t,strides:r,pad:"same"===c?"same":"valid",dilations:d,dataFormat:"NHWC",bias:n,activation:h}),"channelsFirst"===l&&(f=o.uf(f,[0,3,1,2])),f}))}function fu(e,t,n,r=[1,1,1],c="valid",l,d){return Object(o.rf)((()=>{if(null==l&&(l="channelsLast"),Wa(l),4!==e.rank&&5!==e.rank)throw new aa(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new aa(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let h=du(e,l);if("causal"===c)throw new sa("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return h=o.Nd(h,t,r,"same"===c?"same":"valid","NDHWC",d),null!=n&&(h=fs(h,n)),"channelsFirst"===l&&(h=o.uf(h,[0,4,1,2,3])),h}))}iu.className="Softmax",o.Ue.registerClass(iu);class mu extends ri{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",mu.verifyArgs(t),this.rank=e,ka(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new sa(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ou(t.kernelSize,e,"kernelSize"),this.strides=ou(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Ua(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Wa(this.dataFormat),this.activation=qo(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=zs(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Da(t.biasConstraint),this.biasRegularizer=eu(t.biasRegularizer),this.activityRegularizer=eu(t.activityRegularizer),this.dilationRate=ou(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new aa(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new aa(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new aa(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(ua("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!wa(e.kernelSize,"number",1,3))throw new aa(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Go(this.activation),useBias:this.useBias,biasInitializer:Ms(this.biasInitializer),biasRegularizer:Jo(this.biasRegularizer),activityRegularizer:Jo(this.activityRegularizer),biasConstraint:Ra(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class bu extends mu{constructor(e,t){super(e,t),this.kernel=null,bu.verifyArgs(t),this.filters=t.filters,ka(this.filters,"filters"),this.kernelInitializer=zs(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Da(t.kernelConstraint),this.kernelRegularizer=eu(t.kernelRegularizer)}build(e){e=Hs(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new aa(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Object(o.rf)((()=>{let t;e=Gs(e);const n=null==this.bias?null:this.bias.read(),r=Sa(this.activation.getClassName());if(null!=r&&2===this.rank)t=pu(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=hu(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=pu(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new sa("convolutions greater than 3D are not implemented yet.");t=fu(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Hs(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let i=0;i<n.length;++i){const e=uu(n[i],this.kernelSize[i],this.padding,this.strides[i],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[i]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Ms(this.kernelInitializer),kernelRegularizer:Jo(this.kernelRegularizer),kernelConstraint:Ra(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new aa(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class gu extends bu{constructor(e){super(2,e),gu.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!wa(e.kernelSize,"number",1,2))throw new aa(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}gu.className="Conv2D",o.Ue.registerClass(gu);class yu extends bu{constructor(e){super(3,e),yu.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new aa(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}yu.className="Conv3D",o.Ue.registerClass(yu);class xu extends gu{constructor(e){if(super(e),this.inputSpec=[new Js({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new aa(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Hs(e)).length)throw new aa("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new aa("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Js({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return o.rf((()=>{let input=Gs(e);if(4!==input.shape.length)throw new aa(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${input.shape.length}`);const t=input.shape,n=t[0];let r,c;"channelsFirst"===this.dataFormat?(r=2,c=3):(r=1,c=2);const l=t[r],d=t[c],h=this.kernelSize[0],f=this.kernelSize[1],m=this.strides[0],y=this.strides[1],x=[n,cu(l,m,h,this.padding),cu(d,y,f,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(input=o.uf(input,[0,2,3,1]));let v=o.Md(input,this.kernel.read(),x,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(v=o.uf(v,[0,3,1,2])),null!=this.bias&&(v=fs(v,this.bias.read(),this.dataFormat)),null!=this.activation&&(v=this.activation.apply(v)),v}))}computeOutputShape(e){const t=(e=Hs(e)).slice();let n,r,o;"channelsFirst"===this.dataFormat?(n=1,r=2,o=3):(n=3,r=1,o=2);const c=this.kernelSize[0],l=this.kernelSize[1],d=this.strides[0],h=this.strides[1];return t[n]=this.filters,t[r]=cu(t[r],d,c,this.padding),t[o]=cu(t[o],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}xu.className="Conv2DTranspose",o.Ue.registerClass(xu);class vu extends yu{constructor(e){if(super(e),this.inputSpec=[new Js({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new aa(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Hs(e)).length)throw new aa("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new aa("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Js({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return o.rf((()=>{let input=Gs(e);if(5!==input.shape.length)throw new aa(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${input.shape.length}`);const t=input.shape,n=t[0];let r,c,l;"channelsFirst"===this.dataFormat?(l=2,r=3,c=4):(l=1,r=2,c=3);const d=t[l],h=t[r],f=t[c],m=this.kernelSize[0],y=this.kernelSize[1],x=this.kernelSize[2],v=this.strides[0],O=this.strides[1],w=this.strides[2],k=[n,cu(d,v,m,this.padding),cu(h,O,y,this.padding),cu(f,w,x,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(input=o.uf(input,[0,2,3,4,1]));let I=o.Od(input,this.kernel.read(),k,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(I=o.uf(I,[0,4,1,2,3])),null!==this.bias&&(I=fs(I,this.bias.read(),this.dataFormat)),null!==this.activation&&(I=this.activation.apply(I)),I}))}computeOutputShape(e){const t=(e=Hs(e)).slice();let n,r,o,c;"channelsFirst"===this.dataFormat?(n=1,r=2,o=3,c=4):(n=4,r=1,o=2,c=3);const l=this.kernelSize[0],d=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],m=this.strides[1],y=this.strides[2];return t[n]=this.filters,t[r]=cu(t[r],f,l,this.padding),t[o]=cu(t[o],m,d,this.padding),t[c]=cu(t[c],y,h,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}vu.className="Conv3DTranspose",o.Ue.registerClass(vu);class Ou extends bu{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new aa("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new aa("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new aa(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=zs(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=eu(t.depthwiseRegularizer),this.depthwiseConstraint=Da(t.depthwiseConstraint),this.pointwiseInitializer=zs(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=eu(t.pointwiseRegularizer),this.pointwiseConstraint=Da(t.pointwiseConstraint)}build(e){if((e=Hs(e)).length<this.rank+2)throw new aa(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new aa(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),o=[];for(let i=0;i<this.rank;++i)o.push(1);o.push(n*this.depthMultiplier,this.filters);const c=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,c,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,c,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,c,this.biasConstraint):this.bias=null,this.inputSpec=[new Js({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Object(o.rf)((()=>{let output;if(e=Gs(e),1===this.rank)throw new sa("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=o.uf(e,[0,2,3,1])),output=o.Te(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(output=fs(output,this.bias.read(),this.dataFormat)),null!=this.activation&&(output=this.activation.apply(output)),"channelsFirst"===this.dataFormat&&(output=o.uf(output,[0,3,1,2])),output}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ms(this.depthwiseInitializer),e.pointwiseInitializer=Ms(this.pointwiseInitializer),e.depthwiseRegularizer=Jo(this.depthwiseRegularizer),e.pointwiseRegularizer=Jo(this.pointwiseRegularizer),e.depthwiseConstraint=Ra(this.depthwiseConstraint),e.pointwiseConstraint=Ra(this.pointwiseConstraint),e}}Ou.className="SeparableConv";class wu extends Ou{constructor(e){super(2,e)}}wu.className="SeparableConv2D",o.Ue.registerClass(wu);class ku extends bu{constructor(e){super(1,e),ku.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!wa(e.kernelSize,"number",1,1))throw new aa(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}ku.className="Conv1D",o.Ue.registerClass(ku);class Iu extends ri{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Object(o.rf)((()=>{if(e=Gs(e),"channelsLast"===this.dataFormat){const t=ss(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ss(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=ss(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ss(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Iu.className="Cropping2D",o.Ue.registerClass(Iu);class Su extends ri{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Wa(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Oa(Ma,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return o.rf((()=>{let input=Gs(e);const t=input.shape;if("channelsFirst"===this.dataFormat){input=o.uf(input,[0,2,3,1]);const e=this.size[0]*t[2],n=this.size[1]*t[3],r="nearest"===this.interpolation?o.he.resizeNearestNeighbor(input,[e,n]):o.he.resizeBilinear(input,[e,n]);return o.uf(r,[0,3,1,2])}{const e=this.size[0]*t[1],n=this.size[1]*t[2];return"nearest"===this.interpolation?o.he.resizeNearestNeighbor(input,[e,n]):o.he.resizeBilinear(input,[e,n])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Su.className="UpSampling2D",o.Ue.registerClass(Su);class Nu extends mu{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=zs(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Da(e.depthwiseConstraint),this.depthwiseRegularizer=eu(e.depthwiseRegularizer)}build(e){if((e=Hs(e)).length<4)throw new aa(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new aa(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(o.rf)((()=>{let t=function(e,t,n=[1,1],r="valid",c,l){return Object(o.rf)((()=>{null==c&&(c="channelsLast"),Wa(c);let d=lu(e,c);if(4!==e.rank)throw new aa(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new aa(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return d=o.Pd(d,t,n,"same"===r?"same":"valid","NHWC",l),"channelsFirst"===c&&(d=o.uf(d,[0,3,1,2])),d}))}(e=Gs(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=fs(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Hs(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=uu(t,this.kernelSize[0],this.padding,this.strides[0]),c=uu(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,o,c]:[e[0],o,c,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ms(this.depthwiseInitializer),e.depthwiseRegularizer=Jo(this.depthwiseRegularizer),e.depthwiseConstraint=Ra(this.depthwiseRegularizer),e}}function ju(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new aa("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function o(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=o(t),constants:n=o(n)}}function Tu(e,t,n,r=!1,mask,c,l=!1,d=!1){return o.rf((()=>{const h=t.shape.length;if(h<3)throw new aa(`Input should be at least 3D, but is ${h}D.`);const f=[1,0].concat(es(2,h));if(t=o.uf(t,f),null!=c)throw new sa("The rnn() functoin of the deeplearn.js backend does not support constants yet.");l&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=mask&&((mask=o.Cd(o.Cd(mask,"bool"),"float32")).rank===h-1&&(mask=o.Zd(mask,-1)),mask=o.uf(mask,f)),r&&(t=o.Qe(t,0),null!=mask&&(mask=o.Qe(mask,0)));const m=[];let y,x=n;const v=t.shape[0],O=o.wf(t);let w,k;null!=mask&&(w=o.wf(mask));for(let t=0;t<v;++t){const n=O[t],r=o.rf((()=>e(n,x)));if(null==mask)y=r[0],x=r[1];else{const e=o.rf((()=>{const e=w[t],n=o.jf(o.Ge(e),e);return{output:o.od(o.Ae(r[0],e),o.Ae(x[0],n)),newStates:x.map(((t,i)=>o.od(o.Ae(r[1][i],e),o.Ae(t,n))))}}));y=e.output,x=e.newStates}d&&m.push(y)}if(d){const e=1;k=o.if(m,e)}return[y,k,x]}))}Nu.className="DepthwiseConv2D",o.Ue.registerClass(Nu);class Cu extends ri{constructor(e){let t;if(super(e),null==e.cell)throw new aa("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Mu({cells:e.cell}):e.cell,null==t.stateSize)throw new aa("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Js({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return es(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Us(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,mask){return o.rf((()=>{Array.isArray(mask)&&(mask=mask[0]);const e=this.returnSequences?mask:null;if(this.returnState){const t=this.states.map((s=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,output=[];for(let i=0;i<e;++i)output.push(null);return output}return this.states_}set states(s){this.states_=s}build(e){if(null!=this.numConstants)throw new sa("Constants support is not implemented in RNN yet.");Us(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Js({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let c;if(this.cell.build(r),c=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!o.yf.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),c))throw new aa(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=c.map((e=>new Js({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Object(o.rf)((()=>{if(!this.stateful)throw new na("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new aa("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>o.Df([n,e]))):this.states_=[o.Df([n,this.cell.stateSize])];else if(null==e)o.Rd(this.states_),null!=this.keptStates&&(o.Rd(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>o.Df([n,e]))):this.states_[0]=o.Df([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new aa(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):o.Rd(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],c=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,l=[n,c];if(!o.yf.arraysEqual(r.shape,l))throw new aa(`State ${t} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>o.je(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const o=ju(e,n,r,this.numConstants);e=o.inputs,n=o.initialState,r=o.constants;let c=[],l=[];if(null!=n){t.initialState=n,c=c.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Js({shape:e.shape}));l=l.concat(this.stateSpec)}null!=r&&(t.constants=r,c=c.concat(r),this.numConstants=r.length);if(c[0]instanceof Qs){const n=[e].concat(c),r=this.inputSpec.concat(l),o=this.inputSpec;this.inputSpec=r;const output=super.apply(n,t);return this.inputSpec=o,output}return super.apply(e,t)}call(e,t){return Object(o.rf)((()=>{const mask=null==t?null:t.mask,n=null==t?null:t.training;let r=null==t?null:t.initialState;e=Gs(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==o)throw new aa(`RNN Layer has ${o} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const c={training:n},l=Tu(((e,t)=>{const n=this.cell.call([e].concat(t),c);return[n[0],n.slice(1)]}),e,r,this.goBackwards,mask,null,this.unroll,this.returnSequences),d=l[0],h=l[1],f=l[2];this.stateful&&this.resetStates(f,n);const output=this.returnSequences?h:d;return this.returnState?[output].concat(f):output}))}getInitialState(e){return Object(o.rf)((()=>{let t=o.Df(e.shape);return t=o.kf(t,[1,2]),t=ns(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?us(t,[1,e]):t)):this.cell.stateSize>1?[us(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Cu.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=xi(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Cu.className="RNN",o.Ue.registerClass(Cu);class $u extends ri{}class Eu extends $u{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ka(this.units,"units"),this.activation=qo(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=zs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=zs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=zs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=eu(e.kernelRegularizer),this.recurrentRegularizer=eu(e.recurrentRegularizer),this.biasRegularizer=eu(e.biasRegularizer),this.kernelConstraint=Da(e.kernelConstraint),this.recurrentConstraint=Da(e.recurrentConstraint),this.biasConstraint=Da(e.biasConstraint),this.dropout=Ja([1,Qa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ja([1,Qa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Hs(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(o.rf)((()=>{if(2!==(e=e).length)throw new aa(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let c;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=zu({ones:()=>o.Ge(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=zu({ones:()=>o.Ge(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,d=this.recurrentDropoutMask;c=ls(null!=l?o.Ae(e,l):e,this.kernel.read()),null!=this.bias&&(c=fs(c,this.bias.read())),null!=d&&(n=o.Ae(n,d));let output=o.od(c,ls(n,this.recurrentKernel.read()));return null!=this.activation&&(output=this.activation.apply(output)),[output,output]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Go(this.activation),useBias:this.useBias,kernelInitializer:Ms(this.kernelInitializer),recurrentInitializer:Ms(this.recurrentInitializer),biasInitializer:Ms(this.biasInitializer),kernelRegularizer:Jo(this.kernelRegularizer),recurrentRegularizer:Jo(this.recurrentRegularizer),biasRegularizer:Jo(this.biasRegularizer),activityRegularizer:Jo(this.activityRegularizer),kernelConstraint:Ra(this.kernelConstraint),recurrentConstraint:Ra(this.recurrentConstraint),biasConstraint:Ra(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Eu.className="SimpleRNNCell",o.Ue.registerClass(Eu);class Au extends Cu{constructor(e){e.cell=new Eu(e),super(e)}call(e,t){return Object(o.rf)((()=>{null!=this.cell.dropoutMask&&(o.Rd(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(o.Rd(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const mask=null==t?null:t.mask,n=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:mask,training:n,initialState:r})}))}static fromConfig(e,t){return new e(t)}}Au.className="SimpleRNN",o.Ue.registerClass(Au);class Ru extends $u{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new aa("GRUCell does not support reset_after parameter set to true.");this.units=e.units,ka(this.units,"units"),this.activation=qo(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=qo(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=zs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=zs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=zs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=eu(e.kernelRegularizer),this.recurrentRegularizer=eu(e.recurrentRegularizer),this.biasRegularizer=eu(e.biasRegularizer),this.kernelConstraint=Da(e.kernelConstraint),this.recurrentConstraint=Da(e.recurrentConstraint),this.biasConstraint=Da(e.biasConstraint),this.dropout=Ja([1,Qa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ja([1,Qa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Hs(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(o.rf)((()=>{if(2!==(e=e).length)throw new aa(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=zu({ones:()=>o.Ge(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=zu({ones:()=>o.Ge(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const c=this.dropoutMask,l=this.recurrentDropoutMask;let d,h,f;0<this.dropout&&this.dropout<1&&(e=o.Ae(e,c[0]));let m=ls(e,this.kernel.read());this.useBias&&(m=fs(m,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=o.Ae(r,l[0]));const y=this.recurrentKernel.read(),[x,v]=o.ff(y,[2*this.units,this.units],y.rank-1),O=ls(r,x),[w,k,I]=o.ff(m,3,m.rank-1),[S,N]=o.ff(O,2,O.rank-1);d=this.recurrentActivation.apply(o.od(w,S)),h=this.recurrentActivation.apply(o.od(k,N));const j=ls(o.Ae(h,r),v);f=this.activation.apply(o.od(I,j));const T=o.od(o.Ae(d,r),o.Ae(o.od(1,o.Be(d)),f));return[T,T]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Go(this.activation),recurrentActivation:Go(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ms(this.kernelInitializer),recurrentInitializer:Ms(this.recurrentInitializer),biasInitializer:Ms(this.biasInitializer),kernelRegularizer:Jo(this.kernelRegularizer),recurrentRegularizer:Jo(this.recurrentRegularizer),biasRegularizer:Jo(this.biasRegularizer),activityRegularizer:Jo(this.activityRegularizer),kernelConstraint:Ra(this.kernelConstraint),recurrentConstraint:Ra(this.recurrentConstraint),biasConstraint:Ra(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Ru.className="GRUCell",o.Ue.registerClass(Ru);class Fu extends Cu{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ru(e),super(e)}call(e,t){return Object(o.rf)((()=>{null!=this.cell.dropoutMask&&(o.Rd(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(o.Rd(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const mask=null==t?null:t.mask,n=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:mask,training:n,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Fu.className="GRU",o.Ue.registerClass(Fu);class Du extends $u{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ka(this.units,"units"),this.activation=qo(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=qo(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=zs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=zs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=zs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=eu(e.kernelRegularizer),this.recurrentRegularizer=eu(e.recurrentRegularizer),this.biasRegularizer=eu(e.biasRegularizer),this.kernelConstraint=Da(e.kernelConstraint),this.recurrentConstraint=Da(e.recurrentConstraint),this.biasConstraint=Da(e.biasConstraint),this.dropout=Ja([1,Qa([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ja([1,Qa([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Hs(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends xs{apply(t,r){const o=e.apply([n]),c=(new Os).apply([n]),l=e.apply([2*n]);return os(os(o,c),l)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Object(o.rf)((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new aa(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const c=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=zu({ones:()=>o.Ge(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=zu({ones:()=>o.Ge(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,d=this.recurrentDropoutMask;let i,h,f,m;0<this.dropout&&this.dropout<1&&(e=o.Ae(e,l[0]));let y=ls(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=o.Ae(r,d[0])),y=o.od(y,ls(r,this.recurrentKernel.read())),this.useBias&&(y=fs(y,this.bias.read()));const[x,v,O,w]=o.ff(y,4,y.rank-1);i=this.recurrentActivation.apply(x),h=this.recurrentActivation.apply(v),f=o.od(o.Ae(h,c),o.Ae(i,this.activation.apply(O))),m=this.recurrentActivation.apply(w);const k=o.Ae(m,this.activation.apply(f));return[k,k,f]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Go(this.activation),recurrentActivation:Go(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ms(this.kernelInitializer),recurrentInitializer:Ms(this.recurrentInitializer),biasInitializer:Ms(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Jo(this.kernelRegularizer),recurrentRegularizer:Jo(this.recurrentRegularizer),biasRegularizer:Jo(this.biasRegularizer),activityRegularizer:Jo(this.activityRegularizer),kernelConstraint:Ra(this.kernelConstraint),recurrentConstraint:Ra(this.recurrentConstraint),biasConstraint:Ra(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Du.className="LSTMCell",o.Ue.registerClass(Du);class _u extends Cu{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Du(e),super(e)}call(e,t){return Object(o.rf)((()=>{null!=this.cell.dropoutMask&&(o.Rd(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(o.Rd(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const mask=null==t?null:t.mask,n=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:mask,training:n,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}_u.className="LSTM",o.Ue.registerClass(_u);class Mu extends $u{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Object(o.rf)((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const o=[];let c;for(let i=0;i<this.cells.length;++i){const l=this.cells[i];n=r[i],c=0===i?[e[0]].concat(n):[c[0]].concat(n),c=l.call(c,t),o.push(c.slice(1))}n=[];for(const e of o.slice().reverse())n.push(...e);return[c[0]].concat(n)}))}build(e){let t;Us(e)&&(e=e[0]),e=e,this.cells.forEach(((n,i)=>{Ha(`RNNCell_${i}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(xi(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Ys(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,o=e.splice(r);for(let i=0;i<n.weights.length;++i)t.push([n.weights[i],o[i]])}Zs(t)}}function zu(e){const{ones:t,rate:n,training:r=!1,count:c=1,dropoutFunc:l}=e,d=()=>null!=l?l(t(),n):ms(t(),n),h=()=>bs(d,t,r);if(!c||c<=1)return o.je(h().clone());return Array(c).fill(void 0).map(h).map((e=>o.je(e.clone())))}Mu.className="StackedRNNCells",o.Ue.registerClass(Mu);var Lu=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};class Pu extends Cu{constructor(e){if(e.unroll)throw new sa("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new sa("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Js({ndim:5})]}call(e,t){return o.rf((()=>{if(null!=this.cell.dropoutMask&&(o.Rd(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(o.Rd(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new aa("ConvRNN2D cell does not support constants");const mask=null==t?null:t.mask,n=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:mask,training:n,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return o.rf((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),c=[r[0],...r.slice(2)],l=o.Df(c);return Array.isArray(t)?Array(t.length).fill(l):[l]}))}resetStates(e,t=!1){o.rf((()=>{if(!this.stateful)throw new na("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),c=[r[0],...r.slice(2)];if(null==n[0])throw new aa("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>o.Df(c))):this.states_=[o.Df(c)];else if(null==e)o.Rd(this.states_),null!=this.keptStates&&(o.Rd(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>o.Df(c))):this.states_[0]=o.Df(c);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new aa(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):o.Rd(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=c;if(!o.yf.arraysEqual(n.shape,r))throw new aa(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>o.je(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:o,strides:c,dilationRate:l}=this.cell,d="channelsFirst"===t,h=e[d?3:2],f=e[d?4:3],m=uu(h,r[0],o,c[0],l[0]),y=uu(f,r[1],o,c[1],l[1]);return[...e.slice(0,2),...d?[n,m,y]:[m,y,n]]}}Pu.className="ConvRNN2D";class Bu extends Du{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:o,dataFormat:c,dilationRate:l}=e;super(Object.assign({},e,{units:t})),this.filters=t,ka(this.filters,"filters"),this.kernelSize=ou(n,2,"kernelSize"),this.kernelSize.forEach((e=>ka(e,"kernelSize"))),this.strides=ou(r||1,2,"strides"),this.strides.forEach((e=>ka(e,"strides"))),this.padding=o||"valid",Ua(this.padding),this.dataFormat=c||"channelsLast",Wa(this.dataFormat),this.dilationRate=ou(l||1,2,"dilationRate"),this.dilationRate.forEach((e=>ka(e,"dilationRate")))}build(e){var t;e=Hs(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new aa(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],c=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",c,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const l=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",l,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends xs{apply(e,t){return is([n.apply([r]),o.Fe([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return o.rf((()=>{if(3!==e.length)throw new aa(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],c=e[1],l=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=zu({ones:()=>o.Ge(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.dropoutMask,h=(e,mask,t)=>mask&&mask[t]?o.Ae(mask[t],e):e;let f=h(r,d,0),m=h(r,d,1),y=h(r,d,2),x=h(r,d,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=zu({ones:()=>o.Ge(c),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const v=this.recurrentDropoutMask;let O=h(c,v,0),w=h(c,v,1),k=h(c,v,2),I=h(c,v,3);const[S,N,j,T]=o.ff(this.kernel.read(),4,3),[C,$,E,A]=this.useBias?o.ff(this.bias.read(),4):[null,null,null,null];f=this.inputConv(f,S,C,this.padding),m=this.inputConv(m,N,$,this.padding),y=this.inputConv(y,j,E,this.padding),x=this.inputConv(x,T,A,this.padding);const[R,F,D,_]=o.ff(this.recurrentKernel.read(),4,3);O=this.recurrentConv(O,R),w=this.recurrentConv(w,F),k=this.recurrentConv(k,D),I=this.recurrentConv(I,_);const i=this.recurrentActivation.apply(o.od(f,O)),M=this.recurrentActivation.apply(o.od(m,w)),z=o.od(o.Ae(M,l),o.Ae(i,this.activation.apply(o.od(y,k)))),L=o.Ae(this.recurrentActivation.apply(o.od(x,I)),this.activation.apply(z));return[L,L,z]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=Lu(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,b,n){const r=o.Ld(e,t,this.strides,n||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return b?fs(r,b,this.dataFormat):r}recurrentConv(e,t){return o.Ld(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Bu.className="ConvLSTM2DCell",o.Ue.registerClass(Bu);class Wu extends Pu{constructor(e){const t=new Bu(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Wu.className="ConvLSTM2D",o.Ue.registerClass(Wu);class Uu extends ri{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(input){if(null==this.noiseShape)return this.noiseShape;const e=input.shape,t=[];for(let i=0;i<this.noiseShape.length;++i)t.push(null==this.noiseShape[i]?e[i]:this.noiseShape[i]);return t}call(e,t){return Object(o.rf)((()=>{this.invokeCallHook(e,t);const input=Gs(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,n=this.getNoiseShape(input);return bs((()=>ms(input,this.rate,n,this.seed)),(()=>input),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Uu.className="Dropout",o.Ue.registerClass(Uu);class Vu extends Uu{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(input){const e=input.shape;return[e[0],1,e[2]]}}Vu.className="SpatialDropout1D",o.Ue.registerClass(Vu);class Gu extends ri{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,ka(this.units,"units"),this.activation=qo(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=zs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=zs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Da(e.kernelConstraint),this.biasConstraint=Da(e.biasConstraint),this.kernelRegularizer=eu(e.kernelRegularizer),this.biasRegularizer=eu(e.biasRegularizer),this.activityRegularizer=eu(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Hs(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Hs(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Object(o.rf)((()=>{this.invokeCallHook(e,t);const input=Gs(e),n=Sa(this.activation.getClassName());let output;return null!=n?output=ls(input,this.kernel.read(),n,this.bias?this.bias.read():null):(output=ls(input,this.kernel.read()),null!=this.bias&&(output=fs(output,this.bias.read())),null!=this.activation&&(output=this.activation.apply(output))),output}))}getConfig(){const e={units:this.units,activation:Go(this.activation),useBias:this.useBias,kernelInitializer:Ms(this.kernelInitializer),biasInitializer:Ms(this.biasInitializer),kernelRegularizer:Jo(this.kernelRegularizer),biasRegularizer:Jo(this.biasRegularizer),activityRegularizer:Jo(this.activityRegularizer),kernelConstraint:Ra(this.kernelConstraint),biasConstraint:Ra(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Gu.className="Dense",o.Ue.registerClass(Gu);class Hu extends ri{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Hs(e);for(const t of e.slice(1))if(null==t)throw new aa(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Za(e,1)]}call(e,t){return Object(o.rf)((()=>{this.invokeCallHook(e,t);let input=Gs(e);if("channelsFirst"===this.dataFormat&&input.rank>1){const e=[0];for(let i=2;i<input.rank;++i)e.push(i);e.push(1),input=Object(o.uf)(input,e)}return function(e){if(e.rank<=1)throw new aa(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Za(e.shape,1)];return o.Pe(e,t)}(input)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Hu.className="Flatten",o.Ue.registerClass(Hu);class qu extends ri{constructor(e){super(e),this.supportsMasking=!0,this.activation=qo(e.activation)}call(e,t){return Object(o.rf)((()=>{this.invokeCallHook(e,t);const input=Gs(e);return this.activation.apply(input)}))}getConfig(){const e={activation:Go(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}qu.className="Activation",o.Ue.registerClass(qu);class Ku extends ri{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Object(o.rf)((()=>{return e=Gs(e),t=e,n=this.n,Object(o.rf)((()=>{if(2!==t.shape.length)throw new aa(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return us(ns(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Ku.className="RepeatVector",o.Ue.registerClass(Ku);class Xu extends ri{constructor(e){super(e),this.targetShape=e.targetShape;for(let i=0;i<this.targetShape.length;++i)this.isUnknown(this.targetShape[i])&&(this.targetShape[i]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let o=1,c=null;for(let i=0;i<r.length;++i){const e=r[i];if(this.isUnknown(e)){if(null!==c)throw new aa("Can only specifiy one unknown dimension.");c=i}else o*=e}const l=Za(e);if(null!==c){if(0===o||l%o!=0)throw new aa(n);r[c]=l/o}else if(l!==o)throw new aa(n);return r}computeOutputShape(e){let t=!1;for(let i=0;i<e.length;++i)if(this.isUnknown(e[i])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Object(o.rf)((()=>{this.invokeCallHook(e,t);const input=Gs(e),n=input.shape,r=n.slice(0,1).concat(this.fixUnknownDimension(n.slice(1),this.targetShape));return Object(o.Pe)(input,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Xu.className="Reshape",o.Ue.registerClass(Xu);class Yu extends ri{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=es(1,e.dims.length+1);if(!o.yf.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Js({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Hs(e)).slice();return this.dims.forEach(((n,i)=>{t[i+1]=e[n]})),t}call(e,t){return Object(o.uf)(Gs(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Yu.className="Permute",o.Ue.registerClass(Yu);class Zu extends ri{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,mask){const input=Gs(e);return Object(o.qd)(Object(o.De)(input,this.maskValue),-1)}call(e,t){return Object(o.rf)((()=>{this.invokeCallHook(e,t);const input=Gs(e),n=Object(o.qd)(Object(o.De)(input,this.maskValue),-1,!0);return Object(o.Ae)(input,Object(o.Cd)(n,input.dtype))}))}}Zu.className="Masking",o.Ue.registerClass(Zu);class Ju extends ri{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(da(e.inputLength))}this.inputDim=e.inputDim,ka(this.inputDim,"inputDim"),this.outputDim=e.outputDim,ka(this.outputDim,"outputDim"),this.embeddingsInitializer=zs(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=eu(e.embeddingsRegularizer),this.activityRegularizer=eu(e.activityRegularizer),this.embeddingsConstraint=Da(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,mask){return Object(o.rf)((()=>this.maskZero?(e=Gs(e),Object(o.De)(e,Object(o.Ef)(e))):null))}computeOutputShape(e){if(e=Hs(e),null==this.inputLength)return[...e,this.outputDim];const t=da(this.inputLength);if(t.length!==e.length-1)throw new aa(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let i=0;for(let n=0;n<t.length;++n){const r=t[n],o=e[n+1];if(null!=r&&null!=o&&r!==o)throw new aa(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[i]=o),i++}}return[e[0],...t,this.outputDim]}call(e,t){return Object(o.rf)((()=>{this.invokeCallHook(e,t);let input=Gs(e);"int32"!==input.dtype&&(input=ts(input,"int32"));const output=ds(this.embeddings.read(),Object(o.Pe)(input,[input.size]));return Object(o.Pe)(output,Hs(this.computeOutputShape(input.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ms(this.embeddingsInitializer),embeddingsRegularizer:Jo(this.embeddingsRegularizer),activityRegularizer:Jo(this.activityRegularizer),embeddingsConstraint:Ra(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Ju.className="Embedding",o.Ue.registerClass(Ju);class Qu extends ri{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new sa}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const i=e[e.length-t.length+r],o=t[r];if(null==i||null==o||i<0||o<0)n.push(null);else if(1===i)n.push(o);else if(1===o)n.push(i);else{if(i!==o)throw new aa("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(i)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Hs(e)]),(e=e).length<2)throw new aa(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=xa(t),t.length>1)throw new aa(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let i=1;i<e.length;++i){const t=null==e[i]?null:e[i].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===xa(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Object(o.rf)((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((input=>input.rank));if(-1===n.indexOf(null)){const r=Qa(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=ns(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,c=e[0],l=e.slice(1).concat([c]);let d=o.Pe(r,[c].concat(Za(e.slice(1))));d=o.uf(d,[1,0]),d=o.Pe(d,l),t.push(d),n=!0}else if(e>1){const c=es(1,e).concat([0]);t.push(o.uf(r,c)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const c=r.rank;if(n)if(null==c){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=o.Pe(o.uf(o.Pe(r,[-1,t]),[1,0]),n)}else if(c>1){const e=[c-1].concat(es(0,c-1));r=o.uf(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let i=1;i<e.length;++i){const n=null==e[i]?null:e[i].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=xa(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,mask){return o.rf((()=>{if(null==mask)return null;if(!Array.isArray(mask))throw new aa("`mask` should be an Array");if(!Array.isArray(e))throw new aa("`inputs` should be an Array");if(mask.length!==e.length)throw new aa(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${mask.length})`);if(mask.every((e=>null==e)))return null;let output=(mask=mask.map((e=>null==e?e:o.Zd(e,0))))[0];for(let i=1;i<mask.length-1;++i)output=o.qe(output,mask[i]);return output}))}}class ec extends Qu{constructor(e){super(e)}mergeFunction(e){return Object(o.rf)((()=>{let output=e[0].clone();for(let i=1;i<e.length;++i)output=o.od(output,e[i]);return output}))}}ec.className="Add",o.Ue.registerClass(ec);class tc extends Qu{constructor(e){super(e)}mergeFunction(e){return Object(o.rf)((()=>{let output=e[0].clone();for(let i=1;i<e.length;++i)output=o.Ae(output,e[i]);return output}))}}tc.className="Multiply",o.Ue.registerClass(tc);class nc extends Qu{constructor(e){super(e)}mergeFunction(e){return Object(o.rf)((()=>{let output=e[0].clone();for(let i=1;i<e.length;++i)output=o.od(output,e[i]);return o.Ae(1/e.length,output)}))}}nc.className="Average",o.Ue.registerClass(nc);class rc extends Qu{constructor(e){super(e)}mergeFunction(e){return Object(o.rf)((()=>{let output=e[0];for(let i=1;i<e.length;++i)output=o.ve(output,e[i]);return output}))}}rc.className="Maximum",o.Ue.registerClass(rc);class ac extends Qu{constructor(e){super(e)}mergeFunction(e){return Object(o.rf)((()=>{let output=e[0];for(let i=1;i<e.length;++i)output=o.ye(output,e[i]);return output}))}}ac.className="Minimum",o.Ue.registerClass(ac);class sc extends Qu{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new aa("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let i=0;i<e.length;++i){const t=e[i].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(o.yf.arraysEqual(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new aa("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Object(o.rf)((()=>is(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new aa("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,mask){if(null==mask)return null;if(!Array.isArray(mask))throw new aa("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new aa("`inputs` should be an array for Concatenate");if(mask.length!==e.length)throw new aa(`Mismatch in the length of mask (${mask.length}) and the legnth of inputs (${e.length})`);return o.rf((()=>{let t=!0;if(mask.forEach((e=>{null==e||(t=!1)})),t)return null;const n=[];for(let i=0;i<e.length;++i)null==mask[i]?n.push(o.Cd(o.Ge(e[i]),"bool")):mask[i].rank<e[i].rank?n.push(o.Zd(mask[i],-1)):n.push(mask[i]);const r=o.Fd(n,this.axis);return o.pd(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function ic(e,t){for(;e<0;)e+=t;return e}sc.className="Concatenate",o.Ue.registerClass(sc);class oc extends Qu{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){o.yf.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new sa("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new aa(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new aa(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,i)=>ic(t,e[i].shape.length))):[ic(this.axes,n.shape.length),ic(this.axes,r.shape.length)],this.normalize&&(n=vi(n,t[0]),r=vi(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new sa("batchDot is not implemented for tensors of 4D or higher rank yet");if(o.yf.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),o.yf.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new sa("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,c=t.shape.length;null==n&&(n=[r-1,c-2]);const l=n;return o.rf((()=>{let n,d;if(r>c){n=r-c;const e=[];for(let i=0;i<n;++i)e.push(1);t=o.Pe(t,t.shape.concat(e))}else if(c>r){n=c-r;const t=[];for(let i=0;i<n;++i)t.push(1);e=o.Pe(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)d=l[0]===l[1]?o.kf(o.Ae(e,t),l[0]):o.kf(o.Ae(o.uf(e,[1,0]),t),l[1]);else{const n=l[0]!==e.shape.length-1,r=l[1]===t.shape.length-1;d=o.re(e,t,n,r)}if(n>0){let e;e=r>c?r+c-3:r-1;const t=[];for(let i=e;i<e+n;++i)t.push(i);d=o.hf(d,t)}return 1===d.shape.length&&(d=o.Zd(d,1)),d}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[ic(this.axes,e.length),ic(this.axes,t.length)],n}computeOutputShape(e){o.yf.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new sa("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const c=t.concat(n);return 1===c.length&&c.push(1),c}computeMask(e,mask){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}oc.className="Dot",o.Ue.registerClass(oc);class uc extends ri{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Object(o.rf)((()=>{this.invokeCallHook(e,t);const input=Gs(e);return bs((()=>Object(o.od)(cs(input.shape,0,this.stddev),input)),(()=>input),t.training||!1)}))}}uc.className="GaussianNoise",o.Ue.registerClass(uc);class cc extends ri{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Object(o.rf)((()=>{this.invokeCallHook(e,t);const input=Gs(e);if(this.rate>0&&this.rate<1){return bs((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Object(o.Ae)(input,cs(input.shape,1,e))}),(()=>input),t.training||!1)}return input}))}}cc.className="GaussianDropout",o.Ue.registerClass(cc);class lc extends ri{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Gs(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Object(o.rf)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return bs((()=>{const input=Gs(e),t=-1.7580993408473766;let r=Object(o.ge)(Object(o.Le)(n),this.rate);r=ts(r,"float32");const a=((1-this.rate)*(1+this.rate*t**2))**-.5,b=-a*t*this.rate,c=Object(o.od)(Object(o.Ae)(input,r),Object(o.Ae)(Object(o.od)(r,-1),t));return Object(o.od)(Object(o.Ae)(c,a),b)}),(()=>Gs(e)),t.training||!1)}return e}))}}function dc(e,t,n,r,c,l=.001){let d;if(2===e.rank)d=o.wd(e,t,n,r,c,l);else if(3===e.rank)d=o.xd(e,t,n,r,c,l);else{if(4!==e.rank)throw new sa(`batchNormalization is not implemented for array of rank ${e.rank} yet`);d=o.yd(e,t,n,r,c,l)}return d}function hc(e,t,n,r,c=.001){return o.yf.arraysEqual(r.slice().sort(),es(0,e.rank-1))?function(e,t,n,r,c=.001){return Object(o.rf)((()=>{const l=o.ze(e,r),d=l.mean,h=l.variance;return[dc(e,d,h,n,t,c),d,h]}))}(e,t,n,r,c):function(e,t,n,r,c=.001){return Object(o.rf)((()=>{const l=o.ze(e,r),d=l.mean,h=l.variance,f=[];for(const t of es(0,e.rank))-1!==r.indexOf(t)?f.push(1):f.push(e.shape[t]);const m=Object(o.Pe)(d,f),y=Object(o.Pe)(h,f),x=null==t?null:Object(o.Pe)(t,f),v=null==n?null:Object(o.Pe)(n,f);return[dc(e,m,y,v,x,c),d,h]}))}(e,t,n,r,c)}lc.className="AlphaDropout",o.Ue.registerClass(lc);class pc extends ri{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=zs(e.betaInitializer||"zeros"),this.gammaInitializer=zs(e.gammaInitializer||"ones"),this.movingMeanInitializer=zs(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=zs(e.movingVarianceInitializer||"ones"),this.betaConstraint=Da(e.betaConstraint),this.gammaConstraint=Da(e.gammaConstraint),this.betaRegularizer=eu(e.betaRegularizer),this.gammaRegularizer=eu(e.gammaRegularizer)}build(e){e=Hs(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new aa(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Js({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Object(o.rf)((()=>{const n=null!=t.training&&t.training,input=Gs(e),r=input.shape,c=r.length,l=es(0,c),d=this.axis>=0?this.axis:this.axis+c;l.splice(d,1);const h=oa(1,c);h[d]=r[d];const f=l.slice();f.sort();const m=!o.yf.arraysEqual(f,es(0,c).slice(0,c-1));if(!n)return(()=>{if(m){const e=Object(o.Pe)(this.movingMean.read(),h),t=Object(o.Pe)(this.movingVariance.read(),h),n=this.center?Object(o.Pe)(this.beta.read(),h):null,r=this.scale?Object(o.Pe)(this.gamma.read(),h):null;return dc(input,e,t,n,r,this.epsilon)}return dc(input,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[y,x,v]=hc(input,this.gamma.read(),this.beta.read(),l,this.epsilon),O=(e,t,n)=>{o.rf((()=>{const r=1-n,c=e.read(),l=o.Ae(o.jf(c,t),r);e.write(o.jf(c,l))}))};return(()=>{O(this.movingMean,x,this.momentum),O(this.movingVariance,v,this.momentum)})(),y}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ms(this.betaInitializer),gammaInitializer:Ms(this.gammaInitializer),movingMeanInitializer:Ms(this.movingMeanInitializer),movingVarianceInitializer:Ms(this.movingVarianceInitializer),betaRegularizer:Jo(this.betaRegularizer),gammaRegularizer:Jo(this.gammaRegularizer),betaConstraint:Ra(this.betaConstraint),gammaConstraint:Ra(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}pc.className="BatchNormalization",o.Ue.registerClass(pc);class fc extends ri{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=zs(e.betaInitializer||"zeros"),this.gammaInitializer=zs(e.gammaInitializer||"ones"),this.betaRegularizer=eu(e.betaRegularizer),this.gammaRegularizer=eu(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Hs(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==xa(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const input=Gs(e),n=input.shape,r=n.length;return Object(o.rf)((()=>{let{mean:e,variance:t}=Object(o.ze)(input,this.axis,!0);const c=oa(1,r);for(const e of this.axis)c[e]=n[e];const l=e=>null!=e&&e.shape.length!==r?o.Pe(e,c):e;let d=l(this.gamma.read()),h=l(this.beta.read());const f=[],m=[];for(let i=0;i<r;++i)-1!==this.axis.indexOf(i)?(f.push(n[i]),m.push(1)):(f.push(1),m.push(n[i]));return e=o.sf(e,f),t=o.sf(t,f),d=o.sf(d,m),h=o.sf(h,m),dc(input,e,t,h,d,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ms(this.betaInitializer),gammaInitializer:Ms(this.gammaInitializer),betaRegularizer:Jo(this.betaRegularizer),gammaRegularizer:Jo(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}fc.className="LayerNormalization",o.Ue.registerClass(fc);class mc extends ri{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new aa(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new aa(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new aa(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Js({ndim:4})]}computeOutputShape(e){let t,n;return e=Hs(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Object(o.rf)((()=>{return t=Gs(e),n=this.padding,r=this.dataFormat,Object(o.rf)((()=>{if(4!==t.rank)throw new aa(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new aa("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new aa(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let pattern;return pattern="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],o.He(t,pattern)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function bc(e,t,n,r,c,l){return Object(o.rf)((()=>{let d;Wa(c),Va(l),Ua(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==c&&(c="channelsLast"),null==l&&(l="max"),e=lu(e,c);const h="same"===r?"same":"valid";return d="max"===l?o.te(e,t,n,h):o.sd(e,t,n,h),"channelsFirst"===c&&(d=o.uf(d,[0,3,1,2])),d}))}function gc(e,t,n,r,c,l){return Object(o.rf)((()=>{let d;Wa(c),Va(l),Ua(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==c&&(c="channelsLast"),null==l&&(l="max"),e=du(e,c);const h="same"===r?"same":"valid";return d="max"===l?o.ue(e,t,n,h):o.td(e,t,n,h),"channelsFirst"===c&&(d=o.uf(d,[0,4,1,2,3])),d}))}mc.className="ZeroPadding2D",o.Ue.registerClass(mc);class yc extends ri{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new aa(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(ka(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new aa(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}ka(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Ua(this.padding),this.inputSpec=[new Js({ndim:3})]}computeOutputShape(e){const t=uu((e=Hs(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Object(o.rf)((()=>{this.invokeCallHook(e,t),e=ns(Gs(e),2);const output=this.poolingFunction(Gs(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return o.hf(output,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class xc extends yc{constructor(e){super(e)}poolingFunction(e,t,n,r,o){return Wa(o),Ua(r),bc(e,t,n,r,o,"max")}}xc.className="MaxPooling1D",o.Ue.registerClass(xc);class vc extends yc{constructor(e){super(e)}poolingFunction(e,t,n,r,o){return Wa(o),Ua(r),bc(e,t,n,r,o,"avg")}}vc.className="AveragePooling1D",o.Ue.registerClass(vc);class Oc extends ri{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new aa(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];ka(this.poolSize,"poolSize"),ka(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Wa(this.dataFormat),Ua(this.padding),this.inputSpec=[new Js({ndim:4})]}computeOutputShape(e){e=Hs(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=uu(t,this.poolSize[0],this.padding,this.strides[0]),n=uu(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Object(o.rf)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Gs(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class wc extends Oc{constructor(e){super(e)}poolingFunction(e,t,n,r,o){return Wa(o),Ua(r),bc(e,t,n,r,o,"max")}}wc.className="MaxPooling2D",o.Ue.registerClass(wc);class kc extends Oc{constructor(e){super(e)}poolingFunction(e,t,n,r,o){return Wa(o),Ua(r),bc(e,t,n,r,o,"avg")}}kc.className="AveragePooling2D",o.Ue.registerClass(kc);class Ic extends ri{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new aa(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];ka(this.poolSize,"poolSize"),ka(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Wa(this.dataFormat),Ua(this.padding),this.inputSpec=[new Js({ndim:5})]}computeOutputShape(e){e=Hs(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=uu(t,this.poolSize[0],this.padding,this.strides[0]),n=uu(n,this.poolSize[1],this.padding,this.strides[1]),r=uu(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Object(o.rf)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Gs(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Sc extends Ic{constructor(e){super(e)}poolingFunction(e,t,n,r,o){return Wa(o),Ua(r),gc(e,t,n,r,o,"max")}}Sc.className="MaxPooling3D",o.Ue.registerClass(Sc);class Nc extends Ic{constructor(e){super(e)}poolingFunction(e,t,n,r,o){return Wa(o),Ua(r),gc(e,t,n,r,o,"avg")}}Nc.className="AveragePooling3D",o.Ue.registerClass(Nc);class jc extends ri{constructor(e){super(e),this.inputSpec=[new Js({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new sa}}class Tc extends jc{constructor(e){super(e||{})}call(e,t){return Object(o.rf)((()=>{const input=Gs(e);return o.we(input,1)}))}}Tc.className="GlobalAveragePooling1D",o.Ue.registerClass(Tc);class Cc extends jc{constructor(e){super(e||{})}call(e,t){return Object(o.rf)((()=>{const input=Gs(e);return o.se(input,1)}))}}Cc.className="GlobalMaxPooling1D",o.Ue.registerClass(Cc);class $c extends ri{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Wa(this.dataFormat),this.inputSpec=[new Js({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new sa}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ec extends $c{call(e,t){return Object(o.rf)((()=>{const input=Gs(e);return"channelsLast"===this.dataFormat?o.we(input,[1,2]):o.we(input,[2,3])}))}}Ec.className="GlobalAveragePooling2D",o.Ue.registerClass(Ec);class Ac extends $c{call(e,t){return Object(o.rf)((()=>{const input=Gs(e);return"channelsLast"===this.dataFormat?o.se(input,[1,2]):o.se(input,[2,3])}))}}Ac.className="GlobalMaxPooling2D",o.Ue.registerClass(Ac);class Rc extends ri{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=xi(t.layer,n);delete t.layer;const o={layer:r};return Object.assign(o,t),new e(o)}}class Fc extends Rc{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Hs(e)).length<3)throw new aa(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Hs(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Object(o.rf)((()=>Tu(((e,n)=>[Gs(this.layer.call(e,t)),[]]),e=Gs(e),[],!1,null,null,!1,!0)[1]))}}Fc.className="TimeDistributed",o.Ue.registerClass(Fc);class Dc extends Rc{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=xi(n),t.goBackwards=!0!==t.goBackwards;const r={};var o;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=xi(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,o=this.mergeMode,Oa(Pa,"BidirectionalMergeMode",o),e.weights)throw new sa("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,o=this.forwardLayer.computeOutputShape(e);return Array.isArray(o)&&Array.isArray(o[0])||(o=[o]),o=o,this.returnState?(r=o.slice(1),t=o[0]):t=o[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):la(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const o=ju(e,n,r,this.numConstants);if(e=o.inputs,n=o.initialState,r=o.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const c=[],l=[];if(null!=n){const e=n.length;if(e%2>0)throw new aa("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,c.push(...n);const r=n.map((e=>new Js({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),l.push(...r)}if(null!=r)throw new sa("Support for constants in Bidirectional layers is not implemented yet.");const d=c[0]instanceof Qs;for(const e of c)if(e instanceof Qs!==d)throw new aa("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(d){const n=[e].concat(c),r=this.inputSpec.concat(l),o=this.inputSpec;this.inputSpec=r;const output=super.apply(n,t);return this.inputSpec=o,output}return super.apply(e,t)}call(e,t){return Object(o.rf)((()=>{const n=t.initialState;let r,c,l,output;if(null==n)r=this.forwardLayer.call(e,t),c=this.backwardLayer.call(e,t);else{const o=n.slice(0,n.length/2),l=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),c=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}return this.returnState&&(Array.isArray(r)&&(l=r.slice(1).concat(c.slice(1))),r=r[0],c=c[0]),this.returnSequences&&(c=o.Qe(c,1)),"concat"===this.mergeMode?output=is([r,c]):"sum"===this.mergeMode?output=o.od(r,c):"ave"===this.mergeMode?output=o.Ae(.5,o.od(r,c)):"mul"===this.mergeMode?output=o.Ae(r,c):null==this.mergeMode&&(output=[r,c]),this.returnState?null==this.mergeMode?output.concat(l):[output].concat(l):output}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ha(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Ha(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,mask){let t;if(Array.isArray(mask)&&(mask=mask[0]),t=this.returnSequences?null==this.mergeMode?[mask,mask]:mask:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(t)?t.concat(e).concat(e):[t].concat(e).concat(e)}return t}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=xi(t.layer);if(delete t.layer,null!=t.numConstants)throw new sa("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}Dc.className="Bidirectional",o.Ue.registerClass(Dc);Object(o.Wd)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}));var _c=n(1170),Mc=n(425);class zc{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Object(Mc.e)(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Object(Mc.e)(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Object(_c.f)(this.node.rawAttrs,e,t);if(null!=n.s)return Object(_c.i)(this.node.rawAttrs,e,t);if(null!=n.b)return Object(_c.c)(this.node.rawAttrs,e,t);if(null!=n.shape)return Object(_c.k)(this.node.rawAttrs,e,t);if(null!=n.type)return Object(_c.e)(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Object(_c.g)(this.node.rawAttrs,e,t);if(null!=n.list.s)return Object(_c.h)(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Object(_c.j)(this.node.rawAttrs,e,t);if(null!=n.list.b)return Object(_c.b)(this.node.rawAttrs,e,t);if(null!=n.list.type)return Object(_c.d)(this.node.rawAttrs,e,t)}return t}}var Lc=n(984),Pc=n(1171);var Bc=n(796),Wc=n(1015),Uc=n(1014);function Vc(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){o.yf.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let i=0;i<e.length;i++){const r=e[i],c=t[i];o.yf.assert(r<0||c<0||r===c,(()=>n+` Shapes ${e} and ${t} must match`))}}}function Gc(e){return"number"!=typeof e&&!e.some((e=>e<0))}function Hc(e,t,n){let r=qc(e,n);const o=!Gc(r);if(o&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(o&&t.forEach((e=>{r=qc(e.shape,r)})),!Gc(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function qc(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let i=0;i<e.length;++i){const r=e[i],o=t[i];if(r>=0&&o>=0&&r!==o)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[i]=r>=0?r:o}return n}class Kc{constructor(e,t,n,r,c,l,d){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=c,this.dynamicSize=l,this.clearAfterRead=d,this.tensors=[],this.closed_=!1,this.idTensor=Object(o.Re)(0),Object(o.je)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Vc(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Object(o.je)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((i,e)=>this.write(i,t[e])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let i=0;i<this.size();i++)e.push(i)}if(0===e.length)return Object(o.nf)([],[0].concat(this.elementShape));const n=this.readMany(e);return Vc(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(o.if)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Object(o.nf)([],[0].concat(this.elementShape));const t=[];for(let i=0;i<this.size();i++)t.push(i);const n=this.readMany(t);return Vc(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Object(o.Fd)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Object(o.wf)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const c=0===n?0:t.size/n,l=[];Object(o.rf)((()=>{t=Object(o.Pe)(t,[1,n,c]);for(let i=0;i<e.length;++i){const n=[0,0===i?0:r[i-1],0],d=[1,e[i],c];l[i]=Object(o.Pe)(Object(o.Xe)(t,n,d),this.elementShape)}return l}));const d=[];for(let i=0;i<e.length;i++)d[i]=i;this.writeMany(d,l)}}class Xc{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Vc(t,e.shape,"TensorList shape mismatch: "),Object(o.je)(e)})),this.idTensor=Object(o.Re)(0),this.maxNumElements=r,Object(o.je)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Xc([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Vc(e,this.elementShape,"TensorList shape mismatch: ");const r=Hc(this.elementShape,this.tensors,e);return Object(o.rf)((()=>{const e=this.tensors.map((e=>Object(o.Pe)(e,r)));return Object(o.if)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Hc(this.elementShape,this.tensors,e),r=this.tensors.pop();return Vc(r.shape,e,"TensorList shape mismatch: "),Object(o.Pe)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Vc(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(o.je)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);Vc(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Hc(this.elementShape,this.tensors,t);return Object(o.Pe)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Vc(this.elementShape,t.shape,"TensorList shape mismatch: "),Object(o.je)(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Vc(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Hc(this.elementShape,this.tensors,n);return 0===e.length?Object(o.nf)([],[0].concat(r)):Object(o.rf)((()=>{const t=e.map((i=>Object(o.Pe)(this.tensors[i],r)));return Object(o.if)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Vc(this.elementShape,t,"TensorList shape mismatch: ");const n=Hc(this.elementShape,this.tensors,t);return 0===this.size()?Object(o.nf)([],[0].concat(n)):Object(o.rf)((()=>{const e=this.tensors.map((e=>Object(o.Pe)(e,n)));return Object(o.Fd)(e,0)}))}}const Yc=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Object(Mc.d)("thenBranch",e,t,n),o=Object(Mc.d)("elseBranch",e,t,n),c=Object(Mc.d)("cond",e,t,n),l=Object(Mc.d)("args",e,t,n);return(await c.data())[0]?n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap):n.functionMap[o].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Object(Mc.d)("body",e,t,n),o=Object(Mc.d)("cond",e,t,n),c=Object(Mc.d)("args",e,t,n),l=await n.functionMap[o].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap),d=c.map((e=>e.id));let h=await l[0].data();l.forEach((e=>{e.kept||-1!==d.indexOf(e.id)||e.dispose()}));let f=c;for(;h[0];){const e=f;f=await n.functionMap[r].executeFunctionAsync(f,n.tensorArrayMap,n.tensorListMap);const t=f.map((e=>e.id));e.forEach((e=>{e.kept||-1!==d.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const c=await n.functionMap[o].executeFunctionAsync(f,n.tensorArrayMap,n.tensorListMap);h=await c[0].data(),c.forEach((e=>{e.kept||-1!==d.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return f}case"LoopCond":{const r=Object(Mc.d)("pred",e,t,n);return[Object(Mc.a)(r)]}case"Switch":{const r=Object(Mc.d)("pred",e,t,n);let data=Object(Mc.d)("data",e,t,n);return data.kept||(data=Object(Mc.a)(data)),(await r.data())[0]?[void 0,data]:[data,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==Object(Mc.e)(e,t,n)));if(r){const data=Object(Mc.e)(r,t,n);return[Object(Mc.a)(data)]}return}case"Enter":{const r=Object(Mc.d)("frameName",e,t,n),data=Object(Mc.d)("tensor",e,t,n);return n.enterFrame(r),[Object(Mc.a)(data)]}case"Exit":{const data=Object(Mc.d)("tensor",e,t,n);return n.exitFrame(),[Object(Mc.a)(data)]}case"NextIteration":{const data=Object(Mc.d)("tensor",e,t,n);return n.nextIteration(),[Object(Mc.a)(data)]}case"TensorArrayV3":{const r=Object(Mc.d)("size",e,t,n),c=Object(Mc.d)("dtype",e,t,n),l=Object(Mc.d)("elementShape",e,t,n),d=Object(Mc.d)("dynamicSize",e,t,n),h=Object(Mc.d)("clearAfterRead",e,t,n),f=Object(Mc.d)("identicalElementShapes",e,t,n),m=Object(Mc.d)("name",e,t,n),y=new Kc(m,c,r,l,f,d,h);return n.addTensorArray(y),[y.idTensor,Object(o.Re)(1)]}case"TensorArrayWriteV3":{const r=Object(Mc.d)("tensorArrayId",e,t,n),o=Object(Mc.d)("index",e,t,n),c=Object(Mc.d)("tensor",e,t,n),l=n.getTensorArray(r.id);return l.write(o,c),[l.idTensor]}case"TensorArrayReadV3":{const r=Object(Mc.d)("tensorArrayId",e,t,n),o=Object(Mc.d)("index",e,t,n);return[n.getTensorArray(r.id).read(o)]}case"TensorArrayGatherV3":{const r=Object(Mc.d)("tensorArrayId",e,t,n),o=Object(Mc.d)("indices",e,t,n),c=Object(Mc.d)("dtype",e,t,n);return[n.getTensorArray(r.id).gather(o,c)]}case"TensorArrayScatterV3":{const r=Object(Mc.d)("tensorArrayId",e,t,n),o=Object(Mc.d)("indices",e,t,n),c=Object(Mc.d)("tensor",e,t,n),l=n.getTensorArray(r.id);return l.scatter(o,c),[l.idTensor]}case"TensorArrayConcatV3":{const r=Object(Mc.d)("tensorArrayId",e,t,n),o=n.getTensorArray(r.id),c=Object(Mc.d)("dtype",e,t,n);return[o.concat(c)]}case"TensorArraySplitV3":{const r=Object(Mc.d)("tensorArrayId",e,t,n),o=Object(Mc.d)("tensor",e,t,n),c=Object(Mc.d)("lengths",e,t,n),l=n.getTensorArray(r.id);return l.split(c,o),[l.idTensor]}case"TensorArraySizeV3":{const r=Object(Mc.d)("tensorArrayId",e,t,n),c=n.getTensorArray(r.id);return[Object(o.Re)(c.size(),"int32")]}case"TensorArrayCloseV3":{const r=Object(Mc.d)("tensorArrayId",e,t,n),o=n.getTensorArray(r.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{const r=Object(Mc.d)("tensorListId",e,t,n),o=Object(Mc.d)("index",e,t,n),c=Object(Mc.d)("tensor",e,t,n),l=n.getTensorList(r.id);return l.setItem(o,c),[l.idTensor]}case"TensorListGetItem":{const r=Object(Mc.d)("tensorListId",e,t,n),o=Object(Mc.d)("index",e,t,n),c=Object(Mc.d)("elementShape",e,t,n),l=Object(Mc.d)("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(o,c,l)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Object(Mc.d)("indices",e,t,n),c=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const c=Math.max(...t);if(null!=r&&-1!==r&&c>=r)throw new Error(`Max index must be < array size (${c}  vs. ${r})`);const l=new Xc([],n,e.dtype,r),d=Object(o.wf)(e,0);return t.forEach(((e,t)=>{l.setItem(e,d[t])})),l}(Object(Mc.d)("tensor",e,t,n),r,Object(Mc.d)("elementShape",e,t,n),Object(Mc.d)("numElements",e,t,n));return n.addTensorList(c),[c.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Object(Mc.d)("elementShape",e,t,n),o=Object(Mc.d)("elementDType",e,t,n);let c;c="TensorListReserve"===e.op?"numElements":"maxNumElements";const l=function(e,t,n){return new Xc([],e,t,n)}(r,o,Object(Mc.d)(c,e,t,n));return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{const r=Object(Mc.d)("tensorListId",e,t,n),o=Object(Mc.d)("indices",e,t,n),c=Object(Mc.d)("elementShape",e,t,n),l=Object(Mc.d)("elementDType",e,t,n);return[n.getTensorList(r.id).gather(o,l,c)]}case"TensorListStack":{const r=Object(Mc.d)("tensorListId",e,t,n),o=Object(Mc.d)("elementShape",e,t,n),c=Object(Mc.d)("elementDType",e,t,n),l=Object(Mc.d)("numElements",e,t,n);return[n.getTensorList(r.id).stack(o,c,l)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Vc(e.shape.slice(1),t,"TensorList shape mismatch: ");const c=Object(o.wf)(e);return new Xc(c,t,r)}(Object(Mc.d)("tensor",e,t,n),Object(Mc.d)("elementShape",e,t,n),Object(Mc.d)("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=Object(Mc.d)("tensorListId",e,t,n),o=n.getTensorList(r.id),c=Object(Mc.d)("dtype",e,t,n),l=Object(Mc.d)("elementShape",e,t,n);return[o.concat(c,l)]}case"TensorListPushBack":{const r=Object(Mc.d)("tensorListId",e,t,n),o=Object(Mc.d)("tensor",e,t,n),c=n.getTensorList(r.id);return c.pushBack(o),[c.idTensor]}case"TensorListPopBack":{const r=Object(Mc.d)("tensorListId",e,t,n),o=Object(Mc.d)("elementShape",e,t,n),c=Object(Mc.d)("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(o,c)]}case"TensorListSplit":{const r=Object(Mc.d)("tensor",e,t,n),c=Object(Mc.d)("elementShape",e,t,n),l=function(e,t,n){let r=0;const c=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const l=qc(e.shape.slice(1),n),d=0===r?0:e.size/r,h=Object(o.rf)((()=>{const n=[];e=Object(o.Pe)(e,[1,r,d]);for(let i=0;i<t.length;++i){const r=[0,0===i?0:c[i-1],0],h=[1,t[i],d];n[i]=Object(o.Pe)(Object(o.Xe)(e,r,h),l)}return e.dispose(),n})),f=new Xc([],n,e.dtype,t.length);for(let i=0;i<h.length;i++)f.setItem(i,h[i]);return f}(r,Object(Mc.d)("lengths",e,t,n),c);return n.addTensorList(l),[l.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var Zc=n(382),Jc=n(1140),Qc=n(1172),el=n(1138),tl=n(1143);function nl(e,t,n){const[r,o]=Object(Mc.d)("fusedOps",e,t,n),c="biasadd"===r,l=!c,d="prelu"===o,h="fusedbatchnorm"===r,f=Object(Mc.d)("numArgs",e,t,n);if(c){if(d&&2!==f)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!d&&c&&1!==f)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(h)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const m=Object(Mc.d)("strides",e,t,n),y=Object(Mc.c)(e,t,n),x=Object(Mc.d)("dataFormat",e,t,n).toUpperCase(),v=Object(Mc.d)("dilations",e,t,n);let[O,w]=Object(Mc.d)("args",e,t,n);l&&(w=O,O=void 0);return{stride:m,pad:y,dataFormat:x,dilations:v,biasArg:O,preluArg:w,activationFunc:o,leakyreluAlpha:Object(Mc.d)("leakyreluAlpha",e,t,n)}}var rl=n(974),al=n(1173),sl=n(1174),il=n(1084),cl=n(1016),ll=n(1147);var hl=n(1175),pl=n(1176);function fl(e,t,n){return{boxes:Object(Mc.d)("boxes",e,t,n),scores:Object(Mc.d)("scores",e,t,n),maxOutputSize:Object(Mc.d)("maxOutputSize",e,t,n),iouThreshold:Object(Mc.d)("iouThreshold",e,t,n),scoreThreshold:Object(Mc.d)("scoreThreshold",e,t,n),softNmsSigma:Object(Mc.d)("softNmsSigma",e,t,n)}}var ml=n(805);class bl{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Object(o.Re)(0),this.tensorMap=new Map,Object(o.je)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return y.a(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Object(o.rf)((()=>{const e=Object(o.wf)(t),r=n.length,c=e.length;o.yf.assert(r===c,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${c} elements.`));for(let i=0;i<r;i++){const t=n[i],r=e[i];Object(o.je)(r),this.tensorMap.set(t,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Object(o.rf)((()=>{const e=[];for(let i=0;i<n.length;i++){const r=n[i],o=this.findWithDefault(r,t);e.push(o)}return Object(o.if)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}var gl=n(1177);var yl=n(1225);var xl=n(1089),vl=n(1178);var Ol=n(1179),wl=n(1180);var kl=n(1181);function Il(e,t,n,r){const c=((e,t,n)=>{switch(e.category){case"arithmetic":return o.rf((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[A.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];case"AddN":return[Pc.a(Object(Mc.d)("tensors",e,t,n))];case"FloorMod":case"Mod":return[jr.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];case"Mul":return[d.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];case"RealDiv":case"Div":return[div.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];case"DivNoNan":return[Jn.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];case"FloorDiv":return[sr.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];case"Sub":return[sub.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];case"Minimum":return[Sr.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];case"Maximum":return[In.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];case"Pow":return[Ct.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];case"SquaredDifference":return[qr.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return o.rf((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Cn.a(Object(Mc.d)("x",e,t,n))];case"Acos":return[En.a(Object(Mc.d)("x",e,t,n))];case"Acosh":return[An.a(Object(Mc.d)("x",e,t,n))];case"Asin":return[Mn.a(Object(Mc.d)("x",e,t,n))];case"Asinh":return[zn.a(Object(Mc.d)("x",e,t,n))];case"Atan":return[Ln.a(Object(Mc.d)("x",e,t,n))];case"Atan2":return[Pn.a(Object(Mc.d)("x",e,t,n),Object(Mc.d)("y",e,t,n))];case"Atanh":return[Bn.a(Object(Mc.d)("x",e,t,n))];case"Ceil":return[Gn.a(Object(Mc.d)("x",e,t,n))];case"Complex":return[Bc.a(Object(Mc.d)("real",e,t,n),Object(Mc.d)("imag",e,t,n))];case"Cos":return[Xt.a(Object(Mc.d)("x",e,t,n))];case"Cosh":return[Zt.a(Object(Mc.d)("x",e,t,n))];case"Elu":return[er.a(Object(Mc.d)("x",e,t,n))];case"Erf":return[nr.a(Object(Mc.d)("x",e,t,n))];case"Exp":return[Ce.a(Object(Mc.d)("x",e,t,n))];case"Expm1":return[rr.a(Object(Mc.d)("x",e,t,n))];case"Floor":return[yt.a(Object(Mc.d)("x",e,t,n))];case"Log":return[Tt.a(Object(Mc.d)("x",e,t,n))];case"Log1p":return[yr.a(Object(Mc.d)("x",e,t,n))];case"Imag":return[Wc.a(Object(Mc.d)("x",e,t,n))];case"Neg":return[m.a(Object(Mc.d)("x",e,t,n))];case"Reciprocal":return[Dr.a(Object(Mc.d)("x",e,t,n))];case"Real":return[Uc.a(Object(Mc.d)("x",e,t,n))];case"Relu":return[_r.a(Object(Mc.d)("x",e,t,n))];case"Round":return[Br.a(Object(Mc.d)("x",e,t,n))];case"Selu":return[Wr.a(Object(Mc.d)("x",e,t,n))];case"Sigmoid":return[rn.a(Object(Mc.d)("x",e,t,n))];case"Sin":return[be.a(Object(Mc.d)("x",e,t,n))];case"Sign":return[Vr.a(Object(Mc.d)("x",e,t,n))];case"Sinh":return[ye.a(Object(Mc.d)("x",e,t,n))];case"Softplus":return[Hr.a(Object(Mc.d)("x",e,t,n))];case"Sqrt":return[x.a(Object(Mc.d)("x",e,t,n))];case"Square":return[v.a(Object(Mc.d)("x",e,t,n))];case"Tanh":return[Zr.a(Object(Mc.d)("x",e,t,n))];case"Tan":return[Yr.a(Object(Mc.d)("x",e,t,n))];case"ClipByValue":return[Hn.a(Object(Mc.d)("x",e,t,n),Object(Mc.d)("clipValueMin",e,t,n),Object(Mc.d)("clipValueMax",e,t,n))];case"Relu6":return[Mr.a(Object(Mc.d)("x",e,t,n))];case"Rsqrt":return[_e.a(Object(Mc.e)(e.inputNames[0],t,n))];case"Prod":return[Fr.a(Object(Mc.d)("x",e,t,n),Object(Mc.d)("axes",e,t,n))];case"LeakyRelu":return[dr.a(Object(Mc.d)("x",e,t,n),Object(Mc.d)("alpha",e,t,n))];case"Prelu":return[Rr.a(Object(Mc.d)("x",e,t,n),Object(Mc.d)("alpha",e,t,n))];case"IsNan":return[lr.a(Object(Mc.e)(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return Yc(e,t,n);case"convolution":return o.rf((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=Object(Mc.d)("stride",e,t,n),o=Object(Mc.d)("pad",e,t,n),c=Object(Mc.d)("dataFormat",e,t,n).toUpperCase(),l=Object(Mc.d)("dilation",e,t,n);return[qn.a(Object(Mc.d)("x",e,t,n),Object(Mc.d)("filter",e,t,n),r,o,c,l)]}case"Conv2D":{const r=Object(Mc.d)("strides",e,t,n),o=Object(Mc.c)(e,t,n),c=Object(Mc.d)("dataFormat",e,t,n).toUpperCase(),l=Object(Mc.d)("dilations",e,t,n);return[de.a(Object(Mc.d)("x",e,t,n),Object(Mc.d)("filter",e,t,n),[r[1],r[2]],o,c,[l[1],l[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:c,dilations:l,biasArg:d,preluArg:h,activationFunc:f,leakyreluAlpha:m}=nl(e,t,n);return[Zc.I.conv2d({x:Object(Mc.d)("x",e,t,n),filter:Object(Mc.d)("filter",e,t,n),strides:[r[1],r[2]],pad:o,dataFormat:c,dilations:[l[1],l[2]],bias:d,activation:f,preluActivationWeights:h,leakyreluAlpha:m})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:c,dilations:l,biasArg:d,preluArg:h,activationFunc:f,leakyreluAlpha:m}=nl(e,t,n);return[Zc.I.depthwiseConv2d({x:Object(Mc.d)("x",e,t,n),filter:Object(Mc.d)("filter",e,t,n),strides:[r[1],r[2]],pad:o,dataFormat:c,dilations:[l[1],l[2]],bias:d,activation:f,preluActivationWeights:h,leakyreluAlpha:m})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Object(Mc.d)("outputShape",e,t,n),o=Object(Mc.d)("strides",e,t,n),c=Object(Mc.c)(e,t,n);return[Kn.a(Object(Mc.d)("x",e,t,n),Object(Mc.d)("filter",e,t,n),r,[o[1],o[2]],c)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Object(Mc.d)("strides",e,t,n),o=Object(Mc.c)(e,t,n),c=Object(Mc.d)("dilations",e,t,n),l=Object(Mc.d)("dataFormat",e,t,n).toUpperCase();return[Yn.a(Object(Mc.d)("input",e,t,n),Object(Mc.d)("filter",e,t,n),[r[1],r[2]],o,l,[c[1],c[2]])]}case"Conv3D":{const r=Object(Mc.d)("strides",e,t,n),o=Object(Mc.d)("pad",e,t,n),c=Object(Mc.d)("dataFormat",e,t,n).toUpperCase(),l=Object(Mc.d)("dilations",e,t,n);return[Jc.a(Object(Mc.d)("x",e,t,n),Object(Mc.d)("filter",e,t,n),[r[1],r[2],r[3]],o,c,[l[1],l[2],l[3]])]}case"AvgPool":{const r=Object(Mc.d)("strides",e,t,n),o=Object(Mc.d)("pad",e,t,n),c=Object(Mc.d)("kernelSize",e,t,n);return[Wn.a(Object(Mc.d)("x",e,t,n),[c[1],c[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=Object(Mc.d)("strides",e,t,n),o=Object(Mc.d)("pad",e,t,n),c=Object(Mc.d)("kernelSize",e,t,n);return[Or.a(Object(Mc.d)("x",e,t,n),[c[1],c[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=Object(Mc.d)("strides",e,t,n),o=Object(Mc.d)("pad",e,t,n),c=Object(Mc.d)("kernelSize",e,t,n),l=Object(Mc.d)("includeBatchInIndex",e,t,n),{result:d,indexes:h}=Qc.a(Object(Mc.d)("x",e,t,n),[c[1],c[2]],[r[1],r[2]],o,l);return[d,h]}case"AvgPool3D":{const r=Object(Mc.d)("strides",e,t,n),o=Object(Mc.d)("pad",e,t,n),c=Object(Mc.d)("kernelSize",e,t,n);return[el.a(Object(Mc.d)("x",e,t,n),[c[1],c[2],c[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=Object(Mc.d)("strides",e,t,n),o=Object(Mc.d)("pad",e,t,n),c=Object(Mc.d)("kernelSize",e,t,n);return[tl.a(Object(Mc.d)("x",e,t,n),[c[1],c[2],c[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=Object(Mc.d)("strides",e,t,n),o=Object(Mc.d)("pad",e,t,n),c=Object(Mc.d)("dilations",e,t,n),l=r[1],d=r[2],h=c[1],f=c[2];return[Zn.a(Object(Mc.d)("x",e,t,n),Object(Mc.d)("filter",e,t,n),[l,d],o,[h,f],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return o.rf((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=Object(Mc.d)("shape",e,t,n),o=Object(Mc.d)("dtype",e,t,n),c=Object(Mc.d)("value",e,t,n);return[rl.a(r,c,o)]}case"LinSpace":{const r=Object(Mc.d)("start",e,t,n),o=Object(Mc.d)("stop",e,t,n),c=Object(Mc.d)("num",e,t,n);return[al.a(r,o,c)]}case"Multinomial":{const r=Object(Mc.d)("logits",e,t,n),o=Object(Mc.d)("numSamples",e,t,n),c=Object(Mc.d)("seed",e,t,n);return[sl.a(r,o,c)]}case"OneHot":{const r=Object(Mc.d)("indices",e,t,n),o=Object(Mc.d)("depth",e,t,n),c=Object(Mc.d)("onValue",e,t,n),l=Object(Mc.d)("offValue",e,t,n);return[$r.a(r,o,c,l)]}case"Ones":return[ht.a(Object(Mc.d)("shape",e,t,n),Object(Mc.d)("dtype",e,t,n))];case"OnesLike":return[Er.a(Object(Mc.d)("x",e,t,n))];case"RandomUniform":return[il.a(Object(Mc.d)("shape",e,t,n),Object(Mc.d)("minval",e,t,n),Object(Mc.d)("maxval",e,t,n),Object(Mc.d)("dtype",e,t,n))];case"Range":{const r=Object(Mc.d)("start",e,t,n),o=Object(Mc.d)("stop",e,t,n),c=Object(Mc.d)("step",e,t,n);return[cl.a(r,o,c,Object(Mc.d)("dtype",e,t,n))]}case"TruncatedNormal":{const r=Object(Mc.d)("shape",e,t,n),o=Object(Mc.d)("mean",e,t,n),c=Object(Mc.d)("stdDev",e,t,n),l=Object(Mc.d)("seed",e,t,n);return[ll.a(r,o,c,Object(Mc.d)("dtype",e,t,n),l)]}case"Zeros":return[wt.a(Object(Mc.d)("shape",e,t,n),Object(Mc.d)("dtype",e,t,n))];case"ZerosLike":return[T.a(Object(Mc.d)("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:o,maxOutputSize:c,iouThreshold:l,scoreThreshold:d,softNmsSigma:h}=fl(e,t,n),f=await Zc.M.nonMaxSuppressionWithScoreAsync(r,o,c,l,d,h);return[f.selectedIndices,f.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:o,maxOutputSize:c,iouThreshold:l,scoreThreshold:d}=fl(e,t,n),h=Object(Mc.d)("padToMaxOutputSize",e,t,n),f=await Zc.M.nonMaxSuppressionPaddedAsync(r,o,c,l,d,h);return[f.selectedIndices,f.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:o,maxOutputSize:c,iouThreshold:l,scoreThreshold:d}=fl(e,t,n);return[await Zc.M.nonMaxSuppressionAsync(r,o,c,l,d)]}case"Where":{const r=l.a(Object(Mc.d)("condition",e,t,n),"bool"),o=[await hl.a(r)];return r.dispose(),o}case"ListDiff":return pl.a(Object(Mc.d)("x",e,t,n),Object(Mc.d)("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return o.rf((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=Object(Mc.d)("x",e,t,n),o=Object(Mc.d)("k",e,t,n),c=Object(Mc.d)("sorted",e,t,n),l=Jr.a(r,o,c);return[l.values,l.indices]}case"Unique":{const r=Object(Mc.d)("x",e,t,n),o=Qr.a(r);return[o.values,o.indices]}case"UniqueV2":{const r=Object(Mc.d)("x",e,t,n),o=Object(Mc.d)("axis",e,t,n),c=Qr.a(r,o);return[c.values,c.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return o.rf((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=Object(Mc.d)("images",e,t,n),o=Object(Mc.d)("size",e,t,n),c=Object(Mc.d)("alignCorners",e,t,n),l=Object(Mc.d)("halfPixelCenters",e,t,n);return[Zc.M.resizeBilinear(r,[o[0],o[1]],c,l)]}case"ResizeNearestNeighbor":{const r=Object(Mc.d)("images",e,t,n),o=Object(Mc.d)("size",e,t,n),c=Object(Mc.d)("alignCorners",e,t,n),l=Object(Mc.d)("halfPixelCenters",e,t,n);return[Zc.M.resizeNearestNeighbor(r,[o[0],o[1]],c,l)]}case"CropAndResize":{const image=Object(Mc.d)("image",e,t,n),r=Object(Mc.d)("boxes",e,t,n),o=Object(Mc.d)("boxInd",e,t,n),c=Object(Mc.d)("cropSize",e,t,n),l=Object(Mc.d)("method",e,t,n),d=Object(Mc.d)("extrapolationValue",e,t,n);return[Zc.M.cropAndResize(image,r,o,c,l,d)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return o.rf((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Object(Mc.d)("default",e,t,n);return[Object(Mc.e)(e.name,t,n)||r];case"Placeholder":return[Object(Mc.e)(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const data=Object(Mc.d)("x",e,t,n);return[Object(Mc.a)(data)]}case"IdentityN":return Object(Mc.d)("x",e,t,n).map((e=>Object(Mc.a)(e)));case"Snapshot":const o=Object(Mc.d)("x",e,t,n);return[Object(Mc.a)(o)];case"Shape":return[ml.a(Object(Mc.d)("x",e,t,n).shape,"int32")];case"ShapeN":return Object(Mc.d)("x",e,t,n).map((e=>ml.a(e.shape)));case"Size":return[y.a(Object(Mc.d)("x",e,t,n).size,"int32")];case"Rank":return[y.a(Object(Mc.d)("x",e,t,n).rank,"int32")];case"NoOp":return[y.a(1)];case"Print":const input=Object(Mc.d)("x",e,t,n),data=Object(Mc.d)("data",e,t,n),c=Object(Mc.d)("message",e,t,n),l=Object(Mc.d)("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(c);for(let i=0;i<data.length;i++)console.log(Array.prototype.slice.call(data[i].dataSync()).slice(0,l));return[input];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return o.rf((()=>((e,t,n)=>{switch(e.op){case"Equal":return[tt.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];case"NotEqual":return[Cr.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];case"Greater":return[Ke.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];case"GreaterEqual":return[ee.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];case"Less":return[st.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];case"LessEqual":return[te.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];case"LogicalAnd":return[ne.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];case"LogicalNot":return[Ut.a(Object(Mc.d)("a",e,t,n))];case"LogicalOr":return[xr.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];case"Select":case"SelectV2":return[re.a(Object(Mc.d)("condition",e,t,n),Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return o.rf((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[H.a(Object(Mc.d)("a",e,t,n),Object(Mc.d)("b",e,t,n),Object(Mc.d)("transposeA",e,t,n),Object(Mc.d)("transposeB",e,t,n))];case"Einsum":return[gl.a(Object(Mc.d)("equation",e,t,n),...Object(Mc.d)("tensors",e,t,n))];case"Transpose":return[we.a(Object(Mc.d)("x",e,t,n),Object(Mc.d)("perm",e,t,n))];case"_FusedMatMul":const[r,o]=Object(Mc.d)("fusedOps",e,t,n),c="biasadd"===r,l="prelu"===o,d=Object(Mc.d)("numArgs",e,t,n),h=Object(Mc.d)("leakyreluAlpha",e,t,n);if(c){if(l&&2!==d)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&1!==d)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[f,m]=Object(Mc.d)("args",e,t,n);return[Zc.I.matMul({a:Object(Mc.d)("a",e,t,n),b:Object(Mc.d)("b",e,t,n),transposeA:Object(Mc.d)("transposeA",e,t,n),transposeB:Object(Mc.d)("transposeB",e,t,n),bias:f,activation:o,preluActivationWeights:m,leakyreluAlpha:h})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return o.rf((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Un.a(Object(Mc.d)("x",e,t,n),Object(Mc.d)("mean",e,t,n),Object(Mc.d)("variance",e,t,n),Object(Mc.d)("offset",e,t,n),Object(Mc.d)("scale",e,t,n),Object(Mc.d)("epsilon",e,t,n))];case"LRN":return[pr.a(Object(Mc.d)("x",e,t,n),Object(Mc.d)("radius",e,t,n),Object(Mc.d)("bias",e,t,n),Object(Mc.d)("alpha",e,t,n),Object(Mc.d)("beta",e,t,n))];case"Softmax":return[Gr.a(Object(Mc.d)("x",e,t,n))];case"LogSoftmax":return[mr.a(Object(Mc.d)("x",e,t,n))];case"SparseToDense":return[yl.a(Object(Mc.d)("sparseIndices",e,t,n),Object(Mc.d)("outputShape",e,t,n),Object(Mc.d)("sparseValues",e,t,n),Object(Mc.d)("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return o.rf((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=Object(Mc.d)("axis",e,t,n),o=Object(Mc.d)("keepDims",e,t,n);return[wr.a(Object(Mc.d)("x",e,t,n),r,o)]}case"Mean":{const r=Object(Mc.d)("axis",e,t,n),o=Object(Mc.d)("keepDims",e,t,n);return[kr.a(Object(Mc.d)("x",e,t,n),r,o)]}case"Min":{const r=Object(Mc.d)("axis",e,t,n),o=Object(Mc.d)("keepDims",e,t,n);return[Ir.a(Object(Mc.d)("x",e,t,n),r,o)]}case"Sum":{const r=Object(Mc.d)("axis",e,t,n),o=Object(Mc.d)("keepDims",e,t,n);return[S.a(Object(Mc.d)("x",e,t,n),r,o)]}case"All":{const r=Object(Mc.d)("axis",e,t,n),o=Object(Mc.d)("keepDims",e,t,n);return[Rn.a(Object(Mc.d)("x",e,t,n),r,o)]}case"Any":{const r=Object(Mc.d)("axis",e,t,n),o=Object(Mc.d)("keepDims",e,t,n);return[Fn.a(Object(Mc.d)("x",e,t,n),r,o)]}case"ArgMax":{const r=Object(Mc.d)("axis",e,t,n);return[Dn.a(Object(Mc.d)("x",e,t,n),r)]}case"ArgMin":{const r=Object(Mc.d)("axis",e,t,n);return[_n.a(Object(Mc.d)("x",e,t,n),r)]}case"Prod":{const r=Object(Mc.d)("axis",e,t,n),o=Object(Mc.d)("keepDims",e,t,n);return[Fr.a(Object(Mc.d)("x",e,t,n),r,o)]}case"Cumsum":{const r=Object(Mc.d)("axis",e,t,n),o=Object(Mc.d)("exclusive",e,t,n),c=Object(Mc.d)("reverse",e,t,n);return[Oe.a(Object(Mc.d)("x",e,t,n),r,o,c)]}case"Bincount":const r=Object(Mc.d)("x",e,t,n),o=Object(Mc.d)("weights",e,t,n),c=Object(Mc.d)("size",e,t,n);return[xl.a(r,o,c)];case"DenseBincount":{const r=Object(Mc.d)("x",e,t,n),o=Object(Mc.d)("weights",e,t,n),c=Object(Mc.d)("size",e,t,n),l=Object(Mc.d)("binaryOutput",e,t,n);return[vl.a(r,o,c,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return o.rf((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=Object(Mc.d)("n",e,t,n),o=Object(Mc.d)("axis",e,t,n);let c=Object(Mc.d)("tensors",e,t,n);return c=c.slice(0,r),[un.a(c,o)]}case"Gather":{const input=Object(Mc.d)("x",e,t,n),r=Object(Mc.d)("indices",e,t,n);return[kn.a(input,l.a(r,"int32"),0)]}case"GatherV2":{const r=Object(Mc.d)("axis",e,t,n),o=Object(Mc.d)("batchDims",e,t,n),input=Object(Mc.d)("x",e,t,n),c=Object(Mc.d)("indices",e,t,n);return[kn.a(input,l.a(c,"int32"),r,o)]}case"Reverse":{const r=Object(Mc.d)("dims",e,t,n),o=[];for(let i=0;i<r.length;i++)r[i]&&o.push(i);const input=Object(Mc.d)("x",e,t,n);return[Lt.a(input,o)]}case"ReverseV2":{const r=Object(Mc.d)("axis",e,t,n),input=Object(Mc.d)("x",e,t,n);return[Lt.a(input,r)]}case"Slice":{const r=Object(Mc.d)("begin",e,t,n),o=Object(Mc.d)("size",e,t,n);return[bt.a(Object(Mc.d)("x",e,t,n),r,o)]}case"StridedSlice":{const r=Object(Mc.d)("begin",e,t,n),o=Object(Mc.d)("end",e,t,n),c=Object(Mc.d)("strides",e,t,n),l=Object(Mc.d)("beginMask",e,t,n),d=Object(Mc.d)("endMask",e,t,n),h=Object(Mc.d)("ellipsisMask",e,t,n),f=Object(Mc.d)("newAxisMask",e,t,n),m=Object(Mc.d)("shrinkAxisMask",e,t,n),y=Object(Mc.d)("x",e,t,n);return[Xr.a(y,r,o,c,l,d,h,f,m)]}case"Pack":return Object(o.rf)((()=>{const r=Object(Mc.d)("axis",e,t,n),c=Object(Mc.d)("tensors",e,t,n),l=c[0].shape,d=Kr.a(c[0]).shape,h=c.map((e=>{const t=o.yf.arraysEqual(e.shape,l);if(!t&&!o.yf.arraysEqual(Kr.a(e).shape,d))throw new Error("the input tensors shape does not match");return t?e:I.a(e,l)}));return[vn.a(h,r)]}));case"Unpack":{const r=Object(Mc.d)("axis",e,t,n),o=Object(Mc.d)("tensor",e,t,n);return St.a(o,r)}case"Tile":{const r=Object(Mc.d)("reps",e,t,n);return[Me.a(Object(Mc.d)("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Object(Mc.d)("axis",e,t,n),o=Object(Mc.d)("numOrSizeSplits",e,t,n),c=Object(Mc.d)("x",e,t,n);return ie.a(c,o,r)}case"ScatterNd":{const r=Object(Mc.d)("indices",e,t,n),o=Object(Mc.d)("values",e,t,n),c=Object(Mc.d)("shape",e,t,n);return[Ol.a(r,o,c)]}case"GatherNd":{const r=Object(Mc.d)("x",e,t,n),o=Object(Mc.d)("indices",e,t,n);return[wl.a(r,o)]}case"SparseToDense":{const r=Object(Mc.d)("sparseIndices",e,t,n),o=Object(Mc.d)("outputShape",e,t,n),c=Object(Mc.d)("sparseValues",e,t,n),d=Object(Mc.d)("defaultValue",e,t,n);return[yl.a(r,c,o,c.dtype===d.dtype?d:l.a(d,c.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return o.rf((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:c,reverseIndexMap:l}=Zc.Ab.sparseFillEmptyRows(Object(Mc.d)("indices",e,t,n),Object(Mc.d)("values",e,t,n),Object(Mc.d)("denseShape",e,t,n),Object(Mc.d)("defaultValue",e,t,n));return[r,o,c,l]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=Zc.Ab.sparseReshape(Object(Mc.d)("inputIndices",e,t,n),Object(Mc.d)("inputShape",e,t,n),Object(Mc.d)("newShape",e,t,n));return[r,o]}case"SparseSegmentMean":return[Zc.Ab.sparseSegmentMean(Object(Mc.d)("data",e,t,n),Object(Mc.d)("indices",e,t,n),Object(Mc.d)("segmentIds",e,t,n))];case"SparseSegmentSum":return[Zc.Ab.sparseSegmentSum(Object(Mc.d)("data",e,t,n),Object(Mc.d)("indices",e,t,n),Object(Mc.d)("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return o.rf((()=>((e,t,n)=>{switch(e.op){case"FFT":return[ar.a(Object(Mc.d)("x",e,t,n))];case"IFFT":return[ir.a(Object(Mc.d)("x",e,t,n))];case"RFFT":return[Pr.a(Object(Mc.d)("x",e,t,n))];case"IRFFT":return[or.a(Object(Mc.d)("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return o.rf((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=Zc.Fb.stringNGrams(Object(Mc.d)("data",e,t,n),Object(Mc.d)("dataSplits",e,t,n),Object(Mc.d)("separator",e,t,n),Object(Mc.d)("nGramWidths",e,t,n),Object(Mc.d)("leftPad",e,t,n),Object(Mc.d)("rightPad",e,t,n),Object(Mc.d)("padWidth",e,t,n),Object(Mc.d)("preserveShortSequences",e,t,n));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:c}=Zc.Fb.stringSplit(Object(Mc.d)("input",e,t,n),Object(Mc.d)("delimiter",e,t,n),Object(Mc.d)("skipEmpty",e,t,n));return[r,o,c]}case"StringToHashBucketFast":return[Zc.Fb.stringToHashBucketFast(Object(Mc.d)("input",e,t,n),Object(Mc.d)("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return o.rf((()=>((e,t,n)=>{switch(e.op){case"Cast":return[l.a(Object(Mc.d)("x",e,t,n),Object(Mc.d)("dtype",e,t,n))];case"ExpandDims":{const r=Object(Mc.d)("axis",e,t,n);return[wn.a(Object(Mc.d)("x",e,t,n),r)]}case"Squeeze":{const r=Object(Mc.d)("axis",e,t,n);return[Kr.a(Object(Mc.d)("x",e,t,n),r)]}case"Reshape":return[I.a(Object(Mc.d)("x",e,t,n),Object(Mc.d)("shape",e,t,n))];case"MirrorPad":return[Nr.a(Object(Mc.d)("x",e,t,n),Object(Mc.d)("padding",e,t,n),Object(Mc.d)("mode",e,t,n))];case"PadV2":case"Pad":return[Qt.a(Object(Mc.d)("x",e,t,n),Object(Mc.d)("padding",e,t,n),Object(Mc.d)("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Object(Mc.d)("blockShape",e,t,n),o=Object(Mc.d)("paddings",e,t,n);return[X.a(Object(Mc.d)("x",e,t,n),r,o)]}case"BatchToSpaceND":{const r=Object(Mc.d)("blockShape",e,t,n),o=Object(Mc.d)("crops",e,t,n);return[sn.a(Object(Mc.d)("x",e,t,n),r,o)]}case"DepthToSpace":{const r=Object(Mc.d)("blockSize",e,t,n),o=Object(Mc.d)("dataFormat",e,t,n).toUpperCase();return[Xn.a(Object(Mc.d)("x",e,t,n),r,o)]}case"BroadcastTo":return[Vn.a(Object(Mc.d)("x",e,t,n),Object(Mc.d)("shape",e,t,n))];case"BroadcastArgs":return[kl.a(Object(Mc.d)("s0",e,t,n),Object(Mc.d)("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const o=Object(Mc.d)("keyDType",e,t,n),c=Object(Mc.d)("valueDType",e,t,n),l=new bl(o,c);return r.addHashTable(e.name,l),[l.handle]}case"LookupTableImport":case"LookupTableImportV2":{const o=Object(Mc.d)("tableHandle",e,t,n,r),c=Object(Mc.d)("keys",e,t,n),l=Object(Mc.d)("values",e,t,n),d=r.getHashTableById(o.id);return[await d.import(c,l)]}case"LookupTableFind":case"LookupTableFindV2":{const o=Object(Mc.d)("tableHandle",e,t,n,r),c=Object(Mc.d)("keys",e,t,n),l=Object(Mc.d)("defaultValue",e,t,n),d=r.getHashTableById(o.id);return[await d.find(c,l)]}case"LookupTableSize":case"LookupTableSizeV2":{const o=Object(Mc.d)("tableHandle",e,t,n,r);return[r.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const c=Object(Lc.a)(e.op);if(c&&c.customExecutor)return c.customExecutor(new zc(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return o.yf.isPromise(c)?c.then((data=>[].concat(data))):[].concat(c)}class Sl{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let i=0;i<this.contexts.length-1;i++){const t=this.contexts.slice(0,this.contexts.length-i);e.push(this.contextIdforContexts(t))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Nl(e,t,n,r){const o=new Set,c=[];let l=null,d=null;const h=new Set,f=Object.keys(e).map((e=>Object(Mc.g)(e)[0]));let m=[];null!=r&&(m=r.map((e=>Object(Mc.g)(e.name)[0])));const y=[...t];for(;y.length>0;){const e=y.pop();($l(e)||El(e)||Al(e))&&null==l&&(l=e,d=l.children.map((e=>e.name)).filter((e=>o.has(e)))),o.add(e.name),null==n[e.name]&&(-1===f.indexOf(e.name)&&-1===m.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((input=>{h.has(input.name)||(h.add(input.name),y.push(input))})):c.push(e.name)))}return{inputs:e,outputs:t,usedNodes:o,missingInputs:c,dynamicNode:l,syncInputs:d}}const jl=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Tl=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Cl=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function $l(e){return jl.indexOf(e.op)>=0}function El(e){return Tl.indexOf(e.op)>=0}function Al(e){return Cl.indexOf(e.op)>=0}class Rl{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Rl(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((map,e)=>(map[e]=this._functions[e].signature,map)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=Nl(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:o,syncInputs:c}=n;if(null!=o)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${c}]`);if(r.length>0){const n=t.map((e=>e.name)),o=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${o}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:o}=n,c=[],l=Object.keys(o).map((e=>Object(Mc.g)(e)[0])).map((t=>e.nodes[t])),d=e.initNodes;l.forEach((input=>{r.has(input.name)&&c.push(input)})),e.weights.forEach((e=>{r.has(e.name)&&c.push(e)})),null!=d&&d.forEach((e=>{r.has(e.name)&&c.push(e)}));const h=new Set,f=[];for(;c.length>0;){const e=c.pop();h.add(e.name),t[e.name]||f.push(e),e.children.forEach((e=>{!h.has(e.name)&&r.has(e.name)&&e.inputs.every((input=>h.has(input.name)))&&c.push(e)}))}return f}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[Object(Mc.g)(e)[0]])),c=t.map((e=>Object(Mc.g)(e)[0]));let l=c.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===l.length&&(l=this._outputs);const d=this.getCompilationKey(r,l);let h=this.compiledMap.get(d);null==h&&(h=this.compile(e,l),this.compiledMap.set(d,h));const f={},m={};return Object(o.rf)((()=>{const n=new Sl(this.weightMap,f,m,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,o]=Object(Mc.g)(t),c=[];c[o]=e[t],r[n]=c}));const l=this.getFrozenTensorIds(r),d={};for(let i=0;i<h.length;i++){const e=h[i];if(!r[e.name]){const t=Il(e,r,n,this._resourceManager);if(o.yf.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.checkTensorForDisposal(e.name,e,r,n,l,c,d)}}return null==this.parent&&n.dispose(l),t.map((e=>Object(Mc.e)(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,o,c,l){"control"!==t.category&&-1===c.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(l[e.id]=(l[e.id]||0)+t.children.length)})),t.inputs.forEach((input=>{if("control"!==input.category){const e=Object(Mc.f)(input.name,n,r);null!=e&&e.forEach((e=>{if(e&&!e.kept&&!o.has(e.id)){const n=l[e.id];if(1===n){if(this.keepTensorForDebug){const[n,o]=Object(Mc.b)(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][o]=e}else e.dispose();delete l[e.id]}else null!=n&&l[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},c={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Object(o.Wd)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();const l=new Sl(this.weightMap,r,c,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,l,t,n);const d=t.map((e=>Object(Mc.e)(e,this.tensorsMap,l))),h=d.map((e=>e.id)),f=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...h,...f,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&l.dispose(this.keepIds),d}async executeFunctionAsync(e,t,n){const r=e.reduce(((map,e,t)=>(map[this.inputs[t].name]=e,map)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const o=Object.keys(e),c=o.map((e=>this.graph.nodes[Object(Mc.g)(e)[0]])),l=n.map((e=>Object(Mc.g)(e)[0]));let d=l.map((e=>this.graph.nodes[e]));0===d.length&&(d=this._outputs);const{usedNodes:h,missingInputs:f,dynamicNode:m,syncInputs:y}=Nl(e,d,this.weightMap,this._initNodes),x=[...c,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),v=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=Object(Mc.g)(t),o=[];o[r]=e[t],v[n]=o}));const O={},w=this.getFrozenTensorIds(v),k={};for(;x.length>0;){const e=this.processStack(c,x,t,v,k,w,l,O,h);await Promise.all(e)}null!=m||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const I=d.filter((e=>!$l(e)&&!Object(Mc.e)(e.name,v,t))).map((e=>e.name));if(I.length>0){let e="";throw null!=m&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${y}]`),new Error(`Cannot compute the outputs [${I}] from the provided inputs [${o}]. Consider providing the following inputs: [${f}]. ${e}`)}return v}processStack(e,t,n,r,c,l,d,h,f){const m=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let y="";if("Enter"===e.node.op&&Object(Mc.d)("isConstant",e.node,r,n)&&([y]=Object(Mc.b)(e.node.name,n)),null==r[e.node.name]){const x=Il(e.node,r,n,this._resourceManager);y||([y]=Object(Mc.b)(e.node.name,n));const v=n.currentContext;o.yf.isPromise(x)?m.push(x.then((o=>(r[y]=o,n.currentContext=v,this.checkTensorForDisposal(y,e.node,r,n,l,d,h),this.processChildNodes(e.node,t,n,r,c,f),o)))):(r[y]=x,this.checkTensorForDisposal(y,e.node,r,n,l,d,h),this.processChildNodes(e.node,t,n,r,c,f))}else this.processChildNodes(e.node,t,n,r,c,f)}return m}processChildNodes(e,t,n,r,o,c){e.children.forEach((e=>{const[l]=Object(Mc.b)(e.name,n);!o[l]&&c.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!Object(Mc.e)(e,r,n)))&&(o[l]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Object(Mc.e)(e,r,n)))&&(o[l]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const input=e[t],[n]=Object(Mc.g)(t),r=this.graph.nodes[n];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value,t=e.length===input.shape.length&&input.shape.every(((t,n)=>-1===e[n]||e[n]===t));o.yf.assert(t,(()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${e}], but was [${input.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&o.yf.assert(input.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${input.dtype}`))}))}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Object(Mc.g)(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){return this._signature.outputs[e].name}return e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=Object(Mc.g)(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Fl{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class Dl{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new Fl}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const path=this.modelUrl;if(null!=path.load)this.handler=path;else if(null!=this.loadOptions.requestInit)this.handler=o.ie.browserHTTPRequest(path,this.loadOptions);else{const e=o.ie.getLoadHandlers(path,this.loadOptions);if(0===e.length)e.push(o.ie.browserHTTPRequest(path,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[path]}'`);this.handler=e[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=o.ie.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Rl(_c.a.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=_c.a.Instance.transformGraph(e.modelInitializer);this.initializer=new Rl(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=o.ie.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof o.cd||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((map,t,i)=>(map[t]=e[i],map)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(map){return Object.keys(map).reduce(((e,t)=>(e[t]=[map[t]],e)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function _l(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new Dl(e,t);return await n.load(),n}var Ml=n(1182),zl=n(958),Ll=n(1113);class Pl{constructor(){this.size=null}batch(e,t=!0){const base=this;let n;return o.yf.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),n=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Bl((async()=>(await base.iterator()).columnMajorBatch(e,t,Wl)),n)}concatenate(e){const base=this;let t;return t=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Bl((async()=>(await base.iterator()).concatenate(await e.iterator())),t)}filter(e){const base=this;let t;return t=this.size===1/0?1/0:null,Bl((async()=>(await base.iterator()).filter((t=>o.rf((()=>e(t)))))),t)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const base=this;return Bl((async()=>(await base.iterator()).map((t=>o.rf((()=>e(t)))))),this.size)}mapAsync(e){const base=this;return Bl((async()=>(await base.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const base=this;return Bl((async()=>(await base.iterator()).prefetch(e)),this.size)}repeat(e){const base=this;let t;return t=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Bl((async()=>{const t=Object(zl.e)((async()=>({value:await base.iterator(),done:!1})));return Object(zl.d)(t.take(e))}),t)}skip(e){const base=this;let t;return t=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Bl((async()=>(await base.iterator()).skip(e)),t)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const base=this,r=Ml.alea(t||o.yf.now().toString());return Bl((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await base.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const base=this;let t;return t=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Bl((async()=>(await base.iterator()).take(e)),t)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Bl(e,t=null){return new class extends Pl{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Wl(e){if(null===e)return null;const t=e[0];if(Object(Ll.a)(t)){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof o.cd?o.if(e):o.nf(e)}(e),recurse:!1}}return{value:null,recurse:!0}}Pl.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");zl.a;zl.a;var Ul=n(1313);Ul.a;function Vl(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&o.yf.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const Gl=o.ke.whereImpl;class Hl extends o.xb{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new o.M(this,Object(o.Vd)())}nextDataId(){return Hl.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Object(o.Wd)().get("IS_NODE")&&o.vd.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&o.yf.isString(n[0])){const c=n.map((e=>o.yf.encodeString(e)));r=this.write(c,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,o){this.data.set(e,{values:t,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return o.vd.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const data=this.readSync(e.dataId);let t=data;if("string"===e.dtype)try{t=data.map((e=>o.yf.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(o.Bd)(e.shape,e.dtype,t)}makeOutput(e,t,n){const r=this.write(e,t,n);return Object(o.Vd)().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=o.yf.now();e();return{kernelMs:o.yf.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Vl([e],"where");const t=this.readSync(e.dataId);return Gl(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Hl.nextDataId=0;function ql(e,t,n){return({inputs:r,attrs:c,backend:l})=>{const{x:d}=r;if(Vl(d,e),"string"===d.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const h=l,f=h.data.get(d.dataId).values,m=o.yf.sizeFromShape(d.shape),y=n||d.dtype,x=o.yf.getArrayFromDType(y,m);for(let i=0;i<m;++i)x[i]=t(f[i],c);return h.makeTensorInfo(d.shape,y,x)}}function Kl(e,t,n){return({inputs:r,attrs:o,backend:c})=>{const{x:l}=r;if(Vl(l,e),"string"===l.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const d=c,h=d.data.get(l.dataId).values,f=n||l.dtype,m=t(h,f,o);return d.makeTensorInfo(l.shape,f,m)}}Object(o.Me)("cpu",(()=>new Hl),1);const Xl=ql(o.X,(e=>e>=0?e:Math.exp(e)-1)),Yl={kernelName:o.X,backendName:"cpu",kernelFunc:Xl};function Zl(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Jl={kernelName:o.sb,backendName:"cpu",kernelFunc:Zl};function Ql(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{alpha:l}=r;Vl([c],"leakyRelu");const d=o.yf.sizeFromShape(c.shape),h=n.data.get(c.dataId).values,f=o.yf.getTypedArrayFromDType("float32",d);for(let i=0;i<h.length;i++)f[i]=h[i]<0?l*h[i]:h[i];return n.makeTensorInfo(c.shape,"float32",f)}const ed={kernelName:o.Ab,backendName:"cpu",kernelFunc:Ql};function nd(e){return(t,n,r,c,l)=>{const d=o.vd.assertAndGetBroadcastShape(t,n),h=d.length,f=o.yf.computeStrides(d),m=o.yf.sizeFromShape(d),y=o.yf.getTypedArrayFromDType(l,m),x=t.length,v=n.length,O=o.yf.computeStrides(t),w=o.yf.computeStrides(n),k=o.vd.getBroadcastDims(t,d),I=o.vd.getBroadcastDims(n,d);if(k.length+I.length===0)for(let i=0;i<y.length;++i)y[i]=e(r[i%r.length],c[i%c.length]);else for(let i=0;i<y.length;++i){const t=o.yf.indexToLoc(i,h,f),n=t.slice(-x);k.forEach((e=>n[e]=0));const l=o.yf.locToIndex(n,x,O),d=t.slice(-v);I.forEach((e=>d[e]=0));const m=o.yf.locToIndex(d,v,w);y[i]=e(r[l],c[m])}return[y,d]}}const rd=nd(((e,t)=>e<0?t*e:e));function ad(e){const{inputs:t,backend:n}=e,{x:r,alpha:o}=t;Vl([r,o],"prelu");const c=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,[d,h]=rd(r.shape,o.shape,c,l,"float32");return n.makeTensorInfo(h,"float32",d)}const sd={kernelName:o.ic,backendName:"cpu",kernelFunc:ad},id=ql(o.oc,(e=>Math.max(0,e))),od={kernelName:o.oc,backendName:"cpu",kernelFunc:id},ud=ql(o.pc,(e=>Math.min(Math.max(0,e),6))),cd={kernelName:o.pc,backendName:"cpu",kernelFunc:ud};function ld(e){return(t,n,r)=>{const c=o.yf.getTypedArrayFromDType(n,t.length);for(let i=0;i<t.length;++i)c[i]=e(t[i],r);return c}}const hd=ld((e=>1/(1+Math.exp(-e)))),pd=ql(o.Cc,(e=>1/(1+Math.exp(-e)))),fd={kernelName:o.Cc,backendName:"cpu",kernelFunc:pd};function md(e,t,n,r,o){if("linear"===n)return Zl({inputs:{x:t},backend:e});if("relu"===n)return id({inputs:{x:t},backend:e});if("elu"===n)return Xl({inputs:{x:t},backend:e});if("relu6"===n)return ud({inputs:{x:t},backend:e});if("prelu"===n)return ad({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Ql({inputs:{x:t},backend:e,attrs:{alpha:o}});if("sigmoid"===n)return pd({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function bd(e){const{inputs:t,backend:n}=e,{real:r,imag:o}=t,c=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,d=n.makeTensorInfo(r.shape,"complex64");return n.data.get(d.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",c),imag:n.makeTensorInfo(o.shape,"float32",l)},d}const gd={kernelName:o.z,backendName:"cpu",kernelFunc:bd};function yd(e,t,n="float32"){if("complex64"===n){return bd({inputs:{real:yd(e,t,"float32"),imag:yd(e,t,"float32")},backend:e})}const r=o.yf.makeZerosTypedArray(o.yf.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function xd(e){const{inputs:t,backend:n}=e,{input:input}=t,r=n.data.get(input.dataId).complexTensorInfos.real,o=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,o)}const vd={kernelName:o.lc,backendName:"cpu",kernelFunc:xd};function Od(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{dtype:l}=r;if("complex64"===l){if("complex64"===c.dtype)return Zl({inputs:{x:c},backend:n});const e=yd(n,c.shape,c.dtype),t=Od({inputs:{x:c},backend:n,attrs:{dtype:"float32"}}),r=bd({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===c.dtype){const e=xd({inputs:{input:c},backend:n}),t=Od({inputs:{x:e},backend:n,attrs:{dtype:l}});return n.disposeIntermediateTensorInfo(e),t}if(!o.yf.hasEncodingLoss(c.dtype,l)){const e=Zl({inputs:{x:c},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:l}}if("int32"===l){const e=n.data.get(c.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(c.shape,"int32",t)}if("bool"===l){const e=n.data.get(c.dataId).values,t=o.yf.toTypedArray([0],c.dtype),[r,l]=nd(((a,b)=>a!==b?1:0))(c.shape,[],e,t,"bool");return n.makeTensorInfo(l,"bool",r)}throw new Error(`Error in Cast: failed to cast ${c.dtype} to ${l}`)}const wd={kernelName:o.w,backendName:"cpu",kernelFunc:Od};function kd(e,t,n,r){return null==n?({inputs:n,backend:c})=>{const{a:a,b:b}=n,l=c;Vl([a,b],e);const d=l.data.get(a.dataId).values,h=l.data.get(b.dataId).values,f="string"===a.dtype?o.vd.fromUint8ToStringArray(d):d,m="string"===a.dtype?o.vd.fromUint8ToStringArray(h):h,y=r||a.dtype,[x,v]=t(a.shape,b.shape,f,m,y);return l.makeTensorInfo(v,y,x)}:({inputs:e,backend:o})=>{const{a:a,b:b}=e,c=o;if("complex64"===a.dtype||"complex64"===b.dtype){const e=Od({inputs:{x:a},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),r=t.complexTensorInfos.real,o=t.complexTensorInfos.imag,l=c.data.get(r.dataId).values,d=c.data.get(o.dataId).values,h=Od({inputs:{x:b},backend:c,attrs:{dtype:"complex64"}}),f=c.data.get(h.dataId),m=f.complexTensorInfos.real,y=f.complexTensorInfos.imag,x=c.data.get(m.dataId).values,v=c.data.get(y.dataId).values,[O,w,k]=n(a.shape,b.shape,l,d,x,v),I=c.makeTensorInfo(k,"float32",O),S=c.makeTensorInfo(k,"float32",w),N=bd({inputs:{real:I,imag:S},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(h),c.disposeIntermediateTensorInfo(I),c.disposeIntermediateTensorInfo(S),N}{const e=c.data.get(a.dataId).values,n=c.data.get(b.dataId).values,o=r||a.dtype,[l,d]=t(a.shape,b.shape,e,n,o);return c.makeTensorInfo(d,o,l)}}}function Id(e){return(t,n,r,c,l,d)=>{const h=o.vd.assertAndGetBroadcastShape(t,n),f=o.yf.sizeFromShape(h),m=h.length,y=o.yf.computeStrides(h),x=o.yf.getTypedArrayFromDType("float32",f),v=o.yf.getTypedArrayFromDType("float32",f),O=o.vd.getBroadcastDims(t,h),w=o.vd.getBroadcastDims(n,h),k=o.vd.mergeRealAndImagArrays(r,c),I=o.vd.mergeRealAndImagArrays(l,d),S=t.length,N=o.yf.computeStrides(t),j=n.length,T=o.yf.computeStrides(n);if(O.length+w.length===0)for(let i=0;i<x.length;i++){const t=i%k.length,n=i%I.length,r=e(k[2*t],k[2*t+1],I[2*n],I[2*n+1]);x[i]=r.real,v[i]=r.imag}else for(let i=0;i<x.length;i++){const t=o.yf.indexToLoc(i,m,y),n=t.slice(-S);O.forEach((e=>n[e]=0));const r=o.yf.locToIndex(n,S,N),c=t.slice(-j);w.forEach((e=>c[e]=0));const l=o.yf.locToIndex(c,j,T),d=e(k[2*r],k[2*r+1],I[2*l],I[2*l+1]);x[i]=d.real,v[i]=d.imag}return[x,v,h]}}const Sd=nd(((a,b)=>a+b)),Nd=Id(((e,t,n,r)=>({real:e+n,imag:t+r}))),jd=kd(o.d,Sd,Nd),Td={kernelName:o.d,backendName:"cpu",kernelFunc:jd};function Cd(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{shape:l}=r,d=o.yf.sizeFromShape(c.shape),h=o.yf.inferFromImplicitShape(l,d),f=o.yf.sizeFromShape(h);o.yf.assert(d===f,(()=>`The new shape (${h}) has ${f} elements and the old shape (${c.shape}) has ${d} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(c.dataId);const m=n.data.get(c.dataId);if(null!=m.complexTensorInfos){const e=m.complexTensorInfos.real,t=m.complexTensorInfos.imag;e.shape=h,t.shape=h}return{dataId:c.dataId,shape:h,dtype:c.dtype}}const $d={kernelName:o.qc,backendName:"cpu",kernelFunc:Cd};function Ed(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:b}=t,{transposeA:c,transposeB:l}=r;Vl([a,b],"matMul");const d=a.shape.length,h=b.shape.length,f=c?a.shape[d-2]:a.shape[d-1],m=l?b.shape[h-1]:b.shape[h-2],y=c?a.shape[d-1]:a.shape[d-2],x=l?b.shape[h-2]:b.shape[h-1],v=a.shape.slice(0,-2),O=b.shape.slice(0,-2),w=o.yf.sizeFromShape(v),k=o.yf.sizeFromShape(O),I=o.zd.assertAndGetBroadcastShape(a.shape.slice(0,-2),b.shape.slice(0,-2)).concat([y,x]);o.yf.assert(f===m,(()=>`Error in matMul: inner shapes (${f}) and (${m}) of Tensors with shapes ${a.shape} and ${b.shape} and transposeA=${c} and transposeB=${l} must match.`));const S=l?[k,x,m]:[k,m,x],N=Cd({inputs:{x:a},backend:n,attrs:{shape:c?[w,f,y]:[w,y,f]}}),j=Cd({inputs:{x:b},backend:n,attrs:{shape:S}}),T=c?N.shape[1]:N.shape[2],C=c?N.shape[2]:N.shape[1],$=l?j.shape[1]:j.shape[2],E=Math.max(w,k),A=n.data.get(N.dataId).values,R=n.data.get(j.dataId).values,F=o.yf.computeStrides(N.shape),D=o.yf.computeStrides(j.shape),[_,M,z]=c?[F[0],1,F[1]]:[F[0],F[1],1],[L,P,B]=l?[1,D[1],D[0]]:[D[1],1,D[0]],W=C*$,U=Object(o.Bd)([E,C,$],N.dtype),V=U.values,G=n.blockSize;for(let e=0;e<E;e++)for(let t=0;t<C;t+=G)for(let n=0;n<$;n+=G)for(let r=0;r<T;r+=G){const o=Math.min(t+G,C),c=Math.min(n+G,$),l=Math.min(r+G,T);for(let i=t;i<o;i++)for(let t=n;t<c;t++){let n=0;for(let o=r;o<l;o++){const r=Math.min(e,w-1)*_,c=Math.min(e,k-1)*B;n+=A[r+i*M+o*z]*R[o*L+t*P+c]}V[e*W+(i*$+t)]+=n}}return n.disposeIntermediateTensorInfo(N),n.disposeIntermediateTensorInfo(j),n.makeTensorInfo(I,U.dtype,U.values)}const Ad={kernelName:o.s,backendName:"cpu",kernelFunc:Ed};const Rd={kernelName:o.md,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:b,bias:o,preluActivationWeights:c}=t,{transposeA:l,transposeB:d,activation:h,leakyreluAlpha:f}=r;let m,y,x;const v=[];m=Ed({inputs:{a:a,b:b},attrs:{transposeA:l,transposeB:d},backend:n}),o&&(y=jd({inputs:{a:m,b:o},backend:n}),v.push(m),m=y),h&&(x=md(n,m,h,c,f),v.push(m),m=x);for(const i of v)n.disposeIntermediateTensorInfo(i);return m}};function Fd(e){const t=new Float32Array(e.length);for(let i=0;i<e.length;++i)t[i]=Math.abs(e[i]);return t}const Dd={kernelName:o.a,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Vl(t,"abs");let r=new Float32Array(o.yf.sizeFromShape(t.shape));return r=Fd(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},_d=ql(o.b,(e=>Math.acos(e))),Md={kernelName:o.b,backendName:"cpu",kernelFunc:_d},zd=ql(o.c,(e=>Math.acosh(e))),Ld={kernelName:o.c,backendName:"cpu",kernelFunc:zd};const Pd={kernelName:o.e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;Vl(t,"addN");const c=r.map((e=>n.data.get(e.dataId).values)),l=Object(o.Bd)(r[0].shape,r[0].dtype),d=l.values;for(let i=0;i<r.length;i++){const e=c[i];for(let t=0;t<d.length;t++)d[t]+=e[t]}return n.makeTensorInfo(l.shape,l.dtype,l.values)}};function Bd(e,t,n,r,c){const l=t.length,d=o.yf.sizeFromShape(t),h=o.yf.computeStrides(t),f=o.yf.computeStrides(c),m=o.yf.getTypedArrayFromDType(n,o.yf.sizeFromShape(c));for(let i=0;i<d;++i){const t=o.yf.indexToLoc(i,l,h),n=new Array(t.length);for(let i=0;i<n.length;i++)n[i]=t[r[i]];m[o.yf.locToIndex(n,l,f)]=e[i]}return m}function Wd(e){const{inputs:t,attrs:n,backend:r}=e,{x:o}=t,{perm:c}=n;Vl(o,"transpose");const l=o.shape.length,d=new Array(l);for(let i=0;i<d.length;i++)d[i]=o.shape[c[i]];const h=Bd(r.data.get(o.dataId).values,o.shape,o.dtype,c,d);return{dataId:r.write(h,d,o.dtype),shape:d,dtype:o.dtype}}const Ud={kernelName:o.hd,backendName:"cpu",kernelFunc:Wd};const Vd={kernelName:o.f,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r;Vl(c,"all");const h=o.yf.parseAxisParam(l,c.shape);let f=h;const m=o.vd.getAxesPermutation(f,c.shape.length);let y=c;null!=m&&(y=Wd({inputs:{x:c},backend:n,attrs:{perm:m}}),f=o.vd.getInnerMostAxes(f.length,c.shape.length)),o.vd.assertAxesAreInnerMostDims("all",f,y.shape.length);const[x,v]=o.vd.computeOutAndReduceShapes(y.shape,f),O=o.yf.sizeFromShape(v),w=o.yf.makeZerosTypedArray(o.yf.sizeFromShape(x),y.dtype),k=n.data.get(y.dataId).values;for(let i=0;i<w.length;++i){const e=i*O;let t=k[e];for(let n=0;n<O;++n){const r=k[e+n];t=t&&r}w[i]=t}null!=m&&n.disposeIntermediateTensorInfo(y);const I=n.makeTensorInfo(x,y.dtype,w);if(d){const e=Cd({inputs:{x:I},backend:n,attrs:{shape:o.vd.expandShapeToKeepDim(x,h)}});return n.disposeIntermediateTensorInfo(I),e}return I}};const Gd={kernelName:o.g,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r;Vl(c,"any");const h=o.yf.parseAxisParam(l,c.shape);let f=h;const m=o.vd.getAxesPermutation(f,c.shape.length);let y=c;null!=m&&(y=Wd({inputs:{x:c},backend:n,attrs:{perm:m}}),f=o.vd.getInnerMostAxes(f.length,c.shape.length)),o.vd.assertAxesAreInnerMostDims("any",f,y.shape.length);const[x,v]=o.vd.computeOutAndReduceShapes(y.shape,f),O=o.yf.sizeFromShape(v),w=o.yf.makeZerosTypedArray(o.yf.sizeFromShape(x),y.dtype),k=n.data.get(y.dataId).values;for(let i=0;i<w.length;++i){const e=i*O;let t=k[e];for(let n=0;n<O;++n){const r=k[e+n];t=t||r}w[i]=t}null!=m&&n.disposeIntermediateTensorInfo(y);const I=n.makeTensorInfo(x,y.dtype,w);if(d){const e=Cd({inputs:{x:I},backend:n,attrs:{shape:o.vd.expandShapeToKeepDim(x,h)}});return n.disposeIntermediateTensorInfo(I),e}return I}};const Hd={kernelName:o.h,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l}=r;Vl(c,"argMax");let d=o.yf.parseAxisParam(l,c.shape);const h=o.vd.getAxesPermutation(d,c.shape.length);let f=c;const m=[];null!=h&&(f=Wd({inputs:{x:c},backend:n,attrs:{perm:h}}),m.push(f),d=o.vd.getInnerMostAxes(d.length,f.shape.length)),d=[d[0]],o.vd.assertAxesAreInnerMostDims("argMax",d,f.shape.length);const[y,x]=o.vd.computeOutAndReduceShapes(f.shape,d),v=o.yf.sizeFromShape(y),O=o.yf.makeZerosTypedArray(v,"int32"),w=o.yf.sizeFromShape(x),k=n.data.get(f.dataId).values;for(let i=0;i<O.length;++i){const e=i*w;let t=k[e],n=0;for(let r=0;r<w;++r){const o=k[e+r];o>t&&(t=o,n=r)}O[i]=n}return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,"int32",O)}};const qd={kernelName:o.i,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l}=r;Vl(c,"argMin");let d=o.yf.parseAxisParam(l,c.shape);const h=o.vd.getAxesPermutation(d,c.shape.length);let f=c;const m=[];null!=h&&(f=Wd({inputs:{x:c},backend:n,attrs:{perm:h}}),m.push(f),d=o.vd.getInnerMostAxes(d.length,f.shape.length)),d=[d[0]],o.vd.assertAxesAreInnerMostDims("argMin",d,f.shape.length);const[y,x]=o.vd.computeOutAndReduceShapes(f.shape,d),v=o.yf.sizeFromShape(y),O=o.yf.makeZerosTypedArray(v,"int32"),w=o.yf.sizeFromShape(x),k=n.data.get(f.dataId).values;for(let i=0;i<O.length;++i){const e=i*w;let t=k[e],n=0;for(let r=0;r<w;++r){const o=k[e+r];o<t&&(t=o,n=r)}O[i]=n}return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,"int32",O)}},Kd=ql(o.j,(e=>Math.asin(e))),Xd={kernelName:o.j,backendName:"cpu",kernelFunc:Kd},Yd=ql(o.k,(e=>Math.asinh(e))),Zd={kernelName:o.k,backendName:"cpu",kernelFunc:Yd},Jd=ql(o.l,(e=>Math.atan(e))),Qd={kernelName:o.l,backendName:"cpu",kernelFunc:Jd},eh=nd(((e,t)=>Math.atan2(e,t))),nh=kd(o.m,eh),rh={kernelName:o.m,backendName:"cpu",kernelFunc:nh},ah=ql(o.n,(e=>Math.atanh(e))),sh={kernelName:o.n,backendName:"cpu",kernelFunc:ah};function ih(e,t,n,r,c,l){const d=c.strideHeight,h=c.strideWidth,f=c.dilationHeight,m=c.dilationWidth,y=c.effectiveFilterHeight,x=c.effectiveFilterWidth,v=c.padInfo.top,O=c.padInfo.left,w="max"===l?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,output=Object(o.Bd)(c.outShape,n),k=output.values,I=c.outShape[1]*c.outShape[2]*c.outShape[3],S=c.outShape[2]*c.outShape[3],N=c.outShape[3];for(let b=0;b<c.batchSize;++b){const t=b*I,n=b*r[0];for(let o=0;o<c.inChannels;++o)for(let I=0;I<c.outHeight;++I){const j=I*d-v,T=Math.max(0,j),C=Math.min(c.inHeight,y+j),$=t+I*S;for(let t=0;t<c.outWidth;++t){const d=t*h-O,y=Math.max(0,d),v=Math.min(c.inWidth,x+d);let I=w,S=0,j=0;for(let t=T;t<C;t+=f){const c=n+t*r[1];for(let t=y;t<v;t+=m){const n=e[c+t*r[2]+o];"max"===l&&n>I?I=n:"avg"===l&&(S+=n,j++)}if(isNaN(I))break}k[$+t*N+o]="avg"===l?S/j:I}}}return output}function oh(e,t,n,r,c=!1,l=!1){const d=Object(o.Bd)(r.outShape,"int32"),h=r.strideHeight,f=r.strideWidth,m=r.dilationHeight,y=r.dilationWidth,x=r.effectiveFilterHeight,v=r.effectiveFilterWidth,O=r.padInfo.top,w=r.padInfo.left,k=Object(o.Bd)(t,n,e);for(let b=0;b<r.batchSize;++b)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*h-O;let o=n;for(;o<0;)o+=m;const I=Math.min(r.inHeight,x+n);for(let h=0;h<r.outWidth;++h){const x=h*f-w;let O=x;for(;O<0;)O+=y;const S=Math.min(r.inWidth,v+x);let N=Number.NEGATIVE_INFINITY,j=-1;for(let t=o;t<I;t+=m){const o=t-n;for(let n=O;n<S;n+=y){const d=n-x,h=k.get(b,t,n,e);h>N&&(N=h,j=c?l?((b*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:o*v+d)}}d.set(j,b,t,h,e)}}return d}function uh(e,t,n,r,c,l){const d=c.strideDepth,h=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,O=c.effectiveFilterHeight,w=c.effectiveFilterWidth,k=c.padInfo.front,I=c.padInfo.top,S=c.padInfo.left,N="max"===l?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,output=Object(o.Bd)(c.outShape,n),j=output.values,T=c.outShape[1]*c.outShape[2]*c.outShape[3]*c.outShape[4],C=c.outShape[2]*c.outShape[3]*c.outShape[4],$=c.outShape[3]*c.outShape[4],E=c.outShape[4];for(let t=0;t<c.batchSize;++t){const n=t*T,o=t*r[0];for(let t=0;t<c.inChannels;++t)for(let T=0;T<c.outDepth;++T){const A=T*d-k;let R=A;for(;R<0;)R+=m;const F=Math.min(c.inDepth,v+A),D=n+T*C;for(let n=0;n<c.outHeight;++n){const d=n*h-I;let v=d;for(;v<0;)v+=y;const k=Math.min(c.inHeight,O+d),T=D+n*$;for(let n=0;n<c.outWidth;++n){const d=n*f-S;let h=d;for(;h<0;)h+=x;const O=Math.min(c.inWidth,w+d),I=T+n*E;let C=N,$=0,A=0;for(let n=R;n<F;n+=m){const c=o+n*r[1];for(let n=v;n<k;n+=y){const o=c+n*r[2];for(let n=h;n<O;n+=x){const c=e[o+n*r[3]+t];if("max"===l&&c>C?C=c:"avg"===l&&($+=c,A++),isNaN(C))break}if(isNaN(C))break}if(isNaN(C))break}j[I+t]="avg"===l?$/A:C}}}}return output}const ch={kernelName:o.o,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t;Vl(c,"avgPool");const{filterSize:l,strides:d,pad:h,dimRoundingMode:f}=r;o.yf.assert(o.vd.eitherStridesOrDilationsAreOne(d,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${d} and dilations '1'`));const m=o.vd.computePool2DInfo(c.shape,l,d,1,h,f);let y;if(1===m.filterWidth&&1===m.filterHeight&&o.yf.arraysEqual(m.inShape,m.outShape))y=Zl({inputs:{x:c},backend:n});else{const e=n.data.get(c.dataId).values,t=o.yf.computeStrides(c.shape),r=ih(e,c.shape,c.dtype,t,m,"avg");y=n.makeTensorInfo(m.outShape,c.dtype,r.values)}return y}};const lh={kernelName:o.p,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{filterSize:l,strides:d,pad:h,dimRoundingMode:f,dataFormat:m}=r;Vl(c,"avgPool3d");const y=o.vd.computePool3DInfo(c.shape,l,d,1,h,f,m),x=uh(n.data.get(c.dataId).values,c.shape,c.dtype,o.yf.computeStrides(c.shape),y,"avg");return n.makeTensorInfo(x.shape,"float32",x.values)}};const dh={kernelName:o.q,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,input:input}=t,{filterSize:l,strides:d,pad:h,dimRoundingMode:f}=r;Vl([c,input],"avgPool3DGrad");const m=o.vd.computePool3DInfo(input.shape,l,d,1,h,f),y=m.strideDepth,x=m.strideHeight,v=m.strideWidth,O=m.filterDepth,w=m.filterHeight,k=m.filterWidth,I=m.dilationDepth,S=m.dilationHeight,N=m.dilationWidth,j=m.effectiveFilterDepth,T=m.effectiveFilterHeight,C=m.effectiveFilterWidth,$=j-1-m.padInfo.front,E=C-1-m.padInfo.left,A=T-1-m.padInfo.top,R=Object(o.Bd)(input.shape,"float32"),F=1/(O*w*k),D=n.bufferSync(c);for(let e=0;e<m.batchSize;++e)for(let t=0;t<m.inChannels;++t)for(let n=0;n<m.inDepth;++n)for(let r=0;r<m.inHeight;++r)for(let o=0;o<m.inWidth;++o){const c=n-$,l=r-A,d=o-E;let h=0;for(let n=0;n<j;n+=I){const r=(c+n)/y;if(!(r<0||r>=m.outDepth||Math.floor(r)!==r))for(let n=0;n<T;n+=S){const o=(l+n)/x;if(!(o<0||o>=m.outHeight||Math.floor(o)!==o))for(let n=0;n<C;n+=N){const c=(d+n)/v;if(c<0||c>=m.outWidth||Math.floor(c)!==c)continue;h+=D.get(e,r,o,c,t)}}}R.set(h*F,e,n,r,o,t)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}};const hh={kernelName:o.r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,input:input}=t,l=input;Vl([c,input],"avgPoolGrad");const{filterSize:d,strides:h,pad:f}=r,m=o.vd.computePool2DInfo(l.shape,d,h,1,f),y=m.strideHeight,x=m.strideWidth,v=m.filterHeight,O=m.filterWidth,w=m.dilationHeight,k=m.dilationWidth,I=m.effectiveFilterHeight,S=m.effectiveFilterWidth,N=S-1-m.padInfo.left,j=I-1-m.padInfo.top,T=Object(o.Bd)(l.shape,"float32"),C=1/(v*O),$=n.data.get(c.dataId).values,E=Object(o.Bd)(c.shape,"float32",$);for(let b=0;b<m.batchSize;++b)for(let e=0;e<m.inChannels;++e)for(let t=0;t<m.inHeight;++t)for(let n=0;n<m.inWidth;++n){const r=t-j,o=n-N;let c=0;for(let t=0;t<I;t+=w){const n=(r+t)/y;if(!(n<0||n>=m.outHeight||Math.floor(n)!==n))for(let t=0;t<S;t+=k){const r=(o+t)/x;if(r<0||r>=m.outWidth||Math.floor(r)!==r)continue;c+=E.get(b,n,r,e)}}T.set(c*C,b,t,n,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const ph={kernelName:o.kb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,scale:l,offset:d,mean:h,variance:f}=t;o.yf.assert(h.shape.length===f.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.yf.assert(null==d||h.shape.length===d.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.yf.assert(null==l||h.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Vl([c,h,f,l,d],"batchNorm");let{varianceEpsilon:m}=r;null==m&&(m=.001);const y=n.data.get(c.dataId).values,x=n.data.get(h.dataId).values,v=n.data.get(f.dataId).values,O=l?n.data.get(l.dataId).values:new Float32Array([1]),w=d?n.data.get(d.dataId).values:new Float32Array([0]),k=new Float32Array(y.length),I=w.length,S=O.length,N=v.length,j=x.length;let T=0,C=0,$=0,E=0;for(let i=0;i<y.length;++i)k[i]=w[T++]+(y[i]-x[C++])*O[$++]/Math.sqrt(v[E++]+m),T>=I&&(T=0),C>=j&&(C=0),$>=S&&($=0),E>=N&&(E=0);return n.makeTensorInfo(c.shape,c.dtype,k)}};function fh(e,t,n,r,c){const l=o.cf.isSliceContinous(r,t,n),d=o.yf.sizeFromShape(n),h=o.yf.computeStrides(r);if(l){const n=o.cf.computeFlatOffset(t,h);return"string"===c?e.slice(n,n+d):e.subarray(n,n+d)}const f="string"===c?o.vd.fromUint8ToStringArray(e):e,m=Object(o.Bd)(r,c,f),y=Object(o.Bd)(n,c);for(let i=0;i<y.size;++i){const e=y.indexToLoc(i),n=e.map(((e,n)=>e+t[n]));y.set(m.get(...n),...e)}return"string"===c?o.vd.fromStringArrayToUint8(y.values):y.values}function mh(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{begin:l,size:d}=r;Vl(c,"slice");const[h,f]=o.cf.parseSliceParams(c,l,d);o.cf.assertParamsValid(c,h,f);const m=fh(n.data.get(c.dataId).values,h,f,c.shape,c.dtype);return n.makeTensorInfo(f,c.dtype,m)}const bh={kernelName:o.Gc,backendName:"cpu",kernelFunc:mh};const gh={kernelName:o.t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{blockShape:l,crops:d}=r;Vl([c],"batchToSpaceND");const h=l.reduce(((a,b)=>a*b)),f=o.vd.getReshaped(c.shape,l,h),m=o.vd.getPermuted(f.length,l.length),y=o.vd.getReshapedPermuted(c.shape,l,h),x=o.vd.getSliceBeginCoords(d,l.length),v=o.vd.getSliceSize(y,d,l.length),O=Cd({inputs:{x:c},backend:n,attrs:{shape:f}}),w=Wd({inputs:{x:O},backend:n,attrs:{perm:m}}),k=Cd({inputs:{x:w},backend:n,attrs:{shape:y}}),I=mh({inputs:{x:k},backend:n,attrs:{begin:x,size:v}});return n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),I}};function yh(e,t,n,r,c){const l=o.yf.sizeFromShape(r),d=o.yf.makeZerosTypedArray(c,n);for(let i=0;i<e.length;i++){const n=e[i];if(n<0)throw new Error("Input x must be non-negative!");n>=c||(d[n]+=l>0?t[i]:1)}return d}function xh(e,t,n,r=!1){const c=e.shape[0],l=e.shape[1],d=Object(o.Bd)([c,n],t.dtype);for(let i=0;i<c;i++)for(let o=0;o<l;o++){const c=e.get(i,o);if(c<0)throw new Error("Input x must be non-negative!");c>=n||(r?d.set(1,i,c):t.size>0?d.set(d.get(i,c)+t.get(i,o),i,c):d.set(d.get(i,c)+1,i,c))}return d}const vh={kernelName:o.u,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,weights:c}=t,{size:l}=r,d=yh(n.data.get(o.dataId).values,n.data.get(c.dataId).values,c.dtype,c.shape,l);return n.makeTensorInfo([l],c.dtype,d)}};const Oh={kernelName:o.v,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:c}=t,l=n.data.get(r.dataId).values,d=n.data.get(c.dataId).values,h=o.vd.assertAndGetBroadcastShape(Array.from(l),Array.from(d));return n.makeTensorInfo([h.length],"int32",Int32Array.from(h))}},wh=ld((e=>Math.ceil(e))),kh=Kl(o.x,wh),Ih={kernelName:o.x,backendName:"cpu",kernelFunc:kh},Sh=ql(o.y,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Nh={kernelName:o.y,backendName:"cpu",kernelFunc:Sh},jh={kernelName:o.A,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(o.yf.sizeFromShape(t.shape)),c=n.data.get(t.dataId),l=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,h=n.data.get(l.dataId).values,f=n.data.get(d.dataId).values;for(let i=0;i<h.length;i++){const e=h[i],t=f[i];r[i]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")}};function Th(e,t,n,r){const c=o.yf.getArrayFromDType(n,o.yf.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((input=>{const e=o.yf.sizeFromShape(input.shape);c.set(input.vals,t),t+=e}))}else{let r=0;e.forEach((input=>{const e="string"===n?o.vd.fromUint8ToStringArray(input.vals):input.vals;let l=0;for(let n=0;n<input.shape[0];++n){const o=n*t[1]+r;for(let col=0;col<input.shape[1];++col)c[o+col]=e[l++]}r+=input.shape[1]}))}return c}function Ch(e){const{inputs:t,backend:n}=e,{input:input}=t,r=n.data.get(input.dataId).complexTensorInfos.imag,o=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,o)}const $h={kernelName:o.tb,backendName:"cpu",kernelFunc:Ch};function Eh(e){const{inputs:t,backend:n,attrs:r}=e,{axis:c}=r,l=o.yf.parseAxisParam(c,t[0].shape)[0];let d=o.vd.computeOutShape(t.map((e=>e.shape)),l);if(0===o.yf.sizeFromShape(d))return n.makeTensorInfo(d,t[0].dtype,[]);const h=t.filter((e=>o.yf.sizeFromShape(e.shape)>0));if(1===h.length)return Zl({inputs:{x:h[0]},backend:n});const f=h.map((e=>e.shape));if(o.vd.assertParamsConsistent(f,l),"complex64"===h[0].dtype){const e=h.map((e=>xd({inputs:{input:e},backend:n}))),t=h.map((e=>Ch({inputs:{input:e},backend:n}))),r=Eh({inputs:e,backend:n,attrs:{axis:l}}),o=Eh({inputs:t,backend:n,attrs:{axis:l}}),c=bd({inputs:{real:r,imag:o},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((i=>n.disposeIntermediateTensorInfo(i))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),c}const m=h.map((e=>{const t=o.yf.sizeFromShape(e.shape.slice(l));return Cd({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),y=m.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));d=o.vd.computeOutShape(m.map((e=>e.shape)),1);const x=1===m[0].shape[0],v=Th(y,d,t[0].dtype,x),O=o.vd.computeOutShape(h.map((e=>e.shape)),l),w=n.makeTensorInfo(O,t[0].dtype,v);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),w}const Ah={kernelName:o.B,backendName:"cpu",kernelFunc:Eh};function Rh(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,filter:filter}=t,{strides:l,pad:d,dataFormat:h,dilations:f,dimRoundingMode:m}=r;Vl([c,filter],"conv2d");const y=o.vd.convertConv2DDataFormat(h),x=o.vd.computeConv2DInfo(c.shape,filter.shape,l,f,d,m,!1,y),v=x.filterHeight,O=x.filterWidth,w=x.dilationHeight,k=x.dilationWidth,I=x.padInfo.left,S=x.padInfo.top,N="channelsLast"===x.dataFormat,j=new o.dd(x.outShape,c.dtype),T=o.yf.computeStrides(c.shape),C=o.yf.computeStrides(filter.shape),$=T[0],E=N?T[1]:T[2],A=N?T[2]:1,R=N?1:T[1],F=j.strides[0],D=N?j.strides[1]:j.strides[2],_=N?j.strides[2]:1,M=N?1:j.strides[1],z=n.data.get(c.dataId).values,L=n.data.get(filter.dataId).values,P=j.values;for(let b=0;b<x.batchSize;++b){const e=b*$,t=b*F;for(let n=0;n<x.outHeight;++n){const r=t+n*D,o=n*x.strideHeight-S;for(let t=0;t<v;++t){const n=o+t*w;if(n<0||n>=x.inHeight)continue;const c=t*C[0],l=e+n*E;for(let e=0;e<x.outWidth;++e){const t=r+e*_,n=e*x.strideWidth-I;for(let e=0;e<O;++e){const r=n+e*k;if(r<0||r>=x.inWidth)continue;const o=l+r*A;let d=c+e*C[1];for(let e=0;e<x.inChannels;++e){const n=z[o+e*R];for(let e=0;e<x.outChannels;++e)P[t+e*M]+=n*L[d+e];d+=x.outChannels}}}}}}return n.makeTensorInfo(j.shape,j.dtype,P)}const Fh={kernelName:o.C,backendName:"cpu",kernelFunc:Rh};const Dh={kernelName:o.D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,dy:l}=t,{strides:d,pad:h,dataFormat:f,dimRoundingMode:m,filterShape:y}=r;Vl([c,l],"conv2dBackpropFilter");const x=o.vd.convertConv2DDataFormat(f),v=o.vd.computeConv2DInfo(c.shape,y,d,1,h,m,!1,x),{strideHeight:O,strideWidth:w,filterHeight:k,filterWidth:I}=v,S="channelsLast"===v.dataFormat,N=new o.dd(v.filterShape,"float32"),j=v.padInfo.left,T=v.padInfo.top,C=n.data.get(c.dataId).values,$=n.data.get(l.dataId).values,E=new o.dd(c.shape,c.dtype,C),A=new o.dd(l.shape,l.dtype,$);for(let e=0;e<k;++e){const t=Math.max(0,Math.ceil((T-e)/O)),n=Math.min(v.outHeight,(v.inHeight+T-e)/O);for(let r=0;r<I;++r){const o=Math.max(0,Math.ceil((j-r)/w)),c=Math.min(v.outWidth,(v.inWidth+j-r)/w);for(let l=0;l<v.inChannels;++l)for(let d=0;d<v.outChannels;++d){let h=0;for(let b=0;b<v.batchSize;++b)for(let f=t;f<n;++f){const t=e+f*O-T;for(let e=o;e<c;++e){const n=r+e*w-j;h+=S?E.get(b,t,n,l)*A.get(b,f,e,d):E.get(b,l,t,n)*A.get(b,d,f,e)}}N.set(h,e,r,l,d)}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const _h={kernelName:o.E,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,filter:filter}=t,{inputShape:l,strides:d,pad:h,dataFormat:f,dimRoundingMode:m}=r;Vl([c,filter],"conv2dBackpropInput");const y=o.yf.computeStrides(filter.shape),x=o.yf.computeStrides(c.shape);let v=o.vd.convertConv2DDataFormat(f);const O=o.vd.computeConv2DInfo(l,filter.shape,d,1,h,m,!1,v),w=new o.dd(O.inShape,"float32"),k=w.values,I=n.data.get(c.dataId).values,S=n.data.get(filter.dataId).values,[N,j,T]=y,{batchSize:C,filterHeight:$,filterWidth:E,inChannels:A,inHeight:R,inWidth:F,outChannels:D,outHeight:_,outWidth:M,strideHeight:z,strideWidth:L}=O;v=O.dataFormat;const P=$-1-O.padInfo.top,B=E-1-O.padInfo.left,W="channelsLast"===v,U=w.strides[0],V=W?w.strides[1]:w.strides[2],G=W?w.strides[2]:1,H=W?1:w.strides[1],K=x[0],X=W?x[1]:x[2],Y=W?x[2]:1,Z=W?1:x[1];for(let b=0;b<C;++b)for(let e=0;e<A;++e)for(let t=0;t<R;++t){const n=t-P,r=Math.max(0,Math.ceil(n/z)),o=Math.min(_,($+n)/z);for(let c=0;c<F;++c){const l=c-B,d=Math.max(0,Math.ceil(l/L)),h=Math.min(M,(E+l)/L);let f=0;for(let t=r;t<o;++t){const r=t*z-n;for(let n=d;n<h;++n){const o=K*b+X*t+Y*n,c=N*($-1-r)+j*(E-1-(n*L-l))+T*e;for(let e=0;e<D;++e){f+=I[o+Z*e]*S[c+e]}}}k[U*b+V*t+G*c+H*e]=f}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const Mh={kernelName:o.F,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,filter:filter}=t,{strides:l,pad:d,dilations:h}=r;Vl([c,filter],"conv3d");const f=o.vd.computeConv3DInfo(c.shape,filter.shape,l,h,d),{filterDepth:m,filterHeight:y,filterWidth:x,dilationDepth:v,dilationHeight:O,dilationWidth:w,padInfo:k}=f,I=k.front,S=k.left,N=k.top,j=new o.dd(f.outShape,c.dtype),T=n.data.get(c.dataId).values,C=n.data.get(filter.dataId).values,$=j.values,E=o.yf.computeStrides(c.shape),A=o.yf.computeStrides(filter.shape);for(let b=0;b<f.batchSize;++b){const e=b*E[0],t=b*j.strides[0];for(let n=0;n<f.outDepth;++n){const r=t+n*j.strides[1],o=n*f.strideDepth-I;for(let t=0;t<m;++t){const n=o+t*v;if(n<0||n>=f.inDepth)continue;const c=t*A[0],l=e+n*E[1];for(let e=0;e<f.outHeight;++e){const t=r+e*j.strides[2],n=e*f.strideHeight-N;for(let e=0;e<y;++e){const r=n+e*O;if(r<0||r>=f.inHeight)continue;const o=c+e*A[1],d=l+r*E[2];for(let e=0;e<f.outWidth;++e){const n=t+e*f.outChannels,r=e*f.strideWidth-S;for(let e=0;e<x;++e){const t=r+e*w;if(t<0||t>=f.inWidth)continue;const c=o+e*A[2],l=d+t*f.inChannels;let h=c;for(let e=0;e<f.inChannels;++e){const t=T[l+e];for(let e=0;e<f.outChannels;++e)$[n+e]+=t*C[h+e];h+=f.outChannels}}}}}}}}return n.makeTensorInfo(j.shape,j.dtype,j.values)}};const zh={kernelName:o.G,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,dy:l}=t,{strides:d,pad:h,filterShape:f}=r;Vl([c,l],"conv3dBackpropFilterV2");const m=o.yf.computeStrides(c.shape),y=o.yf.computeStrides(l.shape),x=o.vd.computeConv3DInfo(c.shape,f,d,1,h),v=x.strideDepth,O=x.strideHeight,w=x.strideWidth,k=x.filterDepth,I=x.filterHeight,S=x.filterWidth,N=new o.dd(x.filterShape,"float32"),j=N.values,[T,C,$,E]=N.strides,A=n.data.get(l.dataId).values,[R,F,D,_]=y,M=n.data.get(c.dataId).values,[z,L,P,B]=m,W=x.padInfo.front,U=x.padInfo.left,V=x.padInfo.top;for(let e=0;e<k;++e){const t=Math.max(0,Math.ceil((W-e)/v)),n=Math.min(x.outDepth,(x.inDepth+W-e)/v),r=e*T;for(let o=0;o<I;++o){const c=Math.max(0,Math.ceil((V-o)/O)),l=Math.min(x.outHeight,(x.inHeight+V-o)/O),d=o*C+r;for(let r=0;r<S;++r){const h=Math.max(0,Math.ceil((U-r)/w)),f=Math.min(x.outWidth,(x.inWidth+U-r)/w),m=r*$+d;for(let d=0;d<x.inChannels;++d){const y=d*E+m;for(let m=0;m<x.outChannels;++m){let k=0;for(let b=0;b<x.batchSize;++b){const y=b*z,x=b*R;for(let I=t;I<n;++I){const t=(e+I*v-W)*L+y,n=I*F+x;for(let e=c;e<l;++e){const c=(o+e*O-V)*P+t,l=e*D+n;for(let e=h;e<f;++e){const t=e*_+l;k+=M[(r+e*w-U)*B+c+d]*A[t+m]}}}}j[y+m]=k}}}}}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const Lh={kernelName:o.H,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,filter:filter}=t,{pad:l,strides:d,inputShape:h}=r;Vl([c],"conv3dBackpropInputV2");const f=o.yf.computeStrides(c.shape),m=o.yf.computeStrides(filter.shape),y=o.vd.computeConv3DInfo(h,filter.shape,d,1,l),x=new o.dd(y.inShape,"float32"),v=x.values,[O,w,k,I]=x.strides,S=n.data.get(c.dataId).values,[N,j,T,C]=f,$=n.data.get(filter.dataId).values,[E,A,R,F]=m,{batchSize:D,filterDepth:_,filterHeight:M,filterWidth:z,inChannels:L,inDepth:P,inHeight:B,inWidth:W,outChannels:U,outDepth:V,outHeight:G,outWidth:H,strideDepth:K,strideHeight:X,strideWidth:Y}=y,Z=_-1-y.padInfo.front,J=M-1-y.padInfo.top,Q=z-1-y.padInfo.left;for(let b=0;b<D;++b)for(let e=0;e<L;++e)for(let t=0;t<P;++t){const n=t-Z,r=Math.max(0,Math.ceil(n/K)),o=Math.min(V,(_+n)/K);for(let c=0;c<B;++c){const l=c-J,d=Math.max(0,Math.ceil(l/X)),h=Math.min(G,(M+l)/X);for(let f=0;f<W;++f){const m=f-Q,y=Math.max(0,Math.ceil(m/Y)),x=Math.min(H,(z+m)/Y);let D=0;for(let t=r;t<o;++t){const r=t*K-n;for(let n=d;n<h;++n){const o=n*X-l;for(let c=y;c<x;++c){const l=N*b+j*t+T*n+C*c,d=E*(_-1-r)+A*(M-1-o)+R*(z-1-(c*Y-m))+F*e;for(let e=0;e<U;++e){D+=S[l+e]*$[d+e]}}}}v[O*b+w*t+k*c+I*f+e]=D}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Ph=ql(o.I,(e=>Math.cos(e))),Bh={kernelName:o.I,backendName:"cpu",kernelFunc:Ph},Wh=ql(o.J,(e=>Math.cosh(e))),Uh={kernelName:o.J,backendName:"cpu",kernelFunc:Wh};const Vh={kernelName:o.K,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:image,boxes:c,boxInd:l}=t,{cropSize:d,method:h,extrapolationValue:f}=r,[m,y,x,v]=image.shape,O=c.shape[0],[w,k]=d,output=Object(o.Bd)([O,w,k,v],"float32"),I=n.data.get(c.dataId).values,S=n.data.get(l.dataId).values,N=n.data.get(image.dataId).values,j=o.yf.computeStrides(image.shape),T=o.yf.computeStrides(output.shape);for(let b=0;b<O;b++){const e=4*b,t=I[e],n=I[e+1],r=I[e+2],o=I[e+3],c=S[b];if(c>=m)continue;const l=w>1?(r-t)*(y-1)/(w-1):0,d=k>1?(o-n)*(x-1)/(k-1):0;for(let e=0;e<w;e++){const m=w>1?t*(y-1)+e*l:.5*(t+r)*(y-1);if(m<0||m>y-1)for(let t=0;t<k;t++)for(let n=0;n<v;n++){const r=n+t*T[2]+e*T[1]+b*T[0];output.values[r]=f}else if("bilinear"===h){const t=Math.floor(m),r=Math.ceil(m),l=m-t;for(let h=0;h<k;h++){const m=k>1?n*(x-1)+h*d:.5*(n+o)*(x-1);if(m<0||m>x-1){for(let t=0;t<v;t++){const n=t+h*T[2]+e*T[1]+b*T[0];output.values[n]=f}continue}const y=Math.floor(m),O=Math.ceil(m),w=m-y;for(let n=0;n<v;n++){let o=n+y*j[2]+t*j[1]+c*j[0];const d=N[o];o=n+O*j[2]+t*j[1]+c*j[0];const f=N[o];o=n+y*j[2]+r*j[1]+c*j[0];const m=N[o];o=n+O*j[2]+r*j[1]+c*j[0];const x=d+(f-d)*w,v=m+(N[o]-m)*w;o=n+h*T[2]+e*T[1]+b*T[0],output.values[o]=x+(v-x)*l}}}else for(let t=0;t<k;++t){const r=k>1?n*(x-1)+t*d:.5*(n+o)*(x-1);if(r<0||r>x-1){for(let n=0;n<v;n++){const r=n+t*T[2]+e*T[1]+b*T[0];output.values[r]=f}continue}const l=Math.round(r),h=Math.round(m);for(let n=0;n<v;n++){const r=n+l*j[2]+h*j[1]+c*j[0],o=n+t*T[2]+e*T[1]+b*T[0];output.values[o]=N[r]}}}}return n.makeTensorInfo(output.shape,output.dtype,output.values)}};const Gh={kernelName:o.L,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,exclusive:d,reverse:h}=r;Vl(c,"cumsum");const f=o.vd.getAxesPermutation([l],c.shape.length);let m=c;null!=f&&(m=Wd({inputs:{x:c},backend:n,attrs:{perm:f}}));const y=o.vd.getInnerMostAxes(1,c.shape.length)[0];if(y!==m.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${m.shape.length-1} but got axis=${y}`);const x=Object(o.xf)(m.dtype,"int32"),v=o.yf.makeZerosTypedArray(o.yf.sizeFromShape(m.shape),x),O=n.data.get(m.dataId).values,w=m.shape[m.shape.length-1],k=h?(i,e)=>i+w-e-1:(i,e)=>i+e;for(let i=0;i<O.length;i+=w)for(let e=0;e<w;e++){const t=k(i,e);if(0===e)v[t]=d?0:O[t];else{const n=k(i,e-1);v[t]=d?O[n]+v[n]:O[t]+v[n]}}const I=n.makeTensorInfo(m.shape,x,v);if(null!=f){const e=Wd({inputs:{x:I},backend:n,attrs:{perm:o.vd.getUndoAxesPermutation(f)}});return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(m),e}return I}};const Hh={kernelName:o.N,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,weights:c}=t,{size:l,binaryOutput:d}=r;if(1===o.shape.length){const e=yh(n.data.get(o.dataId).values,n.data.get(c.dataId).values,c.dtype,c.shape,l);return n.makeTensorInfo([l],c.dtype,e)}if(2===o.shape.length){const e=xh(n.bufferSync(o),n.bufferSync(c),l,d);return n.makeTensorInfo(e.shape,c.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}};const qh={kernelName:o.O,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{blockSize:l,dataFormat:d}=r;o.yf.assert("NHWC"===d,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${d}`));const h=c.shape[0],f=c.shape[1],m=c.shape[2],y=c.shape[3],x=f*l,v=m*l,O=y/(l*l),w=n.data.get(c.dataId).values,k=new Float32Array(h*x*v*O);let I=0;for(let b=0;b<h;++b)for(let e=0;e<x;++e){const t=Math.floor(e/l),n=e%l;for(let e=0;e<v;++e){const r=Math.floor(e/l),o=(n*l+e%l)*O;for(let e=0;e<O;++e){const n=e+o+y*(r+m*(t+f*b));k[I++]=w[n]}}}return n.makeTensorInfo([h,x,v,O],c.dtype,k)}};function Kh(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,filter:filter}=t,{strides:l,pad:d,dilations:h,dimRoundingMode:f}=r;Vl([c,filter],"depthwiseConv2DNative");const m=o.yf.computeStrides(c.shape),y=o.yf.computeStrides(filter.shape);let x=h;null==x&&(x=[1,1]),o.yf.assert(o.vd.eitherStridesOrDilationsAreOne(l,x),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${x}'`));const v=o.vd.computeConv2DInfo(c.shape,filter.shape,l,x,d,f,!0),{filterHeight:O,filterWidth:w,dilationHeight:k,dilationWidth:I,padInfo:S}=v,N=S.left,j=S.top,T=v.outChannels/v.inChannels,C=new o.dd(v.outShape,c.dtype),$=n.data.get(c.dataId).values,E=n.data.get(filter.dataId).values,A=C.values;for(let b=0;b<v.batchSize;++b){const e=b*m[0],t=b*C.strides[0];for(let n=0;n<v.outHeight;++n){const r=t+n*C.strides[1],o=n*v.strideHeight-j;for(let t=0;t<O;++t){const n=o+t*k;if(n<0||n>=v.inHeight)continue;const c=t*y[0],l=e+n*m[1];for(let e=0;e<v.outWidth;++e){const t=r+e*C.strides[2],n=e*v.strideWidth-N;for(let e=0;e<w;++e){const r=n+e*I;if(r<0||r>=v.inWidth)continue;const o=c+e*y[1],d=l+r*v.inChannels;let h=t,f=o;for(let e=0;e<v.inChannels;++e){const t=$[d+e];for(let q=0;q<T;++q)A[h+q]+=t*E[f+q];h+=T,f+=T}}}}}}return n.makeTensorInfo(C.shape,C.dtype,C.values)}const Xh={kernelName:o.P,backendName:"cpu",kernelFunc:Kh};const Yh={kernelName:o.Q,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,dy:l}=t,{strides:d,dilations:h,pad:f,dimRoundingMode:m,filterShape:y}=r;Vl([c,l],"depthwiseConv2dNativeBackpropFilter");const x=o.vd.computeConv2DInfo(c.shape,y,d,h,f,m,!0),{strideHeight:v,strideWidth:O,filterHeight:w,filterWidth:k}=x,I=new o.dd(x.filterShape,"float32"),S=x.padInfo.left,N=x.padInfo.top,j=x.outChannels/x.inChannels,T=n.data.get(c.dataId).values,C=new o.dd(c.shape,c.dtype,T),$=n.data.get(l.dataId).values,E=new o.dd(l.shape,l.dtype,$);for(let e=0;e<w;++e){const t=Math.max(0,Math.ceil((N-e)/v)),n=Math.min(x.outHeight,(x.inHeight+N-e)/v);for(let r=0;r<k;++r){const o=Math.max(0,Math.ceil((S-r)/O)),c=Math.min(x.outWidth,(x.inWidth+S-r)/O);for(let l=0;l<x.outChannels;++l){const d=Math.trunc(l/j),h=l%j;let f=0;for(let b=0;b<x.batchSize;++b)for(let h=t;h<n;++h){const t=e+h*v-N;for(let e=o;e<c;++e){const n=r+e*O-S;f+=C.get(b,t,n,d)*E.get(b,h,e,l)}}I.set(f,e,r,d,h)}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const Zh={kernelName:o.R,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,filter:filter}=t,{strides:l,dilations:d,pad:h,dimRoundingMode:f,inputShape:m}=r;Vl([c,filter],"depthwiseConv2DNativeBackpropInput");const y=o.yf.computeStrides(c.shape),x=o.yf.computeStrides(filter.shape),v=o.vd.computeConv2DInfo(m,filter.shape,l,d,h,f,!0),O=new o.dd(v.inShape,"float32"),w=O.values,[k,I,S]=O.strides,N=n.data.get(c.dataId).values,[j,T,C]=y,$=n.data.get(filter.dataId).values,[E,A,R]=x,{batchSize:F,filterHeight:D,filterWidth:_,inChannels:M,inHeight:z,inWidth:L,outChannels:P,outHeight:B,outWidth:W,strideHeight:U,strideWidth:V}=v,G=D-1-v.padInfo.top,H=_-1-v.padInfo.left,K=P/M;for(let b=0;b<F;++b)for(let e=0;e<M;++e)for(let t=0;t<z;++t){const n=t-G,r=Math.max(0,Math.ceil(n/U)),o=Math.min(B,(D+n)/U);for(let c=0;c<L;++c){const l=c-H,d=Math.max(0,Math.ceil(l/V)),h=Math.min(W,(_+l)/V);let f=0;for(let t=r;t<o;++t){const r=t*U-n;for(let n=d;n<h;++n){const o=j*b+T*t+C*n,c=E*(D-1-r)+A*(_-1-(n*V-l))+R*e;for(let t=0;t<K;++t){f+=N[o+(e*K+t)]*$[c+t]}}}w[k*b+I*t+S*c+e]=f}}return n.makeTensorInfo(O.shape,O.dtype,O.values)}};const Jh={kernelName:o.S,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,c=o.yf.sizeFromShape(r.shape),l=n.data.get(r.dataId).values,d=Object(o.Bd)([c,c],r.dtype),h=d.values;for(let i=0;i<l.length;i++)h[i*c+i]=l[i];const f=[...r.shape,...r.shape];return n.makeTensorInfo(f,d.dtype,d.values)}},Qh={kernelName:o.T,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:filter}=e,{strides:c,pad:l,dilations:d}=n,h=t,f=h.data.get(r.dataId).values,m=r.shape.length,y=h.data.get(filter.dataId).values,x=filter.shape.length,{batchSize:v,inHeight:O,inWidth:w,inChannels:k,outHeight:I,outWidth:S,padInfo:N,strideHeight:j,strideWidth:T,filterHeight:C,filterWidth:$,dilationHeight:E,dilationWidth:A,outShape:R}=o.vd.computeDilation2DInfo(r.shape,filter.shape,c,l,"NHWC",d),F=o.yf.sizeFromShape(R),D=R.length,_=o.yf.getArrayFromDType(r.dtype,F);for(let b=0;b<v;++b)for(let e=0;e<I;++e){const t=e*j-N.top;for(let n=0;n<S;++n){const c=n*T-N.left;for(let l=0;l<k;++l){let d=Number.MIN_SAFE_INTEGER;for(let e=0;e<C;++e){const n=t+e*E;if(n>=0&&n<O)for(let t=0;t<$;++t){const h=c+t*A;if(h>=0&&h<w){const c=o.yf.locToIndex([b,n,h,l],m,o.yf.computeStrides(r.shape)),v=o.yf.locToIndex([e,t,l],x,o.yf.computeStrides(filter.shape)),O=f[c]+y[v];O>d&&(d=O)}}}_[o.yf.locToIndex([b,e,n,l],D,o.yf.computeStrides(R))]=d}}}return{dataId:h.write(o.yf.toTypedArray(_,r.dtype),R,r.dtype),shape:R,dtype:r.dtype}}},ep={kernelName:o.U,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:filter,dy:c}=e,{strides:l,pad:d,dilations:h}=n,f=t,m=o.yf.toNestedArray(r.shape,f.data.get(r.dataId).values),y=o.yf.toNestedArray(filter.shape,f.data.get(filter.dataId).values),{batchSize:x,inHeight:v,inWidth:O,inChannels:w,outHeight:k,outWidth:I,padInfo:S,strideHeight:N,strideWidth:j,filterHeight:T,filterWidth:C,dilationHeight:$,dilationWidth:E,outShape:A}=o.vd.computeDilation2DInfo(r.shape,filter.shape,l,d,"NHWC",h);o.yf.assert(c.rank===A.length,(()=>`Error in ${o.U}, dy must have the same rank as output ${A.length}, but got ${c.rank}`));const R=o.yf.toNestedArray(A,f.data.get(c.dataId).values),F=o.yf.makeZerosNestedTypedArray(filter.shape,filter.dtype);for(let b=0;b<x;++b)for(let e=0;e<k;++e){const t=e*N-S.top;for(let n=0;n<I;++n){const r=n*j-S.left;for(let o=0;o<w;++o){let c=Number.MIN_SAFE_INTEGER,l=0,d=0;for(let e=0;e<T;++e){const n=t+e*$;if(n>=0&&n<v)for(let t=0;t<C;++t){const h=r+t*E;if(h>=0&&h<O){const r=m[b][n][h][o]+y[e][t][o];r>c&&(c=r,l=e,d=t)}}}F[l][d][o]+=R[b][e][n][o]}}}return{dataId:f.write(o.yf.toTypedArray(F,r.dtype),filter.shape,filter.dtype),shape:filter.shape,dtype:filter.dtype}}},tp={kernelName:o.V,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:filter,dy:c}=e,{strides:l,pad:d,dilations:h}=n,f=t,m=o.yf.toNestedArray(r.shape,f.data.get(r.dataId).values),y=o.yf.toNestedArray(filter.shape,f.data.get(filter.dataId).values),{batchSize:x,inHeight:v,inWidth:O,inChannels:w,outHeight:k,outWidth:I,padInfo:S,strideHeight:N,strideWidth:j,filterHeight:T,filterWidth:C,dilationHeight:$,dilationWidth:E,outShape:A}=o.vd.computeDilation2DInfo(r.shape,filter.shape,l,d,"NHWC",h);o.yf.assert(c.rank===A.length,(()=>`Error in ${o.V}, dy must have the same rank as output ${A.length}, but got ${c.rank}`));const R=o.yf.toNestedArray(A,f.data.get(c.dataId).values),F=o.yf.makeZerosNestedTypedArray(r.shape,r.dtype);for(let b=0;b<x;++b)for(let e=0;e<k;++e){const t=e*N-S.top;for(let n=0;n<I;++n){const r=n*j-S.left;for(let o=0;o<w;++o){let c=Number.MIN_SAFE_INTEGER,l=t<0?0:t,d=r<0?0:r;for(let e=0;e<T;++e){const n=t+e*$;if(n>=0&&n<v)for(let t=0;t<C;++t){const h=r+t*E;if(h>=0&&h<O){const r=m[b][n][h][o]+y[e][t][o];r>c&&(c=r,l=n,d=h)}}}F[b][l][d][o]+=R[b][e][n][o]}}}return{dataId:f.write(o.yf.toTypedArray(F,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},np=nd(((e,t)=>e*t)),ap=Id(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),sp=kd(o.Wb,np,ap),ip={kernelName:o.Wb,backendName:"cpu",kernelFunc:sp};function op(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r;let h;Vl(c,"sum"),h="bool"===c.dtype?Od({inputs:{x:c},backend:n,attrs:{dtype:"int32"}}):Zl({inputs:{x:c},backend:n});const f=h.shape.length,m=o.yf.parseAxisParam(l,h.shape),y=o.vd.getAxesPermutation(m,f);let x=m,v=h;null!=y&&(v=Wd({inputs:{x:h},backend:n,attrs:{perm:y}}),x=o.vd.getInnerMostAxes(x.length,f)),o.vd.assertAxesAreInnerMostDims("sum",x,v.shape.length);const[O,w]=o.vd.computeOutAndReduceShapes(v.shape,x);let k=yd(n,O,o.vd.upcastType(v.dtype,"int32"));const I=o.yf.sizeFromShape(w),S=n.data.get(k.dataId).values,N=n.data.get(v.dataId).values;for(let i=0;i<S.length;++i){const e=i*I;let t=0;for(let n=0;n<I;++n)t+=N[e+n];S[i]=t}if(d){const e=k;k=Cd({inputs:{x:k},backend:n,attrs:{shape:o.vd.expandShapeToKeepDim(k.shape,m)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(h),null!=y&&n.disposeIntermediateTensorInfo(v),k}const up={kernelName:o.Zc,backendName:"cpu",kernelFunc:op};const cp={kernelName:o.W,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:c}=r,l=t,{allDims:d,summedDims:h,idDims:f}=o.vd.decodeEinsumEquation(c,l.length);o.vd.checkEinsumDimSizes(d.length,f,l);const{path:path,steps:m}=o.vd.getEinsumComputePath(h,f),y=m.length;let x=null,v=d.length;const O=[];for(let i=0;i<y;++i){for(const e of m[i]){const{permutationIndices:t,expandDims:r}=o.vd.getEinsumPermutation(v,f[e]);let c;o.vd.isIdentityPermutation(t)?c=l[e]:(c=Wd({inputs:{x:l[e]},backend:n,attrs:{perm:t}}),O.push(c));const d=c.shape.slice();for(let e=0;e<r.length;++e)d.splice(r[e],0,1);o.yf.arraysEqual(c.shape,d)||(c=Cd({inputs:{x:c},backend:n,attrs:{shape:d}}),O.push(c)),null===x?x=c:(x=sp({inputs:{a:c,b:x},backend:n}),O.push(x))}i<y-1&&(path[i]>=0&&(x=op({inputs:{x:x},backend:n,attrs:{axis:path[i]-(d.length-v),keepDims:!1}}),O.push(x)),v--)}for(const e of O)e!==x&&n.disposeIntermediateTensorInfo(e);return x}};const lp={kernelName:o.Y,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:c}=t;Vl([r,c],"eluGrad");const l=new Float32Array(o.yf.sizeFromShape(c.shape)),d=n.data.get(c.dataId).values,h=n.data.get(r.dataId).values;for(let i=0;i<d.length;++i){const e=d[i];l[i]=e>=1?h[i]:h[i]*(e+1)}return n.makeTensorInfo(c.shape,"float32",l)}},dp=nd(((a,b)=>a===b?1:0)),hp=kd(o.Z,dp,null,"bool"),pp={kernelName:o.Z,backendName:"cpu",kernelFunc:hp},fp=o.vd.ERF_P,mp=o.vd.ERF_A1,bp=o.vd.ERF_A2,gp=o.vd.ERF_A3,yp=o.vd.ERF_A4,xp=o.vd.ERF_A5,vp=ql(o.ab,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+fp*n);return t*(1-((((xp*r+yp)*r+gp)*r+bp)*r+mp)*r*Math.exp(-n*n))})),Op={kernelName:o.ab,backendName:"cpu",kernelFunc:vp},wp=ld((e=>Math.exp(e))),kp=Kl(o.bb,wp,"float32"),Ip={kernelName:o.bb,backendName:"cpu",kernelFunc:kp};function Sp(e){const{inputs:t,backend:n,attrs:r}=e,{input:input}=t,{dim:c}=r,l=input.shape.length,d=input.shape.slice();let h=c;return c<0&&(o.yf.assert(-(l+1)<=c,(()=>`Axis must be in the interval [${-(l+1)}, ${l}]`)),h=l+c+1),d.splice(h,0,1),Cd({inputs:{x:input},backend:n,attrs:{shape:d}})}const Np={kernelName:o.cb,backendName:"cpu",kernelFunc:Sp},jp=ld((e=>Math.expm1(e))),Tp=Kl(o.db,jp),Cp={kernelName:o.db,backendName:"cpu",kernelFunc:Tp},$p=nd(((a,b)=>a/b)),Ep=kd(o.mc,$p),Ap={kernelName:o.mc,backendName:"cpu",kernelFunc:Ep},Rp=nd(((e,t)=>e-t)),Fp=Id(((e,t,n,r)=>({real:e-n,imag:t-r}))),Dp=kd(o.Yc,Rp,Fp),_p={kernelName:o.Yc,backendName:"cpu",kernelFunc:Dp};function Mp(input,e,t){const n=input.shape,r=n[0],c=n[1],l=t.data.get(input.dataId),d=l.complexTensorInfos.real,h=l.complexTensorInfos.imag,f=[r,c],m=o.yf.sizeFromShape(f),y=o.yf.getTypedArrayFromDType("float32",m),x=o.yf.getTypedArrayFromDType("float32",m);for(let b=0;b<r;b++){const n=mh({inputs:{x:d},backend:t,attrs:{begin:[b,0],size:[1,c]}}),i=mh({inputs:{x:h},backend:t,attrs:{begin:[b,0],size:[1,c]}}),input=bd({inputs:{real:n,imag:i},backend:t}),{real:r,imag:l}=zp(input,e,t),f=o.vd.mergeRealAndImagArrays(r,l);for(let e=0;e<c;e++){const t=o.vd.getComplexWithIndex(f,e);y[b*c+e]=t.real,x[b*c+e]=t.imag}t.disposeIntermediateTensorInfo(n),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(input)}const v=t.makeTensorInfo(f,"float32",y),O=t.makeTensorInfo(f,"float32",x),w=bd({inputs:{real:v,imag:O},backend:t});return t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(O),w}function zp(input,e,t){const n=o.yf.sizeFromShape(input.shape),r=t.data.get(input.dataId),c=t.data.get(r.complexTensorInfos.real.dataId).values,l=t.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((d=n)&d-1)){const r=Lp(c,l,n,e,t),d=[input.shape[0],input.shape[1]];if(e){const e=t.makeTensorInfo(d,"float32",r.real),c=t.makeTensorInfo(d,"float32",r.imag),l=t.makeTensorInfo([],"float32",o.yf.createScalarValue(n,"float32")),h=Zl({inputs:{x:l},backend:t}),f=Ap.kernelFunc({inputs:{a:e,b:l},backend:t}),m=Ap.kernelFunc({inputs:{a:c,b:h},backend:t}),y=t.data.get(f.dataId).values,x=t.data.get(m.dataId).values;return t.disposeIntermediateTensorInfo(e),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),{real:y,imag:x}}return r}{const t=function(data,e,t){const n=new Float32Array(2*e);for(let r=0;r<e;r++){let c=0,l=0;for(let n=0;n<e;n++){const d=o.vd.exponent(r*n,e,t),h=o.vd.getComplexWithIndex(data,n);c+=h.real*d.real-h.imag*d.imag,l+=h.real*d.imag+h.imag*d.real}t&&(c/=e,l/=e),o.vd.assignToTypedArray(n,c,l,r)}return n}(o.vd.mergeRealAndImagArrays(c,l),n,e);return o.vd.splitRealAndImagArrays(t)}var d}function Lp(e,t,n,r,c){if(1===n)return{real:e,imag:t};const data=o.vd.mergeRealAndImagArrays(e,t),l=n/2,d=o.vd.complexWithEvenIndex(data),h=d.real,f=d.imag,m=[h.length],y=c.makeTensorInfo(m,"float32",h),x=c.makeTensorInfo(m,"float32",f),v=bd({inputs:{real:y,imag:x},backend:c}),O=o.vd.complexWithOddIndex(data),w=O.real,k=O.imag,I=[w.length],S=c.makeTensorInfo(I,"float32",w),N=c.makeTensorInfo(I,"float32",k),j=bd({inputs:{real:S,imag:N},backend:c}),T=Lp(h,f,l,r,c),C=T.real,$=T.imag,E=[C.length],A=c.makeTensorInfo(E,"float32",C),R=c.makeTensorInfo(E,"float32",$),F=bd({inputs:{real:A,imag:R},backend:c}),D=Lp(w,k,l,r,c),_=D.real,M=D.imag,z=[_.length],L=c.makeTensorInfo(z,"float32",_),P=c.makeTensorInfo(z,"float32",M),B=bd({inputs:{real:L,imag:P},backend:c}),W=o.vd.exponents(n,r),U=[W.real.length],V=c.makeTensorInfo(U,"float32",W.real),G=c.makeTensorInfo(U,"float32",W.imag),H=bd({inputs:{real:V,imag:G},backend:c}),K=sp({inputs:{a:H,b:B},backend:c}),X=jd({inputs:{a:F,b:K},backend:c}),Y=Dp({inputs:{a:F,b:K},backend:c}),Z=xd({inputs:{input:X},backend:c}),J=xd({inputs:{input:Y},backend:c}),Q=Ch({inputs:{input:X},backend:c}),ee=Ch({inputs:{input:Y},backend:c}),te=Eh({inputs:[Z,J],backend:c,attrs:{axis:0}}),ne=Eh({inputs:[Q,ee],backend:c,attrs:{axis:0}}),re=c.data.get(te.dataId).values,ae=c.data.get(ne.dataId).values;return c.disposeIntermediateTensorInfo(y),c.disposeIntermediateTensorInfo(x),c.disposeIntermediateTensorInfo(v),c.disposeIntermediateTensorInfo(S),c.disposeIntermediateTensorInfo(N),c.disposeIntermediateTensorInfo(j),c.disposeIntermediateTensorInfo(A),c.disposeIntermediateTensorInfo(R),c.disposeIntermediateTensorInfo(F),c.disposeIntermediateTensorInfo(L),c.disposeIntermediateTensorInfo(P),c.disposeIntermediateTensorInfo(B),c.disposeIntermediateTensorInfo(V),c.disposeIntermediateTensorInfo(G),c.disposeIntermediateTensorInfo(H),c.disposeIntermediateTensorInfo(K),c.disposeIntermediateTensorInfo(X),c.disposeIntermediateTensorInfo(Y),c.disposeIntermediateTensorInfo(Z),c.disposeIntermediateTensorInfo(Q),c.disposeIntermediateTensorInfo(J),c.disposeIntermediateTensorInfo(ee),c.disposeIntermediateTensorInfo(te),c.disposeIntermediateTensorInfo(ne),{real:re,imag:ae}}const Pp={kernelName:o.eb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:input}=t,r=o.yf.sizeFromShape(input.shape),c=input.shape[input.shape.length-1],l=Cd({inputs:{x:input},backend:n,attrs:{shape:[r/c,c]}}),d=Mp(l,!1,n),h=Cd({inputs:{x:d},backend:n,attrs:{shape:input.shape}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),h}};function Bp(e){const{backend:t,attrs:n}=e,{shape:r,value:c,dtype:l}=n,d=l||o.yf.inferDtype(c),h=o.yf.getArrayFromDType(d,o.yf.sizeFromShape(r));return function(e,t,n){e.fill(t)}(h,c),t.makeTensorInfo(r,d,h)}const Wp={kernelName:o.fb,backendName:"cpu",kernelFunc:Bp};const Up={kernelName:o.gb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:image}=e,r=n,output=o.yf.getTypedArrayFromDType(image.dtype,o.yf.sizeFromShape(image.shape)),[c,l,d,h]=image.shape,f=r.data.get(image.dataId).values;for(let e=0;e<c;e++){const t=e*d*l*h;for(let e=0;e<l;e++){const n=e*(d*h);for(let col=0;col<d;col++){const e=col*h;for(let r=0;r<h;r++){const o=Math.round(d-col-1),c=t+n+e+r;let l=f[c];if(o>=0&&o<d){l=f[t+n+o*h+r]}output[c]=l}}}}return{dataId:r.write(output,image.shape,image.dtype),shape:image.shape,dtype:image.dtype}}},Vp=ld((e=>Math.floor(e))),Gp=Kl(o.hb,Vp),Hp={kernelName:o.hb,backendName:"cpu",kernelFunc:Gp},qp=nd(((a,b)=>Math.floor(a/b))),Kp=kd(o.ib,qp,null,"int32"),Xp={kernelName:o.ib,backendName:"cpu",kernelFunc:Kp};const Yp={kernelName:o.lb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,filter:filter,bias:c,preluActivationWeights:l}=t,{strides:d,pad:h,dataFormat:f,dilations:m,dimRoundingMode:y,activation:x,leakyreluAlpha:v}=r;let O=Rh({inputs:{x:o,filter:filter},backend:n,attrs:{strides:d,pad:h,dataFormat:f,dilations:m,dimRoundingMode:y}});if(c){const e=O;O=jd({inputs:{a:O,b:c},backend:n}),n.disposeIntermediateTensorInfo(e)}if(x){const e=O;O=md(n,O,x,l,v),n.disposeIntermediateTensorInfo(e)}return O}};const Zp={kernelName:o.mb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,filter:filter,bias:c,preluActivationWeights:l}=t,{strides:d,pad:h,dataFormat:f,dilations:m,dimRoundingMode:y,activation:x,leakyreluAlpha:v}=r;let O=Kh({inputs:{x:o,filter:filter},backend:n,attrs:{strides:d,pad:h,dataFormat:f,dilations:m,dimRoundingMode:y}});if(c){const e=O;O=jd({inputs:{a:O,b:c},backend:n}),n.disposeIntermediateTensorInfo(e)}if(x){const e=O;O=md(n,O,x,l,v),n.disposeIntermediateTensorInfo(e)}return O}};function Jp(e,t,n,r,c,l,d,h,f){const m=Object(o.Bd)([r,l],n);for(let i=0;i<r;i++){const n=[];let r=0;for(let t=0;t<c;t++){const o=e[i*c+t];r+=o*d[t],n.push(o)}if(r<0||r>=f/l)throw new Error(`Invalid indices: ${n} does not index into ${h}`);for(let e=0;e<l;e++)m.values[i*l+e]=t.get(...t.indexToLoc(r*l+e))}return m}const Qp={kernelName:o.nb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:c}=t,l=o.yf.sizeFromShape(r.shape),d=c.shape,h=d[d.length-1],[f,m,y,x]=o.vd.prepareAndValidate(r,c);if(0===m)return n.makeTensorInfo(f,r.dtype,[]);const v=Jp(n.data.get(c.dataId).values,n.bufferSync(r),r.dtype,m,h,y,x,r.shape,l);return n.makeTensorInfo(f,r.dtype,v.values)}};function ef(e,t,n){const r=Object(o.Bd)(n,e.dtype);for(let i=0;i<r.size;++i){const n=r.indexToLoc(i).slice(),o=n[0],c=n[2],l=t.locToIndex([o,c]);n[2]=t.values[l];const d=e.locToIndex(n);0<=d&&d<e.values.length&&(r.values[i]=e.values[d])}return r}const tf={kernelName:o.ob,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,indices:l}=t,{axis:d,batchDims:h}=r;Vl([c,l],"gatherV2");const f=o.yf.parseAxisParam(d,c.shape)[0],m=n.data.get(l.dataId).values,y=c.shape[f];for(let i=0;i<m.length;++i){const e=m[i];o.yf.assert(e<=y-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${y-1}]`))}let x=h;null==h&&(x=0);const v=o.yf.sizeFromShape(l.shape),O=o.vd.segment_util.collectGatherOpShapeInfo(c,l,f,x),w=Cd({inputs:{x:c},backend:n,attrs:{shape:[O.batchSize,O.outerSize,O.dimSize,O.sliceSize]}}),k=Cd({inputs:{x:l},backend:n,attrs:{shape:[O.batchSize,v/O.batchSize]}}),I=[O.batchSize,O.outerSize,v/O.batchSize,O.sliceSize],S=n.bufferSync(k),N=ef(n.bufferSync(w),S,I);return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(O.outputShape,N.dtype,N.values)}},nf=nd(((a,b)=>a>b?1:0)),rf=kd(o.pb,nf,null,"bool"),af={kernelName:o.pb,backendName:"cpu",kernelFunc:rf},sf=nd(((a,b)=>a>=b?1:0)),of=kd(o.qb,sf,null,"bool"),uf={kernelName:o.qb,backendName:"cpu",kernelFunc:of};const cf={kernelName:o.rb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:input}=t,r=o.yf.sizeFromShape(input.shape),c=input.shape[input.shape.length-1],l=Cd({inputs:{x:input},backend:n,attrs:{shape:[r/c,c]}}),d=Mp(l,!0,n),h=Cd({inputs:{x:d},backend:n,attrs:{shape:input.shape}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),h}},lf=ql(o.ub,(e=>Number.isFinite(e)?1:0),"bool"),df={kernelName:o.ub,backendName:"cpu",kernelFunc:lf},hf=ql(o.vb,(e=>Math.abs(e)===1/0?1:0),"bool"),pf={kernelName:o.vb,backendName:"cpu",kernelFunc:hf},ff=ql(o.wb,(e=>Number.isNaN(e)?1:0),"bool"),mf={kernelName:o.wb,backendName:"cpu",kernelFunc:ff},bf=nd(((a,b)=>a<b?1:0)),gf=kd(o.Bb,bf,null,"bool"),yf={kernelName:o.Bb,backendName:"cpu",kernelFunc:gf},xf=nd(((a,b)=>a<=b?1:0)),vf=kd(o.Cb,xf,null,"bool"),Of={kernelName:o.Cb,backendName:"cpu",kernelFunc:vf};function wf(e,t,n){const r=(t-e)/(n-1),c=o.yf.makeZerosTypedArray(n,"float32");c[0]=e;for(let i=1;i<c.length;i++)c[i]=c[i-1]+r;return c}const kf={kernelName:o.Db,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:o,num:c}=n,l=wf(r,o,c);return t.makeTensorInfo([l.length],"float32",l)}},If=ld((e=>Math.log(e))),Sf=Kl(o.Eb,If),Nf={kernelName:o.Eb,backendName:"cpu",kernelFunc:Sf},jf=ql(o.Fb,(e=>Math.log1p(e))),Tf={kernelName:o.Fb,backendName:"cpu",kernelFunc:jf},Cf=nd(((a,b)=>a&&b)),$f=kd(o.Gb,Cf,null,"bool"),Ef={kernelName:o.Gb,backendName:"cpu",kernelFunc:$f},Af=ql(o.Hb,(e=>e?0:1),"bool"),Rf={kernelName:o.Hb,backendName:"cpu",kernelFunc:Af},Ff=nd(((a,b)=>a||b)),Df=kd(o.Ib,Ff,null,"bool"),_f={kernelName:o.Ib,backendName:"cpu",kernelFunc:Df};const Mf={kernelName:o.yb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{depthRadius:l,bias:d,alpha:h,beta:f}=r;Vl(c,"LRN");const m=c.shape[3],y=m-1,x=n.data.get(c.dataId).values,v=o.yf.sizeFromShape(c.shape),O=new Float32Array(v);function w(e){const t=e%m;let n=e-t+Math.max(0,t-l);const r=e-t+Math.min(t+l,y);let o=0;for(;n<=r;n++){const e=x[n];o+=e*e}return o}for(let e=0;e<v;e++){const t=w(e),n=x[e]*Math.pow(d+h*t,-f);O[e]=n}return n.makeTensorInfo(c.shape,c.dtype,O)}};const zf={kernelName:o.zb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,y:l,dy:d}=t,{depthRadius:h,bias:f,alpha:m,beta:y}=r;Vl(d,"LRNGrad");const x=o.yf.sizeFromShape(d.shape),v=d.shape[3],O=n.data.get(d.dataId).values,w=n.data.get(c.dataId).values,k=n.data.get(l.dataId).values,I=new Float32Array(x),S=x;for(let e=0;e<S;e++){const t=e%v,n=e-t+Math.max(0,t-h),r=e-t+Math.min(v,t+h+1);let o=0;for(let e=n;e<r;e++)o+=Math.pow(w[e],2);o=m*o+f;for(let t=n;t<r;t++){let n=-2*m*y*w[t]*k[e]/o;e===t&&(n+=Math.pow(o,-y)),n*=O[e],I[t]+=n}}return n.makeTensorInfo(d.shape,c.dtype,I)}};function Lf(e,t,n,r){const c=o.yf.getTypedArrayFromDType(r,o.yf.sizeFromShape(n));for(let i=0;i<c.length;++i){const n=i*t;let r=e[n];for(let o=0;o<t;++o){const t=e[n+o];(Number.isNaN(t)||t>r)&&(r=t)}c[i]=r}return c}function Pf(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{reductionIndices:l,keepDims:d}=r,h=n;let f=c.shape;const m=f.length,y=o.yf.parseAxisParam(l,f);let x=y;const v=o.vd.getAxesPermutation(x,m);let O=h.data.get(c.dataId).values;if(null!=v){const e=new Array(m);for(let i=0;i<e.length;i++)e[i]=f[v[i]];O=Bd(O,f,c.dtype,v,e),x=o.vd.getInnerMostAxes(x.length,m),f=e}Vl(c,"max"),o.vd.assertAxesAreInnerMostDims("max",x,m);const[w,k]=o.vd.computeOutAndReduceShapes(f,x),I=Lf(O,o.yf.sizeFromShape(k),w,c.dtype),S=h.write(I,w,c.dtype);let N=w;if(d){N=o.vd.expandShapeToKeepDim(w,y)}return{dataId:S,shape:N,dtype:c.dtype}}const Bf={kernelName:o.Jb,backendName:"cpu",kernelFunc:Pf},Wf=nd(((e,t)=>Math.max(e,t))),Uf=kd(o.Pb,Wf),Vf={kernelName:o.Pb,backendName:"cpu",kernelFunc:Uf};const Gf={kernelName:o.Kb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t;Vl(c,"maxPool");const{filterSize:l,strides:d,pad:h,dimRoundingMode:f}=r;o.yf.assert(o.vd.eitherStridesOrDilationsAreOne(d,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${d} and dilations '1'`));const m=o.vd.computePool2DInfo(c.shape,l,d,1,h,f);let y;if(1===m.filterWidth&&1===m.filterHeight&&o.yf.arraysEqual(m.inShape,m.outShape))y=Zl({inputs:{x:c},backend:n});else{const e=n.data.get(c.dataId).values,t=o.yf.computeStrides(c.shape),r=ih(e,c.shape,c.dtype,t,m,"max");y=n.makeTensorInfo(m.outShape,c.dtype,r.values)}return y}};const Hf={kernelName:o.Lb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{filterSize:l,strides:d,pad:h,dimRoundingMode:f,dataFormat:m}=r;Vl(c,"maxPool3d");const y=o.vd.computePool3DInfo(c.shape,l,d,1,h,f,m),x=uh(n.data.get(c.dataId).values,c.shape,c.dtype,o.yf.computeStrides(c.shape),y,"max");return n.makeTensorInfo(x.shape,"float32",x.values)}};const qf={kernelName:o.Mb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,input:input}=t,{filterSize:l,strides:d,pad:h,dimRoundingMode:f}=r;Vl([c,input],"maxPool3DGrad");const m=o.vd.computePool3DInfo(input.shape,l,d,1,h,f),y=function(e,t){const n=Object(o.Bd)(t.outShape,"int32"),r=t.strideDepth,c=t.strideHeight,l=t.strideWidth,d=t.dilationDepth,h=t.dilationHeight,f=t.dilationWidth,m=t.effectiveFilterDepth,y=t.effectiveFilterHeight,x=t.effectiveFilterWidth,v=t.padInfo.front,O=t.padInfo.top,w=t.padInfo.left;for(let o=0;o<t.batchSize;++o)for(let k=0;k<t.inChannels;++k)for(let I=0;I<t.outDepth;++I){const S=I*r-v;let N=S;for(;N<0;)N+=d;const j=Math.min(t.inDepth,m+S);for(let r=0;r<t.outHeight;++r){const m=r*c-O;let v=m;for(;v<0;)v+=h;const T=Math.min(t.inHeight,y+m);for(let c=0;c<t.outWidth;++c){const O=c*l-w;let C=O;for(;C<0;)C+=f;const $=Math.min(t.inWidth,x+O);let E=Number.NEGATIVE_INFINITY,A=-1;for(let t=N;t<j;t+=d){const n=t-S;for(let r=v;r<T;r+=h){const c=r-m;for(let l=C;l<$;l+=f){const d=l-O,h=e.get(o,t,r,l,k);h>=E&&(E=h,A=n*y*x+c*y+d)}}}n.set(A,o,I,r,c,k)}}}return n}(n.bufferSync(input),m),x=m.strideDepth,v=m.strideHeight,O=m.strideWidth,w=m.dilationDepth,k=m.dilationHeight,I=m.dilationWidth,S=m.effectiveFilterDepth,N=m.effectiveFilterHeight,j=m.effectiveFilterWidth,T=S-1-m.padInfo.front,C=j-1-m.padInfo.left,$=N-1-m.padInfo.top,E=Object(o.Bd)(input.shape,"float32"),A=n.bufferSync(c);for(let e=0;e<m.batchSize;++e)for(let t=0;t<m.inChannels;++t)for(let n=0;n<m.inDepth;++n)for(let r=0;r<m.inHeight;++r)for(let o=0;o<m.inWidth;++o){const c=n-T,l=r-$,d=o-C;let h=0;for(let n=0;n<S;n+=w){const r=(c+n)/x;if(!(r<0||r>=m.outDepth||Math.floor(r)!==r))for(let o=0;o<N;o+=k){const c=(l+o)/v;if(!(c<0||c>=m.outHeight||Math.floor(c)!==c))for(let l=0;l<j;l+=I){const f=(d+l)/O;if(f<0||f>=m.outWidth||Math.floor(f)!==f)continue;const mask=S*N*j-1-y.get(e,r,c,f,t)===n*N*j+o*j+l?1:0;if(0===mask)continue;h+=A.get(e,r,c,f,t)*mask}}}E.set(h,e,n,r,o,t)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}};const Kf={kernelName:o.Nb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,input:input,output:output}=t,l=input;Vl([input,output],"maxPoolGrad");const{filterSize:d,strides:h,pad:f,dimRoundingMode:m}=r,y=o.vd.computePool2DInfo(l.shape,d,h,1,f,m),x=n.data.get(l.dataId).values,v=Object(o.Bd)(y.outShape,l.dtype,oh(x,l.shape,l.dtype,y).values),O=y.strideHeight,w=y.strideWidth,k=y.dilationHeight,I=y.dilationWidth,S=y.effectiveFilterHeight,N=y.effectiveFilterWidth,j=N-1-y.padInfo.left,T=S-1-y.padInfo.top,C=Object(o.Bd)(l.shape,"float32"),$=n.data.get(c.dataId).values,E=Object(o.Bd)(c.shape,"float32",$);for(let b=0;b<y.batchSize;++b)for(let e=0;e<y.inChannels;++e)for(let t=0;t<y.inHeight;++t)for(let n=0;n<y.inWidth;++n){const r=t-T,o=n-j;let c=0;for(let t=0;t<S;t+=k){const n=(r+t)/O;if(!(n<0||n>=y.outHeight||Math.floor(n)!==n))for(let r=0;r<N;r+=I){const l=(o+r)/w;if(l<0||l>=y.outWidth||Math.floor(l)!==l)continue;const mask=S*N-1-v.get(b,n,l,e)===t*N+r?1:0;if(0===mask)continue;c+=E.get(b,n,l,e)*mask}}C.set(c,b,t,n,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const Xf={kernelName:o.Ob,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:c,strides:l,pad:d,includeBatchInIndex:h}=t,f=n;Vl(r,"MaxPoolWithArgmax");const m=f.data.get(r.dataId).values,y=o.vd.computePool2DInfo(r.shape,c,l,[1,1],d),[x,v]=function(e,t,n,r,c){const l=ih(e,0,n,o.yf.computeStrides(t),c,"max"),d=oh(e,t,n,c,!0,r);return[l.values,d.values]}(m,r.shape,r.dtype,h,y),O=f.write(x,y.outShape,r.dtype),w=f.write(v,y.outShape,r.dtype);return[{dataId:O,shape:y.outShape,dtype:r.dtype},{dataId:w,shape:y.outShape,dtype:"int32"}]}};const Yf={kernelName:o.Qb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r,h=o.yf.parseAxisParam(l,c.shape),f=o.vd.computeOutAndReduceShapes(c.shape,h)[1],m=o.yf.sizeFromShape(f),y=[],x=n.makeTensorInfo([],"float32",new Float32Array([m]));y.push(x);const v=Od({inputs:{x:c},backend:n,attrs:{dtype:"float32"}});y.push(v);const O=Ep({inputs:{a:v,b:x},backend:n});y.push(O);const w=op({inputs:{x:O},backend:n,attrs:{axis:l,keepDims:d}});return y.forEach((e=>n.disposeIntermediateTensorInfo(e))),w}};const Zf={kernelName:o.Rb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r;Vl(c,"min");const h=o.yf.parseAxisParam(l,c.shape);let f=h;const m=o.vd.getAxesPermutation(f,c.shape.length);let y=c;null!=m&&(y=Wd({inputs:{x:c},backend:n,attrs:{perm:m}}),f=o.vd.getInnerMostAxes(f.length,c.shape.length)),o.vd.assertAxesAreInnerMostDims("min",f,y.shape.length);const[x,v]=o.vd.computeOutAndReduceShapes(y.shape,f),O=o.yf.sizeFromShape(v),w=o.yf.makeZerosTypedArray(o.yf.sizeFromShape(x),y.dtype),k=n.data.get(y.dataId).values;for(let i=0;i<w.length;++i){const e=i*O;let t=k[e];for(let n=0;n<O;++n){const r=k[e+n];(Number.isNaN(r)||r<t)&&(t=r)}w[i]=t}null!=m&&n.disposeIntermediateTensorInfo(y);const I=n.makeTensorInfo(x,y.dtype,w);if(d){const e=Cd({inputs:{x:I},backend:n,attrs:{shape:o.vd.expandShapeToKeepDim(x,h)}});return n.disposeIntermediateTensorInfo(I),e}return I}},Jf=nd(((e,t)=>Math.min(e,t))),Qf=kd(o.Sb,Jf),tm={kernelName:o.Sb,backendName:"cpu",kernelFunc:Qf};const nm={kernelName:o.Tb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{paddings:l,mode:d}=r;Vl(c,"mirrorPad");const h=l.map(((p,i)=>p[0]+c.shape[i]+p[1])),f=l.map((p=>p[0])),m=l.map(((p,i)=>p[0]+c.shape[i])),y="reflect"===d?0:1,x=n.data.get(c.dataId).values,v=c.shape.length,O=o.yf.computeStrides(c.shape),w=o.yf.sizeFromShape(h),k=h.length,I=o.yf.computeStrides(h),S=o.yf.getTypedArrayFromDType(c.dtype,w);for(let i=0;i<w;i++){let e=o.yf.indexToLoc(i,k,I);for(let i=0;i<k;i++)e[i]<f[i]?e[i]=2*f[i]-e[i]-y:e[i]>=m[i]&&(e[i]=2*(m[i]-1)-e[i]+y);e=e.map(((e,i)=>e-f[i]));const t=o.yf.locToIndex(e,v,O);S[i]=x[t]}return{dataId:n.write(S,h,c.dtype),shape:h,dtype:c.dtype}}},rm=nd(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),am=kd(o.Ub,rm),sm={kernelName:o.Ub,backendName:"cpu",kernelFunc:am};var im=n(1315);function om(e){const{inputs:t,backend:n,attrs:r}=e,{logits:c}=t,{dim:l}=r,d=c.shape.length;let h=l;if(-1===h&&(h=d-1),h!==d-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${d} and dim was ${h}`);const f=o.yf.parseAxisParam([h],c.shape),m=Pf({inputs:{x:c},backend:n,attrs:{reductionIndices:f,keepDims:!1}}),y=o.vd.expandShapeToKeepDim(m.shape,f),x=Cd({inputs:{x:m},backend:n,attrs:{shape:y}}),a=Dp({inputs:{a:c,b:x},backend:n}),b=kp({inputs:{x:a},backend:n}),v=op({inputs:{x:b},backend:n,attrs:{axis:f,keepDims:!1}}),O=Cd({inputs:{x:v},backend:n,attrs:{shape:y}}),w=Ep({inputs:{a:b,b:O},backend:n});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(O),w}const um={kernelName:o.Hc,backendName:"cpu",kernelFunc:om};const cm={kernelName:o.Vb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:c}=t,{numSamples:l,seed:d,normalized:h}=r;Vl(c,"multinomial");const f=h?c:om({inputs:{logits:c},backend:n,attrs:{dim:-1}}),m=f.shape[0],y=f.shape[1],x=n.data.get(f.dataId).values,v=[m,l],O=o.yf.makeZerosTypedArray(o.yf.sizeFromShape(v),"int32");for(let b=0;b<m;++b){const e=b*y,t=new Float32Array(y-1);t[0]=x[e];for(let n=1;n<t.length;++n)t[n]=t[n-1]+x[e+n];const n=im.alea(d.toString()),r=b*l;for(let e=0;e<l;++e){const o=n();O[r+e]=t.length;for(let n=0;n<t.length;n++)if(o<t[n]){O[r+e]=n;break}}}return h||n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(v,"int32",O)}};function lm(e,t,n){const r=o.yf.createScalarValue(-1,n);return np([],t,r,e,n)}const dm={kernelName:o.Xb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;Vl(r,"neg");const o=n.data.get(r.dataId).values,[c,l]=lm(o,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,c)}},hm=o.ke.nonMaxSuppressionV3Impl;const pm={kernelName:o.Yb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:o,scores:c}=t,{maxOutputSize:l,iouThreshold:d,scoreThreshold:h}=r;Vl(o,"NonMaxSuppression");const f=n.data.get(o.dataId).values,m=n.data.get(c.dataId).values,{selectedIndices:y}=hm(f,m,l,d,h);return n.makeTensorInfo([y.length],"int32",new Int32Array(y))}},fm=o.ke.nonMaxSuppressionV4Impl;const mm={kernelName:o.Zb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:o,scores:c}=t,{maxOutputSize:l,iouThreshold:d,scoreThreshold:h,padToMaxOutputSize:f}=r;Vl(o,"NonMaxSuppressionPadded");const m=n.data.get(o.dataId).values,y=n.data.get(c.dataId).values,{selectedIndices:x,validOutputs:v}=fm(m,y,l,d,h,f);return[n.makeTensorInfo([x.length],"int32",new Int32Array(x)),n.makeTensorInfo([],"int32",new Int32Array([v]))]}},bm=o.ke.nonMaxSuppressionV5Impl;const gm={kernelName:o.ac,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:o,scores:c}=t,{maxOutputSize:l,iouThreshold:d,scoreThreshold:h,softNmsSigma:f}=r;Vl(o,"NonMaxSuppressionWithScore");const m=n.data.get(o.dataId).values,y=n.data.get(c.dataId).values,x=l,v=d,O=h,w=f,{selectedIndices:k,selectedScores:I}=bm(m,y,x,v,O,w);return[n.makeTensorInfo([k.length],"int32",new Int32Array(k)),n.makeTensorInfo([I.length],"float32",new Float32Array(I))]}},ym=nd(((a,b)=>a!==b?1:0)),xm=kd(o.bc,ym,null,"bool"),vm={kernelName:o.bc,backendName:"cpu",kernelFunc:xm};const Om={kernelName:o.cc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:c}=t,{depth:l,onValue:d,offValue:h}=r;Vl(c,"oneHot");const f=o.yf.sizeFromShape(c.shape),m=new Float32Array(f*l);m.fill(h);const y=n.data.get(c.dataId).values;for(let e=0;e<f;++e)y[e]>=0&&y[e]<l&&(m[e*l+y[e]]=d);return n.makeTensorInfo([...c.shape,l],"int32",m)}};function wm(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=xd({inputs:{input:r},backend:n}),t=wm({inputs:{x:e},backend:n}),o=Ch({inputs:{input:r},backend:n}),i=wm({inputs:{x:o},backend:n}),c=bd({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}return Bp({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const km={kernelName:o.ld,backendName:"cpu",kernelFunc:wm};const Im={kernelName:o.dc,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:o}=n;if("string"===o.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===o.dtype){const t=xd({inputs:{input:o},backend:r}),n=e({inputs:{x:t},backend:r}),c=Ch({inputs:{input:o},backend:r}),i=wm({inputs:{x:c},backend:r}),l=bd({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(i),l}return Bp({backend:r,attrs:{shape:o.shape,value:1,dtype:o.dtype}})}};function Sm(e){const{inputs:t,backend:n,attrs:r}=e,{axis:c}=r;if(1===t.length)return Sp({inputs:{input:t[0]},backend:n,attrs:{dim:c}});const l=t[0].shape,d=t[0].dtype;t.forEach((e=>{o.yf.assertShapesMatch(l,e.shape,"All tensors passed to stack must have matching shapes"),o.yf.assert(d===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const h=[],f=Eh({inputs:t.map((e=>{const t=Sp({inputs:{input:e},backend:n,attrs:{dim:c}});return h.push(t),t})),backend:n,attrs:{axis:c}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const Nm={kernelName:o.fc,backendName:"cpu",kernelFunc:Sm};const jm={kernelName:o.gc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{paddings:l,constantValue:d}=r;Vl(c,"pad");const h=l.map(((p,i)=>p[0]+c.shape[i]+p[1])),f=l.map((p=>p[0])),m=n.data.get(c.dataId).values,y=o.yf.sizeFromShape(c.shape),x=c.shape.length,v=o.yf.computeStrides(c.shape),O=o.yf.sizeFromShape(h),w=h.length,k=o.yf.computeStrides(h),I=o.yf.getTypedArrayFromDType(c.dtype,O);0!==d&&I.fill(d);for(let i=0;i<y;i++){const e=o.yf.indexToLoc(i,x,v).map(((e,i)=>e+f[i]));I[o.yf.locToIndex(e,w,k)]=m[i]}return{dataId:n.write(I,h,c.dtype),shape:h,dtype:c.dtype}}},Tm=nd(((a,b)=>Math.pow(a,b))),Cm=kd(o.hc,Tm),$m={kernelName:o.hc,backendName:"cpu",kernelFunc:Cm};function Em(e,t,n,r){const[c,l]=o.vd.computeOutAndReduceShapes(e,r),d=Object(o.xf)(t,"int32"),h=o.yf.makeZerosTypedArray(o.yf.sizeFromShape(c),d),f=o.yf.sizeFromShape(l);for(let i=0;i<h.length;++i){const e=i*f;let t=1;for(let r=0;r<f;++r)t*=n[e+r];h[i]=t}return{outVals:h,outShape:c,outDtype:d}}const Am={kernelName:o.jc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r;Vl(c,"prod");const h=c.shape.length,f=o.yf.parseAxisParam(l,c.shape),m=o.vd.getAxesPermutation(f,h);let y=f,x=c;const v=[];null!=m&&(x=Wd({inputs:{x:c},backend:n,attrs:{perm:m}}),v.push(x),y=o.vd.getInnerMostAxes(y.length,h));const O=n.data.get(x.dataId).values,{outVals:w,outShape:k,outDtype:I}=Em(x.shape,x.dtype,O,y);let S=k;return d&&(S=o.vd.expandShapeToKeepDim(k,f)),v.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(S,I,w)}};function Rm(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return o.yf.makeZerosTypedArray(0,r);const c=Math.abs(Math.ceil((t-e)/n)),l=o.yf.makeZerosTypedArray(c,r);t<e&&1===n&&(n=-1),l[0]=e;for(let i=1;i<l.length;i++)l[i]=l[i-1]+n;return l}const Fm={kernelName:o.kc,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:o,dtype:c,step:l}=n,d=Rm(r,o,l,c);return t.makeTensorInfo([d.length],c,d)}},Dm=ql(o.nc,(e=>1/e)),_m={kernelName:o.nc,backendName:"cpu",kernelFunc:Dm};const Mm={kernelName:o.rc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:c}=t,{alignCorners:l,halfPixelCenters:d,size:h}=r;Vl(c,"resizeBilinear");const f=o.yf.computeStrides(c.shape),[m,y]=h,[x,v,O,w]=c.shape,k=n.data.get(c.dataId).values,I=new Float32Array(o.yf.sizeFromShape([x,m,y,w])),S=[l&&m>1?v-1:v,l&&y>1?O-1:O],N=[l&&m>1?m-1:m,l&&y>1?y-1:y];let j=0;const T=S[0]/N[0],C=S[1]/N[1];for(let b=0;b<x;b++)for(let e=0;e<m;e++){let t;t=d?T*(e+.5)-.5:T*e;const n=Math.max(0,Math.floor(t)),r=t-n,o=Math.min(v-1,Math.ceil(t)),c=b*f[0]+n*f[1],l=b*f[0]+o*f[1];for(let e=0;e<y;e++){let t;t=d?C*(e+.5)-.5:C*e;const n=Math.max(0,Math.floor(t)),o=t-n,h=Math.min(O-1,Math.ceil(t)),m=c+n*f[2],y=l+n*f[2],x=c+h*f[2],v=l+h*f[2];for(let e=0;e<w;e++){const t=k[m+e],n=k[y+e],c=t+(k[x+e]-t)*o,l=c+(n+(k[v+e]-n)*o-c)*r;I[j++]=l}}}return n.makeTensorInfo([x,m,y,w],"float32",I)}};const zm={kernelName:o.sc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:c,dy:l}=t,{alignCorners:d}=r;Vl([l,c],"resizeBilinearGrad");const h=o.yf.computeStrides(c.shape),[f,m,y,x]=c.shape,[,v,O]=l.shape,output=new Float32Array(f*m*y*x),w=[d&&v>1?m-1:m,d&&O>1?y-1:y],k=[d&&v>1?v-1:v,d&&O>1?O-1:O],I=w[0]/k[0],S=w[1]/k[1],N=n.data.get(l.dataId).values;let j=0;for(let b=0;b<f;b++){const e=b*h[0];for(let t=0;t<v;t++){const n=t*I,r=Math.floor(n),o=Math.min(Math.ceil(n),m-1),c=e+r*h[1],l=e+o*h[1],d=n-r,f=1-d;for(let e=0;e<O;e++){const t=e*S,n=Math.floor(t),r=Math.min(Math.ceil(t),y-1),o=t-n,m=1-o,v=c+n*h[2],O=c+r*h[2],w=l+n*h[2],k=l+r*h[2],I=f*m,T=f*o,C=d*m,$=d*o;for(let e=0;e<x;e++){const t=N[j++];output[v+e]+=t*I,output[O+e]+=t*T,output[w+e]+=t*C,output[k+e]+=t*$}}}}return n.makeTensorInfo([f,y,m,x],"float32",output)}};const Lm={kernelName:o.tc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:c}=t,{alignCorners:l,halfPixelCenters:d,size:h}=r;Vl(c,"resizeNearestNeighbor");const f=o.yf.computeStrides(c.shape),[m,y]=h,[x,v,O,w]=c.shape,k=n.data.get(c.dataId).values,output=new Float32Array(x*m*y*w),I=[l&&m>1?v-1:v,l&&y>1?O-1:O],S=[l&&m>1?m-1:m,l&&y>1?y-1:y],N=I[0]/S[0],j=I[1]/S[1];let T=0;for(let b=0;b<x;b++){const e=b*f[0];for(let t=0;t<m;t++){const n=d?N*(t+.5):N*t;let r=Math.min(v-1,l?Math.round(n):Math.floor(n));d&&(r=Math.max(0,r));const o=e+r*f[1];for(let e=0;e<y;e++){const t=d?j*(e+.5):j*e;let n=Math.min(O-1,l?Math.round(t):Math.floor(t));d&&(n=Math.max(0,n));const r=o+n*f[2];for(let e=0;e<w;e++){const t=k[r+e];output[T++]=t}}}}return n.makeTensorInfo([x,m,y,w],c.dtype,output)}};const Pm={kernelName:o.uc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:c,dy:l}=t,{alignCorners:d}=r;Vl([l,c],"resizeNearestNeighborGrad");const h=o.yf.computeStrides(c.shape),f=o.yf.computeStrides(l.shape),[m,y,x,v]=c.shape,[,O,w]=l.shape,output=new Float32Array(m*y*x*v),k=n.data.get(l.dataId).values,I=[d&&O>1?y-1:y,d&&w>1?x-1:x],S=[d&&O>1?O-1:O,d&&w>1?w-1:w],N=I[0]/S[0],j=I[1]/S[1],T=1/N,C=1/j,$=2*Math.ceil(T)+2,E=2*Math.ceil(C)+2;for(let b=0;b<m;b++){const e=b*h[0];for(let t=0;t<y;t++){const n=e+t*h[1],r=Math.floor(t*T),o=Math.floor(r-$/2);for(let r=0;r<x;r++){const c=n+r*h[2],l=Math.floor(r*C),m=Math.floor(l-E/2);for(let n=0;n<v;n++){let l=0;for(let c=0;c<$;c++){const h=c+o;if(h<0||h>=O)continue;const v=e+h*f[1],I=h*N;if(t===Math.min(y-1,d?Math.round(I):Math.floor(I)))for(let e=0;e<E;e++){const t=e+m;if(t<0||t>=w)continue;const o=v+t*f[2],c=t*j;r===Math.min(x-1,d?Math.round(c):Math.floor(c))&&(l+=k[o+n])}}output[c+n]=l}}}}return n.makeTensorInfo(c.shape,c.dtype,output)}};const Bm={kernelName:o.vc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{dims:l}=r;Vl(c,"reverse");const d=c.shape.length,h=o.yf.parseAxisParam(l,c.shape);if(0===d)return Zl({inputs:{x:c},backend:n});const f=new o.dd(c.shape,c.dtype),m=n.bufferSync(c);for(let i=0;i<f.size;i++){const e=f.indexToLoc(i),t=e.slice();h.forEach((e=>t[e]=c.shape[e]-1-t[e])),f.set(m.get(...t),...e)}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Wm={kernelName:o.wc,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:image}=e,{radians:r,fillValue:c,center:l}=t,d=n,output=o.yf.getTypedArrayFromDType(image.dtype,o.yf.sizeFromShape(image.shape)),[h,f,m,y]=image.shape,[x,v]=o.vd.getImageCenter(l,f,m),O=Math.sin(r),w=Math.cos(r),k=d.data.get(image.dataId).values;for(let e=0;e<h;e++){const t=e*m*f*y;for(let e=0;e<f;e++){const n=e*(m*y);for(let col=0;col<m;col++){const r=col*y;for(let o=0;o<y;o++){const l=[h,e,col,o],d=l[2],I=l[1];let S=(d-x)*w-(I-v)*O,N=(d-x)*O+(I-v)*w;S=Math.round(S+x),N=Math.round(N+v);let j=c;if("number"!=typeof c&&(j=3===o?255:c[o]),S>=0&&S<m&&N>=0&&N<f){j=k[t+N*(m*y)+S*y+o]}output[t+n+r+o]=j}}}}return{dataId:d.write(output,image.shape,image.dtype),shape:image.shape,dtype:image.dtype}}},Um=ql(o.xc,(e=>{const base=Math.floor(e);return e-base<.5?Math.floor(e):e-base>.5?Math.ceil(e):base%2==0?base:base+1})),Vm={kernelName:o.xc,backendName:"cpu",kernelFunc:Um},Gm=ld((e=>1/Math.sqrt(e))),Hm=Kl(o.yc,Gm),qm={kernelName:o.yc,backendName:"cpu",kernelFunc:Hm};function Km(e,t,n,r,c,l,d,h,f,m){const y=[r/c,c],x=e.values,v=t.values;if(0===r)return Object(o.Bd)(n,t.dtype);const O=Object(o.Bd)(y,t.dtype);O.values.fill(f);for(let i=0;i<l;i++){const e=[];let o=0;for(let t=0;t<d;t++){const n=x[i*d+t];e.push(n),o+=n*h[t]}if(o<0||o>=r/c)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let e=0;e<c;e++)m?O.values[o*c+e]+=v[i*c+e]:O.values[o*c+e]=0===t.rank?v[0]:v[i*c+e]}return O}const Xm={kernelName:o.zc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:c,updates:l}=t,{shape:d}=r,{sliceRank:h,numUpdates:f,sliceSize:m,strides:y,outputSize:x}=o.vd.calculateShapes(l,c,d),v=Km(n.bufferSync(c),n.bufferSync(l),d,x,m,f,h,y,0,!0);return n.makeTensorInfo(d,v.dtype,v.values)}};const Ym={kernelName:o.Ac,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:c,e:l}=t;Vl([r,c,l],"select");const d=r.shape.length,h=n.data.get(r.dataId).values,f=n.data.get(c.dataId).values,m=n.data.get(l.dataId).values,y=Object(o.xf)(c.dtype,l.dtype),x=o.yf.makeZerosTypedArray(o.yf.sizeFromShape(c.shape),y);let v=0;const O=0===d||d>1||1===c.shape.length?1:o.yf.sizeFromShape(c.shape.slice(1));for(let i=0;i<h.length;i++)for(let e=0;e<O;e++)1===h[i]?x[v++]=f[i]:x[v++]=m[i];return n.makeTensorInfo(c.shape,y,x)}},Zm=o.vd.SELU_SCALEALPHA,Jm=o.vd.SELU_SCALE,Qm=ql(o.Bc,(e=>e>=0?Jm*e:Zm*(Math.exp(e)-1))),eb={kernelName:o.Bc,backendName:"cpu",kernelFunc:Qm},tb=ql(o.Dc,(e=>e<0?-1:e>0?1:0)),nb={kernelName:o.Dc,backendName:"cpu",kernelFunc:tb},rb=ql(o.Ec,(e=>Math.sin(e))),ab={kernelName:o.Ec,backendName:"cpu",kernelFunc:rb},sb=ql(o.Fc,(e=>Math.sinh(e))),ib={kernelName:o.Fc,backendName:"cpu",kernelFunc:sb},ob=Math.log(1.1920928955078125e-7)+2,ub=ql(o.Ic,(e=>{const t=e>-ob,n=e<ob,r=Math.exp(e);let o;return o=n?r:t?e:Math.log(1+r),o})),cb={kernelName:o.Ic,backendName:"cpu",kernelFunc:ub};const lb={kernelName:o.Jc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{blockShape:l,paddings:d}=r;Vl([c],"spaceToBatchND");const h=o.yf.sizeFromShape(l),f=[[0,0]];f.push(...d);for(let i=1+l.length;i<c.shape.length;++i)f.push([0,0]);const m=jm.kernelFunc({inputs:{x:c},backend:n,attrs:{paddings:f,constantValue:0}}),y=o.vd.getReshaped(m.shape,l,h,!1),x=o.vd.getPermuted(y.length,l.length,!1),v=o.vd.getReshapedPermuted(m.shape,l,h,!1),O=Cd({inputs:{x:m},backend:n,attrs:{shape:y}}),w=Wd({inputs:{x:O},backend:n,attrs:{perm:x}}),k=Cd({inputs:{x:w},backend:n,attrs:{shape:v}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(w),k}};function db(e,t,n,r,c,l,d){const h=t[0],f=l[0],m=new Array(f),y=new Array(h),x=t[1];if(0===f){if(0!==h)throw new Error(o.vd.getSparseFillEmptyRowsIndicesDenseShapeMismatch(h));return[o.yf.getArrayFromDType(n,0),[0,x],o.yf.getArrayFromDType(c,0),m,y]}let v=!0,O=0;const w=new Array(f).fill(0);for(let i=0;i<h;++i){const t=e[i*x];if(t<0)throw new Error(o.vd.getSparseFillEmptyRowsNegativeIndexErrorMessage(i,t));if(t>=f)throw new Error(o.vd.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(i,t,f));++w[t],v=v&&t>=O,O=t}let k=!0;for(let e=0;e<f;++e){const t=0===w[e];m[e]=t,k=k&&!t,w[e]=Math.max(w[e],1),e>0&&(w[e]+=w[e-1])}if(k&&v){const t=e,n=r;for(let i=0;i<h;++i)y[i]=i;return[t,[h,x],n,m,y]}{const t=w[f-1],l=o.yf.getArrayFromDType(n,t*x),v=o.yf.getArrayFromDType(c,t),O=new Array(f).fill(0);for(let i=0;i<h;++i){const t=e[i*x],n=O[t],o=(0===t?0:w[t-1])+n;O[t]++;for(let t=0;t<x;++t)l[o*x+t]=e[i*x+t];v[o]=r[i],y[i]=o}for(let e=0;e<f;++e){if(0===O[e]){const t=0===e?0:w[e-1];l[t*x+0]=e;for(let col=1;col<x;++col)l[t*x+col]=0;v[t]=d}}return[l,[t,x],v,m,y]}}const hb={kernelName:o.Kc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:o,denseShape:c,defaultValue:l}=t;if(1!==c.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${c.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==o.shape.length)throw new Error(`Values must be a vector, saw:\n        ${o.shape}`);if(0!==l.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${l.shape}`);const d=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,f=n.data.get(c.dataId).values,m=n.data.get(l.dataId).values[0],[y,x,v,O,w]=db(d,r.shape,r.dtype,h,o.dtype,f,m);return[n.makeTensorInfo(x,r.dtype,y),n.makeTensorInfo([x[0]],o.dtype,v),n.makeTensorInfo([O.length],"bool",new Uint8Array(O.map((e=>Number(e))))),n.makeTensorInfo([w.length],r.dtype,new Int32Array(w))]}};function pb(e,t,n,r,c){const l=o.yf.sizeFromShape(r),d=t[0],h=c.length,f=[];let m=1,y=-1;for(let e=0;e<h;++e){const t=c[e];if(-1===t){if(-1!==y)throw new Error(o.vd.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y,e));y=e,f.push(1)}else{if(t<0)throw new Error(o.vd.getSparseReshapeNegativeOutputDimErrorMessage(e,t));m*=t,f.push(t)}}if(-1!==y){if(m<=0)throw new Error(o.vd.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(l/m);if(m*e!==l)throw new Error(o.vd.getSparseReshapeInputOutputMultipleErrorMessage(r,f));f[y]=e}if(o.yf.sizeFromShape(f)!==l)throw new Error(o.vd.getSparseReshapeInputOutputMismatchErrorMessage(r,f));const x=r.length,v=[];if(x>0){v[x-1]=1;for(let e=x-2;e>=0;--e)v[e]=v[e+1]*r[e+1]}const O=[];if(h>0){O[h-1]=1;for(let e=h-2;e>=0;--e)O[e]=O[e+1]*f[e+1]}const w=o.yf.getArrayFromDType(n,d*h);for(let i=0;i<d;++i){let t=0;for(let n=0;n<x;++n)t+=e[i*x+n]*v[n];for(let e=0;e<h;++e)w[i*h+e]=Math.trunc(t/O[e]),t%=O[e]}return[w,[d,h],f]}const fb={kernelName:o.Lc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:o,newShape:c}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==o.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${o.shape}`);if(1!==c.shape.length)throw new Error(`Target shape should be a vector but received shape ${c.shape}`);const l=Array.from(n.data.get(o.dataId).values),d=n.data.get(r.dataId).values,h=Array.from(n.data.get(c.dataId).values),[f,m,y]=pb(d,r.shape,r.dtype,l,h);return[n.makeTensorInfo(m,r.dtype,f),n.makeTensorInfo([y.length],c.dtype,new Int32Array(y))]}};function mb(input,e,t,n,r,c=!1,l=0){const d=n.length,h=[e[0],input.length/e[0]],f=h[1],m=d>0?r[d-1]+1:0;if(m<0)throw new Error(o.vd.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const y=e.slice();y[0]=m;const x=y.reduce(((e,t)=>e*t),1),output=o.yf.getArrayFromDType(t,x);if(0===d)return m>0&&output.fill(l),[output,y];if(m<=0)throw new Error(o.vd.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let v=0,O=1,w=0,k=r[v];for(;;){let e=0;if(O<d){if(e=r[O],k===e){++O;continue}if(k>=e)throw new Error(o.vd.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(k<0||k>=m)throw new Error(o.vd.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(k,m));k>w&&output.fill(l,w*f,k*f);for(let i=v;i<O;++i){const e=n[i];if(e<0||e>=h[0])throw new Error(o.vd.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(i,n[i],h[0]));for(let t=0;t<f;t++)output[k*f+t]+=input[e*f+t]}if(c)for(let e=0;e<f;e++)output[k*f+e]/=O-v;if(v=O,++O,w=k+1,k=e,O>d)break}return w<m&&output.fill(l,w*f,m*f),[output,y]}const bb={kernelName:o.Mc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:data,indices:r,segmentIds:o}=t;if(data.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const c=n.data.get(data.dataId).values,l=n.data.get(r.dataId).values,d=n.data.get(o.dataId).values,[h,f]=mb(c,data.shape,data.dtype,l,d,!0);return n.makeTensorInfo(f,data.dtype,h)}};const gb={kernelName:o.Nc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:data,indices:r,segmentIds:o}=t;if(data.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const c=n.data.get(data.dataId).values,l=n.data.get(r.dataId).values,d=n.data.get(o.dataId).values,[h,f]=mb(c,data.shape,data.dtype,l,d);return n.makeTensorInfo(f,data.dtype,h)}};const yb={kernelName:o.Oc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:c,sparseValues:l,defaultValue:d}=t,{outputShape:h}=r,{sliceRank:f,numUpdates:m,sliceSize:y,strides:x,outputSize:v}=o.vd.calculateShapes(l,c,h),O=Km(n.bufferSync(c),n.bufferSync(l),h,v,y,m,f,x,n.data.get(d.dataId).values[0],!1);return n.makeTensorInfo(h,O.dtype,O.values)}};const xb={kernelName:o.Pc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{numOrSizeSplits:l,axis:d}=r,h=o.yf.parseAxisParam(d,c.shape)[0],f=o.vd.prepareSplitSize(c,l,h),m=new Array(c.shape.length).fill(0),y=c.shape.slice();return f.map((s=>{const e=[...y];e[h]=s;const t=mh({inputs:{x:c},backend:n,attrs:{begin:m,size:e}});return m[h]+=s,t}))}},vb=ld((e=>Math.sqrt(e))),Ob=ql(o.Qc,(e=>Math.sqrt(e))),wb={kernelName:o.Qc,backendName:"cpu",kernelFunc:Ob},kb={kernelName:o.Rc,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Vl(n,"square");const o=r.data.get(n.dataId).values,c=new Float32Array(o.length);for(let i=0;i<o.length;++i){const e=o[i];c[i]=e*e}return{dataId:r.write(c,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},Ib=nd(((a,b)=>{const e=a-b;return e*e})),Sb=kd(o.Sc,Ib),Nb={kernelName:o.Sc,backendName:"cpu",kernelFunc:Sb},jb=ql(o.Tc,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),Tb={kernelName:o.Tc,backendName:"cpu",kernelFunc:jb};function Cb(e,t,n,r){const c=Object(o.Bd)(e,t.dtype);for(let i=0;i<c.size;i++){const e=c.indexToLoc(i),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+r[t];c.set(t.get(...o),...e)}return c}const $b={kernelName:o.Uc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{begin:l,end:d,strides:h,beginMask:f,endMask:m,ellipsisMask:y,newAxisMask:x,shrinkAxisMask:v}=r;Vl(c,"stridedSlice");const{finalShapeSparse:O,finalShape:w,isIdentity:k,sliceDim0:I,isSimpleSlice:S,begin:N,end:j,strides:T}=o.cf.sliceInfo(c.shape,l,d,h,f,m,y,x,v);let C;if(k)C=Cd({inputs:{x:c},backend:n,attrs:{shape:w}});else if(I||S){o.yf.assert(c.shape.length>=1,(()=>`Input must have rank at least 1, got: ${c.shape.length}`));const e=o.cf.computeOutShape(N,j,T),t=mh({inputs:{x:c},backend:n,attrs:{begin:N,size:e}});C=Cd({inputs:{x:t},backend:n,attrs:{shape:w}}),n.disposeIntermediateTensorInfo(t)}else{const e=Cb(O,n.bufferSync(c),T,N);C=n.makeTensorInfo(w,e.dtype,e.values)}return C}};class Eb{constructor(e,t,n,r,c,l){this.separator=o.yf.encodeString(e),this.nGramWidths=t,this.leftPad=o.yf.encodeString(n),this.rightPad=o.yf.encodeString(r),this.padWidth=c,this.preserveShort=l}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(data,e,output,t,n,r){for(let o=0;o<n;++o){const c=this.getPadWidth(r),l=Math.max(0,c-o),d=Math.max(0,c-(n-(o+1))),h=r-(l+d),f=e+(l>0?0:o-c);let m=0;m+=l*this.leftPad.length;for(let e=0;e<h;++e)m+=data[f+e].length;m+=d*this.rightPad.length;m+=(l+d+h-1)*this.separator.length,output[t+o]=new Uint8Array(m);const y=output[t+o];let x=0;const v=e=>e.forEach((e=>y[x++]=e));for(let e=0;e<l;++e)v(this.leftPad),v(this.separator);for(let e=0;e<h-1;++e)v(data[f+e]),v(this.separator);if(h>0){v(data[f+h-1]);for(let e=0;e<d;++e)v(this.separator),v(this.rightPad)}else{for(let e=0;e<d-1;++e)v(this.rightPad),v(this.separator);v(this.rightPad)}}}compute(data,e){const t=data.length,n=e.length;if(n>0){let r=e[0];if(0!==r)throw new Error(`First split value must be 0, got ${r}`);for(let i=1;i<n;++i){let n=e[i]>=r;if(n=n&&e[i]<=t,!n)throw new Error(`Invalid split value ${e[i]}, must be in [${r}, ${t}]`);r=e[i]}if(r!==t)throw new Error(`Last split value must be data size. Expected ${t}, got ${r}`)}const r=n-1,c=o.yf.getArrayFromDType("int32",n);if(0===t||0===n){const e=new Array(t);for(let i=0;i<=r;++i)c[i]=0;return[e,c]}c[0]=0;for(let i=1;i<=r;++i){const t=e[i]-e[i-1];let n=0;this.nGramWidths.forEach((e=>{n+=this.getNumNGrams(t,e)})),this.preserveShort&&t>0&&0===n&&(n=1),c[i]=c[i-1]+n}const l=new Array(c[r]);for(let i=0;i<r;++i){const t=e[i];let n=c[i];if(this.nGramWidths.forEach((r=>{const o=e[i+1]-e[i],c=this.getNumNGrams(o,r);this.createNGrams(data,t,l,n,c,r),n+=c})),this.preserveShort&&n===c[i]){const r=e[i+1]-e[i];if(0===r)continue;const o=r+2*this.padWidth,c=1;this.createNGrams(data,t,l,n,c,o)}}return[l,c]}}function Ab(data,e,t,n,r,o,c,l){return new Eb(t,n,r,o,c,l).compute(data,e)}const Rb={kernelName:o.Vc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:o,nGramWidths:c,leftPad:l,rightPad:d,padWidth:h,preserveShortSequences:f}=r,{data:data,dataSplits:m}=t,y=n.data.get(data.dataId).values,x=n.data.get(m.dataId).values,[v,O]=Ab(y,x,o,c,l,d,h,f);return[n.makeTensorInfo([v.length],"string",v),n.makeTensorInfo(m.shape,"int32",O)]}};function Fb(e,t,n,r){if(!e.length)return;if(0===t.length){for(let i=0;i<e.length;++i)r.push(e.subarray(i,i+1));return}if(1===t.length){const o=t[0];let c=e.indexOf(o);for(;-1!==c;){const t=e.subarray(0,c);n&&0===t.length||r.push(t),c=(e=e.subarray(c+1)).indexOf(o)}return void(n&&0===e.length||r.push(e))}let o=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){const t=e.subarray(o,i);n&&0===t.length||r.push(t),o=i+1}}function Db(input,e,t){const n=input.length,r=[];let c=0,l=0;const d=new Array(n);for(let i=0;i<n;++i){const n=r.length;Fb(input[i],e,t,r);const o=r.length-n;d[i]=o,c+=o,l=Math.max(l,o)}const h=o.yf.getArrayFromDType("int32",2*c),f=new Array(c),m=[n,l];let y=0;for(let i=0;i<n;++i)for(let e=0;e<d[i];++e)h[2*y]=i,h[2*y+1]=e,f[y]=r[y],++y;return[h,f,m]}const _b={kernelName:o.Wc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:o}=r,{input:input,delimiter:c}=t;if("string"!==input.dtype)throw new Error("Input must be of datatype string");if(1!==input.shape.length)throw new Error(`Input must be a vector, got shape: ${input.shape}`);if(0!==c.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${c.shape}`);const l=n.data.get(input.dataId).values,d=n.data.get(c.dataId).values[0],[h,f,m]=Db(l,d,o),y=f.length;return[n.makeTensorInfo([y,2],"int32",h),n.makeTensorInfo([y],"string",f),n.makeTensorInfo([2],"int32",new Int32Array(m))]}};function Mb(input,e){const output=o.yf.getArrayFromDType("int32",input.length);for(let i=0;i<input.length;++i)output[i]=o.yf.fingerPrint64(input[i]).modulo(e).getLowBitsUnsigned();return output}const zb={kernelName:o.Xc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:o}=r,{input:input}=t;if("string"!==input.dtype)throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const output=Mb(n.data.get(input.dataId).values,o);return n.makeTensorInfo(input.shape,"int32",output)}},Lb=ql(o.ad,(e=>Math.tan(e))),Pb={kernelName:o.ad,backendName:"cpu",kernelFunc:Lb},Bb=ql(o.bd,(e=>Math.tanh(e))),Wb={kernelName:o.bd,backendName:"cpu",kernelFunc:Bb};function Ub(e,t){const n=new Array(e.rank);for(let i=0;i<n.length;i++)n[i]=e.shape[i]*t[i];const r=Object(o.Bd)(n,e.dtype);for(let i=0;i<r.values.length;++i){const t=r.indexToLoc(i),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const o=e.locToIndex(n);r.values[i]=e.values[o]}return r}const Vb={kernelName:o.ed,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{reps:c}=r;Vl(o,"tile");const l=Ub(n.bufferSync(o),c);return n.makeTensorInfo(l.shape,l.dtype,l.values)}},Gb=(a,b)=>{const e=b.value-a.value;return 0===e?a.index-b.index:e};function Hb(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const o=r-n+1,i=t-n+1,c=Math.log(o),s=.5*Math.exp(2*c/3),l=.5*Math.sqrt(c*s*(o-s)/o)*Math.sign(i-o/2);Hb(e,t,Math.max(n,Math.floor(t-i*s/o+l)),Math.min(r,Math.floor(t+(o-i)*s/o+l)))}const c=e[t];let i=n,l=r;for(o.yf.swap(e,n,t),Gb(e[r],c)>0&&o.yf.swap(e,n,r);i<l;){for(o.yf.swap(e,i,l),i++,l--;Gb(e[i],c)<0;)i+=1;for(;Gb(e[l],c)>0;)l-=1}0===Gb(e[n],c)?o.yf.swap(e,n,l):(l+=1,o.yf.swap(e,l,r)),l<=t&&(n=l+1),t<=l&&(r=l-1)}}function qb(e,t,n,r,c){const l=t[t.length-1],[d,h]=[e.length/l,l],f=o.yf.getTypedArrayFromDType(n,d*r),m=o.yf.getTypedArrayFromDType("int32",d*r);for(let b=0;b<d;b++){const t=b*h,n=e.subarray(t,t+h);let o=new Array(n.length);n.forEach(((e,t)=>o[t]={value:e,index:t})),r<o.length&&(Hb(o,r),o=o.slice(0,r)),c&&o.sort(Gb);const l=b*r,d=f.subarray(l,l+r),y=m.subarray(l,l+r);for(let i=0;i<r;i++)d[i]=o[i].value,y[i]=o[i].index}const y=t.slice();return y[y.length-1]=r,[Object(o.Bd)(y,n,f),Object(o.Bd)(y,"int32",m)]}const Kb={kernelName:o.fd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{k:c,sorted:l}=r;Vl(o,"topk");const d=n.data.get(o.dataId).values,[h,f]=qb(d,o.shape,o.dtype,c,l);return[n.makeTensorInfo(h.shape,h.dtype,h.values),n.makeTensorInfo(f.shape,f.dtype,f.values)]}};const Xb={kernelName:o.gd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:image,transforms:c}=t,{interpolation:l,fillMode:d,fillValue:h,outputShape:f}=n,[m,y,x,v]=image.shape,[O,w]=null!=f?f:[y,x],k=[m,O,w,v],I=o.yf.computeStrides(image.shape),S=I[0],N=I[1],j=I[2],T=o.yf.getTypedArrayFromDType(image.dtype,o.yf.sizeFromShape(k));T.fill(h);const C=r.data.get(image.dataId).values,$=r.data.get(c.dataId).values;for(let b=0;b<m;++b){const e=1===c.shape[0]?$:$.subarray(8*b,8*b+8);for(let t=0;t<O;++t)for(let n=0;n<w;++n)for(let r=0;r<v;++r){let o;const c=e[6]*n+e[7]*t+1;if(0===c)continue;const f=(e[0]*n+e[1]*t+e[2])/c,m=(e[3]*n+e[4]*t+e[5])/c,v=Yb(f,x,d),O=Yb(m,y,d);switch(l){case"nearest":o=Jb(C,y,x,S,N,j,b,O,v,r,h);break;case"bilinear":o=Qb(C,y,x,S,N,j,b,O,v,r,h);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${l}`)}T[b*S+t*N+n*j+r]=o}return r.makeTensorInfo(k,image.dtype,T)}return{dataId:r.write(T,k,image.dtype),shape:image.shape,dtype:image.dtype}}};function Yb(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return o.yf.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return o.yf.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return o.yf.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function Zb(e,t,n,r,o,c,l,d,h,f,m){return 0<=d&&d<t&&0<=h&&h<n?e[l*r+d*o+h*c+f]:m}function Jb(e,t,n,r,o,c,l,d,h,f,m){return Zb(e,t,n,r,o,c,l,Math.round(d),Math.round(h),f,m)}function Qb(e,t,n,r,o,c,l,d,h,f,m){const y=Math.floor(d),x=Math.floor(h),v=y+1,O=x+1;return(v-d)*((O-h)*Zb(e,t,n,r,o,c,l,y,x,f,m)+(h-x)*Zb(e,t,n,r,o,c,l,y,O,f,m))+(d-y)*((O-h)*Zb(e,t,n,r,o,c,l,v,x,f,m)+(h-x)*Zb(e,t,n,r,o,c,l,v,O,f,m))}function eg(e,t,n,r){const c=o.yf.parseAxisParam(t,n)[0],l=[1,n[0],1];for(let i=0;i<c;i++)l[0]*=n[i];l[1]=n[c];for(let i=c+1;i<n.length;i++)l[2]*=n[i];const d={},h=new Int32Array(n[c]),f=new o.dd(l,r,e),m=[],y=1===l[0]&&1===l[2];for(let i=0;i<n[c];i++){let element;if(y)element=e[i].toString();else{const e=[];for(let t=0;t<l[0];t++)for(let n=0;n<l[2];n++)e.push(f.get(t,i,n));element=e.join(",")}if(void 0!==d[element])h[i]=d[element];else{const e=Object.keys(d).length;d[element]=e,h[i]=e,m.push(i)}}const x=l.slice();x[1]=Object.keys(d).length;const v=new o.dd(x,r);m.forEach(((e,i)=>{for(let t=0;t<l[0];t++)for(let n=0;n<l[2];n++)v.set(f.get(t,e,n),t,i,n)}));const O=n.slice();return O[c]=x[1],{outputValues:v.values,outputShape:O,indices:h}}const tg={kernelName:o.id,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:o}=n,{x:c}=t;Vl(c,"unique");const l=r.data.get(c.dataId).values,{outputValues:d,outputShape:h,indices:f}=eg(l,o,c.shape,c.dtype);return[r.makeTensorInfo(h,c.dtype,d),r.makeTensorInfo([f.length],"int32",f)]}};const ng={kernelName:o.jd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:o}=t;let{axis:c}=r;c<0&&(c+=o.shape.length);const l=o.shape.length,d=o.shape[c],h=new Array(l-1);let f=0;for(let i=0;i<l;i++)i!==c&&(h[f++]=o.shape[i]);const m=new Array(l).fill(0),y=o.shape.slice();y[c]=1;const x=new Array(d);for(let i=0;i<x.length;i++){m[c]=i;const e=mh({inputs:{x:o},backend:n,attrs:{begin:m,size:y}});x[i]=Cd({inputs:{x:e},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(e)}return x}};const rg={kernelName:o.kd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,segmentIds:l}=t,{numSegments:d}=r;Vl(c,"unsortedSegmentSum");const h=[],f=[],m=c.shape.length-l.shape.length;let y=l;for(let i=0;i<m;++i){const e=Sp({inputs:{input:y},backend:n,attrs:{dim:i+1}});y=e,f.push(e)}for(let i=0;i<d;++i){const e=o.yf.createScalarValue(i,"int32"),t=n.makeTensorInfo([],"int32",e),mask=hp({inputs:{a:t,b:y},backend:n}),r=Od({inputs:{x:mask},backend:n,attrs:{dtype:"float32"}}),l=sp({inputs:{a:r,b:c},backend:n}),d=op({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});h.push(d),f.push(t),f.push(mask),f.push(r),f.push(l),f.push(d)}const x=Sm({inputs:h,backend:n,attrs:{axis:0}});return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},ag=[Rd,Dd,Md,Ld,Td,Pd,Vd,Gd,Hd,qd,Xd,Zd,Qd,rh,sh,ch,lh,dh,hh,Ad,ph,gh,vh,Oh,wd,Ih,Nh,gd,jh,Ah,Fh,Dh,_h,Mh,zh,Lh,Bh,Uh,Vh,Gh,Hh,qh,Xh,Yh,Zh,Jh,Qh,ep,tp,cp,Yl,lp,pp,Op,Ip,Np,Cp,Pp,Wp,Up,Hp,Xp,Yp,Zp,Qp,tf,af,uf,Jl,cf,$h,df,pf,mf,ed,yf,Of,kf,Nf,Tf,Ef,Rf,_f,Mf,zf,Bf,Vf,Gf,Hf,qf,Kf,Xf,Yf,Zf,tm,nm,sm,cm,ip,dm,pm,mm,gm,vm,Om,Im,Nm,jm,$m,sd,Am,Fm,vd,Ap,_m,od,cd,$d,Mm,zm,Lm,Pm,Bm,Wm,Vm,qm,Xm,Ym,eb,fd,nb,ab,ib,bh,um,cb,lb,hb,fb,bb,gb,yb,xb,wb,kb,Nb,Tb,$b,Rb,_b,zb,_p,up,Pb,Wb,Vb,Kb,Xb,Ud,tg,ng,rg,km];for(const e of ag)Object(o.Ne)(e);const sg={},ig={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function og(e,t){if(!(e in sg)){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const canvas=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;if(canvas.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete sg[e]}),!1),1===e)return canvas.getContext("webgl",ig)||canvas.getContext("experimental-webgl",ig);return canvas.getContext("webgl2",ig)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;sg[e]=n}const n=sg[e];return null==n||n.isContextLost()?(delete sg[e],og(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),sg[e])}var ug,cg,lg;function dg(e,t){return[t,e]}function hg(e){const t=o.yf.sizeFromShape(e),n=Math.ceil(t/4);return o.yf.sizeToSquarishShape(n)}function pg(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function fg(e,t){const n=e;let r,c,l,d,h,f,m,y,x,v;return 2===Object(o.Wd)().getNumber("WEBGL_VERSION")?(r=n.R32F,c=n.R16F,l=n.RGBA16F,d=n.RGBA32F,h=n.RED,m=4,y=1,x=n.HALF_FLOAT,v=n.FLOAT,f=n.RGBA8):(r=e.RGBA,c=e.RGBA,l=e.RGBA,d=n.RGBA,h=e.RGBA,m=4,y=4,x=null!=t?t.HALF_FLOAT_OES:null,v=e.FLOAT,f=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:c,internalFormatPackedHalfFloat:l,internalFormatPackedFloat:d,textureFormatFloat:h,downloadTextureFormat:f,downloadUnpackNumChannels:m,defaultNumChannels:y,textureTypeHalfFloat:x,textureTypeFloat:v}}function mg(e,t){const n=t();return Object(o.Wd)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(ug||(ug={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(cg||(cg={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(lg||(lg={}));function bg(e){return!!(Object(o.Wd)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function gg(e,t){return Ng(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function yg(e,t){const n=Ng(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(mg(e,(()=>e.shaderSource(n,t))),mg(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=xg.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],c=e.split("\n"),l=c.length.toString().length+2,d=c.map(((line,e)=>o.yf.rightPad((e+1).toString(),l)+line));let h=0;for(let i=0;i<d.length;i++)h=Math.max(d[i].length,h);const f=d.slice(0,r-1),m=d.slice(r-1,r),y=d.slice(r);console.log(f.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${o.yf.rightPad(m[0],h)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(y.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const xg=/ERROR: [0-9]+:([0-9]+):/g;function vg(e,t){if(mg(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function Og(e,t,n,r,o,c,l){const d=e.getAttribLocation(t,n);return-1!==d&&(mg(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),mg(e,(()=>e.vertexAttribPointer(d,o,e.FLOAT,!1,c,l))),mg(e,(()=>e.enableVertexAttribArray(d))),!0)}function wg(e,t,n,r){mg(e,(()=>function(e,t,n){jg(e,n),mg(e,(()=>e.activeTexture(e.TEXTURE0+n))),mg(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),mg(e,(()=>e.uniform1i(n,r)))}function kg(e,t,n){mg(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),mg(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function Ig(e,t){mg(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),mg(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function Sg(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function Ng(e,t,n){const r=mg(e,(()=>t()));if(null==r)throw new Error(n);return r}function jg(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function Tg(e,t=2){return o.yf.sizeFromShape(e.slice(0,e.length-t))}function Cg(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function $g(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Tg(e),...Cg(e)]),t}function Eg(e){return e%2==0}function Ag(e,t){if(e=e.slice(-2),t=t.slice(-2),o.yf.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(Eg(n)&&Eg(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Eg(e[0])&&Eg(t[0])}let Rg,Fg;function Dg(e,t){return null!=e.getExtension(t)}function _g(e){try{if(null!=og(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function Mg(e){if(0===e)return!1;const t=og(e);if(1!==e){if(Dg(t,"EXT_color_buffer_float"))return zg(t);const e="EXT_color_buffer_half_float";if(Dg(t,e)){const n=t.getExtension(e);return function(e,t){const n=fg(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const o=1,c=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,o,c,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const l=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,l),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const d=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(l),d}(t,n)}return!1}if(!Dg(t,"OES_texture_float"))return!1;if(!Dg(t,"WEBGL_color_buffer_float"))return!1;return zg(t)}function zg(e){const t=fg(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),o}function Lg(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&o.yf.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const Pg=Object(o.Wd)();function Bg(){let e,t,n,r,c,output,l,d,h,f;return 2===Object(o.Wd)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",c="texture",output="outputColor",l="out vec4 outputColor;",d="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",h="",f="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",c="texture2D",output="gl_FragColor",l="",d="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",h="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",f="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:c,output:output,defineOutput:l,defineSpecialNaN:d,defineSpecialInf:h,defineRound:f}}function Wg(e,t,n="index"){const r=o.yf.computeStrides(t);return r.map(((t,i)=>`${`int ${e[i]} = ${n} / ${t}`}; ${i===r.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${t}`:`index -= ${e[i]} * ${t}`};`)).join("")}function Ug(e,t,n="index"){const r=o.yf.computeStrides(t);return r.map(((t,i)=>`${`int ${e[i]} = ${n} / outShapeStrides[${i}]`}; ${i===r.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * outShapeStrides[${i}]`:`index -= ${e[i]} * outShapeStrides[${i}]`};`)).join("")}function Vg(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),o=new Array(n-1);o[n-2]=r[n-1];for(let i=n-3;i>=0;--i)o[i]=`(${o[i+1]} * ${r[i+1]})`;return o}(e.map(((e,i)=>i)),t);return r.map(((t,i)=>`${`int ${e[i]} = ${n} / ${r[i]}`}; ${i===r.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${r[i]}`:`index -= ${e[i]} * ${r[i]}`};`)).join("")}function Gg(e){const t=o.yf.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}Pg.registerFlag("HAS_WEBGL",(()=>Pg.getNumber("WEBGL_VERSION")>0)),Pg.registerFlag("WEBGL_VERSION",(()=>_g(2)?2:_g(1)?1:0)),Pg.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),Pg.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===Pg.get("WEBGL_VERSION"))),Pg.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),Pg.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),Pg.registerFlag("WEBGL_PACK",(()=>Pg.getBool("HAS_WEBGL"))),Pg.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>Pg.getBool("WEBGL_PACK"))),Pg.registerFlag("WEBGL_PACK_CLIP",(()=>Pg.getBool("WEBGL_PACK"))),Pg.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>Pg.getBool("WEBGL_PACK"))),Pg.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>Pg.getBool("WEBGL_PACK"))),Pg.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>Pg.getBool("WEBGL_PACK"))),Pg.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>Pg.getBool("WEBGL_PACK"))),Pg.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>Pg.getBool("WEBGL_PACK"))),Pg.registerFlag("WEBGL_PACK_REDUCE",(()=>Pg.getBool("WEBGL_PACK"))),Pg.registerFlag("WEBGL_LAZILY_UNPACK",(()=>Pg.getBool("WEBGL_PACK"))),Pg.registerFlag("WEBGL_CONV_IM2COL",(()=>Pg.getBool("WEBGL_PACK"))),Pg.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==Rg){const t=og(e);Rg=t.getParameter(t.MAX_TEXTURE_SIZE)}return Rg}(Pg.getNumber("WEBGL_VERSION")))),Pg.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==Fg){const t=og(e);Fg=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Fg)}(Pg.getNumber("WEBGL_VERSION")))),Pg.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=Pg.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=og(e);return t=Dg(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Dg(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),Pg.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>Pg.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!o.Qd.isMobile())),Pg.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=og(e);if(1===e){if(!Dg(t,"OES_texture_float"))return!1}else if(!Dg(t,"EXT_color_buffer_float"))return!1;return zg(t)}(Pg.getNumber("WEBGL_VERSION")))),Pg.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!Pg.getBool("WEBGL_FORCE_F16_TEXTURES")&&Pg.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),Pg.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>Mg(Pg.getNumber("WEBGL_VERSION")))),Pg.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=Pg.getNumber("WEBGL_VERSION"))&&null!=og(e).fenceSync;var e})),Pg.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>Pg.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),Pg.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),Pg.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>o.Qd.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),Pg.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),Pg.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),Pg.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),Pg.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const Hg="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:qg}=o.vd;function Kg(e,t,n){const r=[];if(e.forEach((e=>{const t=o.yf.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=sy(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const c=r.join("\n"),l=e.map((e=>function(e,t,n=!1,r){let c="";c+=n?Yg(e,r):Xg(e,r);const l=e.shapeInfo.logicalShape,d=t.logicalShape;l.length<=d.length&&(c+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),c="get"+r+"AtOutCoords",l=e.shapeInfo.logicalShape.length,d=t.logicalShape.length,h=qg(e.shapeInfo.logicalShape,t.logicalShape),f=ay(d),m=d-l;let y;const x=["x","y","z","w","u","v"];y=0===l?"":d<2&&h.length>=1?"coords = 0;":h.map((e=>`coords.${x[e+m]} = 0;`)).join("\n");let v="";v=d<2&&l>0?"coords":e.shapeInfo.logicalShape.map(((s,i)=>`coords.${x[i+m]}`)).join(", ");let output="return outputValue;";const O=1===o.yf.sizeFromShape(e.shapeInfo.logicalShape),w=1===o.yf.sizeFromShape(t.logicalShape);if(1!==l||O||w){if(O&&!w)output=1===d?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(h.length){const e=l-2,t=l-1;h.indexOf(e)>-1&&h.indexOf(t)>-1?output="return vec4(outputValue.x);":h.indexOf(e)>-1?output="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":h.indexOf(t)>-1&&(output="return vec4(outputValue.xx, outputValue.zz);")}}else output="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${c}() {\n      ${f} coords = getOutputCoords();\n      ${y}\n      vec4 outputValue = get${r}(${v});\n      ${output}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),c="get"+r+"AtOutCoords",l=t.texShape,d=e.shapeInfo.texShape,h=e.shapeInfo.logicalShape.length,f=t.logicalShape.length;if(!e.shapeInfo.isUniform&&h===f&&null==e.shapeInfo.flatOffset&&o.yf.arraysEqual(d,l))return`\n      float ${c}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const m=ay(f),y=qg(e.shapeInfo.logicalShape,t.logicalShape),x=f-h;let v;const O=["x","y","z","w","u","v"];v=0===h?"":f<2&&y.length>=1?"coords = 0;":y.map((e=>`coords.${O[e+x]} = 0;`)).join("\n");let w="";w=f<2&&h>0?"coords":e.shapeInfo.logicalShape.map(((s,i)=>`coords.${O[i+x]}`)).join(", ");return`\n    float ${c}() {\n      ${m} coords = getOutputCoords();\n      ${v}\n      return get${r}(${w});\n    }\n  `}(e,t));return c}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),d=t.texShape,h=Bg(),f=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(h);let m,y,x=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Zg}\n    ${Jg}\n    ${Qg}\n  `}(h);t.isPacked?(m=function(e,t,n){switch(e.length){case 0:return ty();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(o.yf.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const c=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${c});\n      int c = imod(index, ${c}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(e[2]/2),c=o*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${c};\n      index -= b * ${c};\n\n      int r = 2 * (index / ${o});\n      int c = imod(index, ${o}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(e[e.length-1]/2),c=o*Math.ceil(e[e.length-2]/2);let l=c,d="",h="b, r, c";for(let b=2;b<e.length-1;b++)l*=e[e.length-b-1],d=`\n      int b${b} = index / ${l};\n      index -= b${b} * ${l};\n    `+d,h=`b${b}, `+h;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${d}\n\n      int b = index / ${c};\n      index -= b * ${c};\n\n      int r = 2 * (index / ${o});\n      int c = imod(index, ${o}) * 2;\n\n      return ivec${e.length}(${h});\n    }\n  `}(e,t,n)}}(t.logicalShape,d,n.enableShapeUniforms),y=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(h)):(m=function(e,t,n){switch(e.length){case 0:return ty();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(o.yf.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${Ug(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=Wg(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${Ug(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=Wg(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=Wg(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=Wg(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,d,n.enableShapeUniforms),y=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(h)),n.packedInputs&&(x+=ey);return[x,f,y,c,m,l,n.userCode].join("\n")}function Xg(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[o,c]=e.shapeInfo.texShape;if(1===o&&1===c)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const l=ny(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${l});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[d,h]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${d}, ${h}, ${l});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${ry(e)}\n      }\n    `;const o=e.shapeInfo.texShape,c=o[0],l=o[1];if(1===l&&1===c)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const d=ny(n);if(1===l)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${d}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${d}) + 0.5) / ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===c)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${d}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${d}) + 0.5) / ${l}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${d});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${c}, ${l}, index + ${d});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,c="get"+r.charAt(0).toUpperCase()+r.slice(1),l=e.shapeInfo.texShape;if(null!=l&&o.yf.arraysEqual(n,l)){if(t)return`\n      float ${c}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=l[0];return`\n    float ${c}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${l[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:d,keptDims:h}=o.yf.squeezeShape(n),f=d;if(f.length<n.length){const n=["row","col"];return`\n      ${Xg(iy(e,f),t)}\n      float ${c}(int row, int col) {\n        return ${c}(${oy(n,h)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${c}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${ry(e)}\n      }\n    `;const m=l[0],y=l[1],x=ny(r);if(1===y)return t?`\n      float ${c}(int row, int col) {\n        float index = dot(vec3(row, col, ${x}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${c}(int row, int col) {\n      float index = dot(vec3(row, col, ${x}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${m}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(1===m)return t?`\n      float ${c}(int row, int col) {\n        float index = dot(vec3(row, col, ${x}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${c}(int row, int col) {\n      float index = dot(vec3(row, col, ${x}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${y}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(t)return`\n      float ${c}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${x};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `;return`\n  float ${c}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${x};\n    vec2 uv = uvFromFlat(${m}, ${y}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,c="get"+r.charAt(0).toUpperCase()+r.slice(1),l=n[1]*n[2],d=n[2],{newShape:h,keptDims:f}=o.yf.squeezeShape(n),m=h;if(m.length<n.length){const n=["row","col","depth"];return`\n        ${Xg(iy(e,m),t)}\n        float ${c}(int row, int col, int depth) {\n          return ${c}(${oy(n,f)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${c}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${l}, ${d}, 1)));\n        ${ry(e)}\n      }\n    `;const y=e.shapeInfo.texShape,x=y[0],v=y[1],O=e.shapeInfo.flatOffset;if(v===l&&null==O)return t?`\n      float ${c}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${c}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${d}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${v}.0, ${x}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(v===d&&null==O)return t?`\n      float ${c}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${c}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${v}.0, ${x}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const w=ny(r);if(t)return`\n    float ${c}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${l} + col * ${d} + depth + ${w};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `;return`\n      float ${c}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${l} + col * ${d} + depth + ${w};\n        vec2 uv = uvFromFlat(${x}, ${v}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,c="get"+r.charAt(0).toUpperCase()+r.slice(1),l=n[3],d=n[2]*l,h=n[1]*d,{newShape:f,keptDims:m}=o.yf.squeezeShape(n);if(f.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${Xg(iy(e,f),t)}\n      float ${c}(int row, int col, int depth, int depth2) {\n        return ${c}(${oy(n,m)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${c}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${h}, ${d}, ${l}, 1)));\n        ${ry(e)}\n      }\n    `;const y=e.shapeInfo.flatOffset,x=e.shapeInfo.texShape,v=x[0],O=x[1],w=`int stride2 = ${r}Shape[3];`,k=`int stride1 = ${r}Shape[2] * stride2;`,I=`int stride0 = ${r}Shape[1] * stride1;`;if(O===h&&null==y)return t?`\n      float ${c}(int row, int col, int depth, int depth2) {\n        ${w}\n        ${k}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${c}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${d}, ${l}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${O}.0, ${v}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(O===l&&null==y)return t?`\n      float ${c}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${c}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${O}.0, ${v}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const S=ny(r);if(t)return`\n    float ${c}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${w}\n      ${k}\n      ${I}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${S});\n      return sampleTexture(${r}, uv);\n    }\n  `;return`\n    float ${c}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${d} +\n          depth * ${l} + depth2;\n      vec2 uv = uvFromFlat(${v}, ${O}, index + ${S});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),c=t[4],l=t[3]*c,d=t[2]*l,h=t[1]*d,{newShape:f,keptDims:m}=o.yf.squeezeShape(t);if(f.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Xg(iy(e,f))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${oy(t,m)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${d}, ${l}, ${c})) +\n          depth3;\n        ${ry(e)}\n      }\n    `;const y=e.shapeInfo.flatOffset,x=e.shapeInfo.texShape,v=x[0],O=x[1];if(O===h&&null==y)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${d}, ${l}, ${c}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${O}.0, ${v}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(O===c&&null==y)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${O}.0, ${v}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const w=ny(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${d} + depth * ${l} +\n          depth2 * ${c} + depth3 + ${w};\n      vec2 uv = uvFromFlat(${v}, ${O}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:c,keptDims:l}=o.yf.squeezeShape(t);if(c.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Xg(iy(e,c))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${oy(t,l)});\n      }\n    `}const d=t[5],h=t[4]*d,f=t[3]*h,m=t[2]*f,y=t[1]*m;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${y}, ${m}, ${f}, ${h})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${d}, 1)));\n        ${ry(e)}\n      }\n    `;const x=e.shapeInfo.flatOffset,v=e.shapeInfo.texShape,O=v[0],w=v[1];if(w===y&&null==x)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${m}, ${f}, ${h}, ${d})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${w}.0, ${O}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(w===d&&null==x)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${w}.0, ${O}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const k=ny(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${y} + col * ${m} + depth * ${f} +\n          depth2 * ${h} + depth3 * ${d} + depth4 + ${k};\n      vec2 uv = uvFromFlat(${O}, ${w}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function Yg(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Bg();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e.shapeInfo.texShape,c=Bg();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${c.texture2D}(${n}, uv);\n    }\n  `;const l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${l[0]}, ${l[1]}, index);\n      return ${c.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,c="get"+r.charAt(0).toUpperCase()+r.slice(1),l=e.shapeInfo.texShape,d=l[0],h=l[1],f=Bg();if(null!=l&&o.yf.arraysEqual(n,l))return t?`\n      vec4 ${c}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${f.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${c}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${d}.0);\n\n        return ${f.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${c}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${f.texture2D}(${r}, uv);\n    }\n  `;const m=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)],y=Math.ceil(n[1]/2);return`\n    vec4 ${c}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${y}, ${m[0]}, ${m[1]}, row, col);\n      return ${f.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,o="get"+r.charAt(0).toUpperCase()+r.slice(1),c=e.shapeInfo.texShape,l=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)];if(1===n[0]){const r=[1,2],c=["b","row","col"];return`\n        ${Yg(iy(e,n.slice(1)),t)}\n        vec4 ${o}(int b, int row, int col) {\n          return ${o}(${oy(c,r)});\n        }\n      `}const d=Bg();if(t)return`\n    vec4 ${o}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${d.texture2D}(${r}, uv);\n    }\n  `;const h=l[0],f=l[1],m=Math.ceil(n[2]/2),y=m*Math.ceil(n[1]/2);return`\n    vec4 ${o}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${h}, ${f}, ${y}, ${m}, b, row, col);\n      return ${d.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=Bg();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${n}, uv);\n    }\n  `;const c=e.shapeInfo.logicalShape,l=c.length,d=e.shapeInfo.texShape,h=[Math.ceil(d[0]/2),Math.ceil(d[1]/2)],f=h[0],m=h[1],y=Math.ceil(c[l-1]/2);let x=y*Math.ceil(c[l-2]/2),v="int b, int row, int col",O=`b * ${x} + (row / 2) * ${y} + (col / 2)`;for(let b=2;b<l-1;b++)v=`int b${b}, `+v,x*=c[l-b-1],O=`b${b} * ${x} + `+O;return`\n    vec4 ${r}(${v}) {\n      int index = ${O};\n      int texR = index / ${m};\n      int texC = index - texR * ${m};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}, ${f});\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const Zg="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Jg="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Qg="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ey="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function ty(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function ny(e){return`offset${e}`}function ry(e){const t=e.name,n=o.yf.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function ay(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function sy(e,t,n){const{newShape:r,keptDims:c}=o.yf.squeezeShape(t),l=t.length,d=e&&3===l&&1===t[0],h=d?t.slice(1):r,f=!e&&l>1&&!o.yf.arraysEqual(t,n)&&r.length<l||d;return{useSqueezeShape:f,uniformShape:f?h:t,keptDims:c}}function iy(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function oy(e,t){return t.map((t=>e[t])).join(", ")}function uy(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((s,i)=>{const e=s.logicalShape,input=t[i],n=input.shape;if(!o.yf.arraysEqual(e,n))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${e} and ${n} must match`);if(s.isUniform&&input.isUniform)return;const r=s.texShape,c=input.isUniform?null:input.texData.texShape;if(!o.yf.arraysEqual(r,c))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${r} and ${c} must match`)}))}function cy(e){return Object(o.Wd)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class ly{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ug.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Bg();this.outputShape=e,this.enableShapeUniforms=cy(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Ug(["r","c","d"],e):Wg(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class dy{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ug.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Bg();this.outputShape=e,this.enableShapeUniforms=cy(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Ug(["r","c","d"],e):Wg(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class hy{constructor(e){this.variableNames=["A"],this.outTexUsage=cg.DOWNLOAD;const t=Bg();this.outputShape=e,this.userCode=`\n      ${Hg}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class py{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=cg.DOWNLOAD;const t=Bg();this.outputShape=e,this.userCode=`\n      ${Hg}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class fy{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Bg();this.outputShape=e,this.enableShapeUniforms=cy(this.outputShape.length);let output="result";t&&(output="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Gg(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${output}, 0., 0., 0.);\n      }\n    `}}class my{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Bg();this.outputShape=e,this.enableShapeUniforms=cy(this.outputShape.length);let r="",output="result";t&&(output="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let col=0;col<=1;col++){const o=2*t+col;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${col} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${col};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${o}] = values[0];\n            } else if (offset == 1) {\n              result[${o}] = values[1];\n            } else if (offset == 2) {\n              result[${o}] = values[2];\n            } else {\n              result[${o}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Gg(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${output};\n        }\n    `}}function by(e){const t=Bg();return function(e,t){const n=Ng(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(mg(e,(()=>e.shaderSource(n,t))),mg(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function gy(e){return function(e,data){const t=Ng(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return mg(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,t))),mg(e,(()=>e.bufferData(e.ARRAY_BUFFER,data,e.STATIC_DRAW))),t}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function yy(e){return function(e,data){const t=Ng(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return mg(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t))),mg(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,data,e.STATIC_DRAW))),t}(e,new Uint16Array([0,1,2,2,1,3]))}function xy(e,t,n,r,c,l){!function(e,t){const n=Object(o.Wd)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const d=function(e){return Ng(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),h=e.TEXTURE_2D;return mg(e,(()=>e.bindTexture(h,d))),mg(e,(()=>e.texParameteri(h,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),mg(e,(()=>e.texParameteri(h,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),mg(e,(()=>e.texParameteri(h,e.TEXTURE_MIN_FILTER,e.NEAREST))),mg(e,(()=>e.texParameteri(h,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Object(o.Wd)().getNumber("WEBGL_VERSION")?mg(e,(()=>e.texImage2D(h,0,r,t,n,0,c,l,null))):mg(e,(()=>e.texStorage2D(h,1,r,t,n))),mg(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:d,texShape:[n,t]}}function vy(e){return e.internalFormatFloat}function Oy(e){return e.internalFormatHalfFloat}function wy(e){return e.downloadTextureFormat}function ky(e){return e.internalFormatPackedFloat}function Iy(e){return e.internalFormatPackedHalfFloat}function Sy(e,t,n,r,o,c,l,d){const h=e,f=new Float32Array(function(e,t){const[n,r]=pg(e,t);return n*r*4}(c,l));return h.bindBuffer(h.PIXEL_PACK_BUFFER,t),h.getBufferSubData(h.PIXEL_PACK_BUFFER,0,f),h.bindBuffer(h.PIXEL_PACK_BUFFER,null),f}class Ny{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Object(o.Wd)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){sg[e]=t}(t,e)):this.gl=og(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Object(o.Wd)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=gg(this.gl,e),Dg(this.gl,t))this.textureHalfFloatExtension=gg(this.gl,t);else if(Object(o.Wd)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Dg(this.gl,r))this.colorBufferHalfFloatExtension=gg(this.gl,r);else if(Object(o.Wd)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Dg(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Dg(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=gy(this.gl),this.indexBuffer=yy(this.gl),this.framebuffer=function(e){return Ng(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=fg(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(o.Wd)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;mg(e,(()=>e.finish())),mg(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),mg(e,(()=>e.deleteFramebuffer(this.framebuffer))),mg(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),mg(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),mg(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,c]=dg(t,n);return xy(e,o,c,vy(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,c]=dg(t,n);return xy(e,o,c,Oy(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,c]=dg(t,n);return xy(e,o,c,wy(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){mg(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Object(o.Wd)().getNumber("WEBGL_VERSION")?mg(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):mg(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Object(o.Wd)().getNumber("WEBGL_VERSION")?mg(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):mg(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),mg(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,data){this.throwIfDisposed(),function(e,t,n,r,data,c){let l,d,h;mg(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),data instanceof Uint8Array?(l=new Uint8Array(n*r*4),d=e.UNSIGNED_BYTE,h=e.RGBA):(l=new Float32Array(n*r*4),d=e.FLOAT,h=c.internalFormatPackedFloat),l.set(data),2===Object(o.Wd)().getNumber("WEBGL_VERSION")?mg(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,d,l))):mg(e,(()=>e.texImage2D(e.TEXTURE_2D,0,h,n,r,0,e.RGBA,d,l))),mg(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,data,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,c]=pg(t,n);return xy(e,o,c,Iy(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,c]=pg(t,n);return xy(e,o,c,ky(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Ig(this.gl,this.framebuffer),this.outputTexture=null),mg(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[o,c]=dg(t,n),l=new Uint8Array(t*n*4);return mg(e,(()=>e.readPixels(0,0,o,c,r.downloadTextureFormat,e.UNSIGNED_BYTE,l))),new Float32Array(l.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,o,c){return Sy(this.gl,e,0,0,0,o,c,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,o=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,o),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),o}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const o=e.createBuffer();mg(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,o)));const c=16*t*n;return mg(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,c,e.STREAM_READ))),mg(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),mg(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),o}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Object(o.Wd)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(o,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=o}else Object(o.Wd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Object(o.Wd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return mg(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=by(t));const n=function(e){return Ng(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return mg(t,(()=>t.attachShader(n,this.vertexShader))),mg(t,(()=>t.attachShader(n,e))),function(e,t){if(mg(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&vg(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return mg(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),Og(e,t,"clipSpacePos",n,3,20,0)&&Og(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&mg(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&vg(this.gl,this.program),mg(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return Ng(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),mg(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),wg(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,o]=pg(t,n);this.setOutputMatrixTextureDriver(e,r,o)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&vg(this.gl,this.program),Sg(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),mg(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),mg(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=gg(this.gl,2===Object(o.Wd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(o.Wd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Object(o.Wd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await o.yf.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Object(o.Wd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Object(o.Wd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let i=0;for(;i<e.length;++i){if(!e[i]())break}return i-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let i=0;i<=e;++i){const{resolveFn:e}=this.itemsToPoll[i];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||o.yf.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),kg(this.gl,e,this.framebuffer),this.debug&&Sg(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(kg(this.gl,this.outputTexture,this.framebuffer),this.debug&&Sg(this.gl)):Ig(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;kg(r,e,this.framebuffer),this.debug&&Sg(r),this.outputTexture=e,mg(r,(()=>r.viewport(0,0,t,n))),mg(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),mg(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:jy,bincountImpl:Ty,bincountReduceImpl:Cy,ceilImpl:$y,concatImpl:Ey,equalImpl:Ay,expImpl:Ry,expm1Impl:Fy,floorImpl:Dy,gatherNdImpl:_y,gatherV2Impl:My,greaterImpl:zy,greaterEqualImpl:Ly,lessImpl:Py,lessEqualImpl:By,linSpaceImpl:Wy,logImpl:Uy,maxImpl:Vy,maximumImpl:Gy,minimumImpl:Hy,multiplyImpl:qy,negImpl:Ky,notEqualImpl:Xy,prodImpl:Yy,rangeImpl:Zy,rsqrtImpl:Jy,sigmoidImpl:Qy,simpleAbsImpl:ex,sliceImpl:tx,sparseFillEmptyRowsImpl:nx,sparseReshapeImpl:rx,sparseSegmentReductionImpl:ax,sqrtImpl:sx,stridedSliceImpl:ix,stringNGramsImpl:ox,stringSplitImpl:ux,stringToHashBucketFastImpl:cx,subImpl:lx,tileImpl:dx,topKImpl:hx,transposeImpl:px,uniqueImpl:fx}=r;function mx(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function bx(e,t){return 1===t?[e]:mx(e,t)}class gx{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=cy(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=bx("rc",this.rank),t=ay(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),output=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${output}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let col=0;col<=1;col++){let r=`${0===n?"r":"rp1"}, ${0===col?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let i=this.rank-2;i<this.rank;i++)t+=`${e[i]} >= ${this.enableShapeUniforms?`outShape[${i}]`:this.outputShape[i]}`,i<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),col=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],n=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${col};\n      bool rEdge = rp1 >= ${n};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class yx{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=cy(this.outputShape.length);let n="";for(let i=0;i<4;i++){let e="thisRC = rc;";i%2==1&&(e+="thisRC.z += 1;"),i>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${i>0?"}":""}\n      `}var r,o;this.userCode=`\n      ${r=t,o=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${o?Vg(["r","c","d"],"inputShape"):Wg(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Gg(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class xx{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=Ox(t,n),o=wx(e,r,n);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const c=vx(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=c,this.log();const e=this.freeTextures[o].shift();return this.usedTextures[o].push(e),e}let l;return r===lg.PACKED_2X2_FLOAT32?l=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===lg.PACKED_2X2_FLOAT16?l=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===lg.UNPACKED_FLOAT32?l=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===lg.UNPACKED_FLOAT16?l=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===lg.PACKED_4X1_UNSIGNED_BYTE&&(l=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(l),this.numUsedTextures++,this._numBytesAllocated+=c,this.log(),l}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const c=Ox(n,r),l=wx(t,c,r);l in this.freeTextures||(this.freeTextures[l]=[]);const d=vx(t,c,this.gpgpu.gl,this.gpgpu.textureConfig,r),h=Object(o.Wd)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==h&&this._numBytesAllocated>h?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=d):(this.freeTextures[l].push(e),this.numFreeTextures++,this._numBytesFree+=d),this.numUsedTextures--;const f=this.usedTextures[l],m=f.indexOf(e);if(m<0)throw new Error("Cannot release a texture that was never provided by this texture manager");f.splice(m,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function vx(e,t,n,r,o){const c=function(e,t){switch(e){case lg.PACKED_2X2_FLOAT32:return ky(t);case lg.PACKED_2X2_FLOAT16:return Iy(t);case lg.UNPACKED_FLOAT32:return vy(t);case lg.UNPACKED_FLOAT16:return Oy(t);case lg.PACKED_4X1_UNSIGNED_BYTE:return wy(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let l;if(o){const[t,n]=pg(e[0],e[1]);l=t*n}else{const[t,n]=dg(e[0],e[1]);l=t*n}const d=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,c);return l*d}function Ox(e,t){if(e===cg.UPLOAD)return lg.PACKED_2X2_FLOAT32;if(e===cg.RENDER||null==e)return function(e){return Object(o.Wd)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?lg.PACKED_2X2_FLOAT32:lg.UNPACKED_FLOAT32:e?lg.PACKED_2X2_FLOAT16:lg.UNPACKED_FLOAT16}(t);if(e===cg.DOWNLOAD||e===cg.PIXELS)return lg.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function wx(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class kx{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=cy(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Ix="return abs(x);";const Sx="return x;";class Nx{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=cy(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class jx{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=cy(this.outputShape.length);const t=e.length,n=bx("rc",t),r=ay(t),o=function(e,t){if(1===e)return"rc";let n="";for(let i=0;i<e;i++)n+=t[i],i<e-1&&(n+=",");return n}(t,n),c=n.slice(-2),l=t<=1?"rc":`vec2(${c.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${o});\n\n        setOutput(getChannel(packedInput, ${l}));\n      }\n    `}}const Tx=o.ke.whereImpl,Cx={};const $x=Object(o.Wd)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Ex extends o.xb{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Object(o.Wd)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof Ny)t=e;else{const n=og(Object(o.Wd)().getNumber("WEBGL_VERSION"),e);t=new Ny(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=og(Object(o.Wd)().getNumber("WEBGL_VERSION"));t=new Ny(e),this.binaryCache=((n=Object(o.Wd)().getNumber("WEBGL_VERSION"))in Cx||(Cx[n]={}),Cx[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new xx(this.gpgpu),this.numMBBeforeWarning=null==Object(o.Wd)().global.screen?1024:Object(o.Wd)().global.screen.height*Object(o.Wd)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new o.M(this,Object(o.Vd)())}nextDataId(){return Ex.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Object(o.Wd)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(o.Wd)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:cg.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,c){if(Object(o.Wd)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:cg.UPLOAD,refCount:c})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:c,slice:l,shape:d,isPacked:h}=t;if(null!=l){let t;t=h?new Nx(d,Sx):new kx(d,Sx);const n=this.runWebGLProgram(t,[{dataId:e,shape:d,dtype:r}],r),data=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),data}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const f=null!=this.activeTimers;let m,y;if(f&&(m=o.yf.now()),"complex64"===r){const e=this.readSync(c.real.dataId),t=this.readSync(c.imag.dataId);y=o.vd.mergeRealAndImagArrays(e,t)}else y=this.getValuesFromTexture(e);return f&&(this.downloadWaitMs+=o.yf.now()-m),this.convertAndCacheOnCPU(e,y)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:c,dtype:l,complexTensorInfos:d,isPacked:h}=t;if(null!=c){let t;t=h?new Nx(r,Sx):new kx(r,Sx);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:l}],l),data=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),data}if(null!=n)return this.convertAndCacheOnCPU(e);if(Object(o.Wd)().getBool("DEBUG")&&!Object(o.Wd)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(o.Wd)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let f,m,y=null;if("complex64"!==l&&Object(o.Wd)().get("WEBGL_BUFFER_SUPPORTED")){f=this.decode(e);const t=this.texData.get(f.dataId);y=this.gpgpu.createBufferFromTexture(t.texture.texture,...hg(r))}if(this.pendingRead.set(e,[]),"complex64"!==l&&await this.gpgpu.createAndWaitForFence(),"complex64"===l){const e=await Promise.all([this.read(d.real.dataId),this.read(d.imag.dataId)]),t=e[0],n=e[1];m=o.vd.mergeRealAndImagArrays(t,n)}else if(null==y)m=this.getValuesFromTexture(e);else{const e=o.yf.sizeFromShape(r);m=this.gpgpu.downloadFloat32MatrixFromBuffer(y,e)}if(null!=f&&this.disposeIntermediateTensorInfo(f),null!=y){const e=this.gpgpu.gl;mg(e,(()=>e.deleteBuffer(y)))}const x=this.convertAndCacheOnCPU(e,m),v=this.pendingRead.get(e);return this.pendingRead.delete(e),v.forEach((e=>e(x))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Object(o.Vd)().removeDataId(e,this),this.pendingDeletes--),x}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:c,slice:l,dtype:d,isPacked:h,texture:f}=n;if("complex64"===d)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=l){let n;n=h?new Nx(c,Sx):new kx(c,Sx);const r=this.runWebGLProgram(n,[{dataId:e,shape:c,dtype:d}],d),o=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),o}if(null==f)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const m=this.decode(e,t.customTexShape),y=Object(o.Vd)().makeTensorFromDataId(m.dataId,m.shape,m.dtype),x=this.texData.get(m.dataId);return Object.assign({tensorRef:y},x.texture)}bufferSync(e){const data=this.readSync(e.dataId);let t=data;if("string"===e.dtype)try{t=data.map((e=>o.yf.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(o.Bd)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let i=0;i<e.length;i++){const t=e[i];if(!bg(t)){if(Object(o.Wd)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${t} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${t} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),c=o.yf.sizeFromShape(t);if(Object(o.Wd)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),o=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...hg(t)).subarray(0,c);return this.disposeIntermediateTensorInfo(n),o}const l=Object(o.Wd)().getBool("WEBGL_PACK")&&!0===r,d=l?$g(t):t,h=l?new py(d):new hy(d),output=this.runWebGLProgram(h,[{shape:d,dtype:n,dataId:e}],"float32"),f=this.texData.get(output.dataId),m=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(f.texture.texture,f.texShape[0],f.texShape[1]).subarray(0,c);return this.disposeIntermediateTensorInfo(output),m}timerAvailable(){return Object(o.Wd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const c=o.yf.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),l=o.yf.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const d={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Object(o.Wd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(c);d.kernelMs=o.yf.sum(e),d.getExtraProfileInfo=()=>e.map(((e,i)=>({name:l[i],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else d.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,d})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(o.Wd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:o.yf.now(),endMs:null}}endTimer(e){return Object(o.Wd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=o.yf.now(),e)}async getQueryTime(e){if(Object(o.Wd)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:o,isPacked:c,slice:l}=this.texData.get(e),d=l&&l.origDataId||e,h=this.dataRefCount.get(d);h>1?this.dataRefCount.set(d,h-1):(this.dataRefCount.delete(d),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,o,c)));const f=this.texData.get(e);f.texture=null,f.texShape=null,f.isPacked=!1,f.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=$x){return Object(o.Wd)().getBool("WEBGL_CPU_FORWARD")&&e.every((input=>null==this.texData.get(input.dataId).texture&&o.yf.sizeFromShape(input.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){o.vd.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Tx(e.shape,t)}packedUnaryOp(e,t,n){const r=new Nx(e.shape,t),c=this.compileAndRun(r,[e],n);return Object(o.Vd)().makeTensorFromDataId(c.dataId,c.shape,c.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=ex(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Object(o.Wd)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Ix,e.dtype);const t=new kx(e.shape,Ix),n=this.compileAndRun(t,[e]);return Object(o.Vd)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&o.yf.isString(n[0])){const c=n.map((e=>o.yf.encodeString(e)));r=this.write(c,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Object(o.Vd)().makeTensorFromDataId(r,e,t,this)}unpackTensor(input){const e=new jx(input.shape);return this.runWebGLProgram(e,[input],input.dtype)}packTensor(input){const e=new gx(input.shape);return this.runWebGLProgram(e,[input],input.dtype,null,!0)}packedReshape(input,e){const t=[Tg(input.shape),...Cg(input.shape)],n={dtype:input.dtype,shape:t,dataId:input.dataId},r=[Tg(e),...Cg(e)],o=new yx(r,t),c=[t],output=this.runWebGLProgram(o,[n],input.dtype,c,!0);return{dataId:output.dataId,shape:e,dtype:output.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:c,dtype:l}=n;if(null!=t){const e=o.yf.sizeFromShape(c),n=t[0]*t[1]*4;o.yf.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const d=$g(c);let h;h=r?new dy(d):new ly(d);const f=[null!=t?t:hg(d)];return{dtype:l,shape:c,dataId:this.runWebGLProgram(h,[{shape:d,dtype:l,dataId:e}],l,f,!0,t).dataId}}runWebGLProgram(e,t,n,r,c=!1,l){const output=this.makeTensorInfo(e.outputShape,n),d=this.texData.get(output.dataId);if(e.packedOutput&&(d.isPacked=!0),e.outPackingScheme===ug.DENSE){const t=null!=l?l:hg(e.outputShape);d.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(d.usage=e.outTexUsage),0===o.yf.sizeFromShape(output.shape))return d.values=o.yf.getTypedArrayFromDType(output.dtype,0),output;const h=[],f=t.map((input=>{if("complex64"===input.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let t=this.texData.get(input.dataId);if(null==t.texture){if(!e.packedInputs&&o.yf.sizeFromShape(input.shape)<=Object(o.Wd)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:input.shape,texData:null,isUniform:!0,uniformValues:t.values};e.packedInputs&&(t.isPacked=!0,t.shape=input.shape)}if(this.uploadToGPU(input.dataId),!!t.isPacked!=!!e.packedInputs)input=t.isPacked?this.unpackTensor(input):this.packTensor(input),h.push(input),t=this.texData.get(input.dataId);else if(t.isPacked&&!Ag(t.shape,input.shape)){const e=input,n=input.shape;input.shape=t.shape,input=this.packedReshape(input,n),h.push(input),t=this.texData.get(input.dataId),e.shape=n}return{shape:input.shape,texData:t,isUniform:!1}}));this.uploadToGPU(output.dataId);const m={shape:output.shape,texData:d,isUniform:!1},y=function(e,t,output){let n="";t.concat(output).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const c=t.texData.texShape,{useSqueezeShape:l,uniformShape:d,keptDims:h}=sy(e.packedInputs,t.shape,c);let f="",m="",y="";if(1===d.length&&e.packedInputs){const e=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)];f=`${e[0]>1}_${e[1]>1}`}else if(2!==d.length||e.packedInputs){if(d.length>2&&!e.packedInputs){const e=o.yf.computeStrides(d);y=`${e[0]===c[1]}_${e[e.length-1]===c[1]}`}}else m=`${d[0]>1}_${d[1]>1}`;const x=t.shape.length,v=2===d.length&&o.yf.arraysEqual(t.shape,c),O=1===o.yf.sizeFromShape(t.shape),w=o.vd.getBroadcastDims(t.shape,output.shape),k=!e.packedInputs&&x===output.shape.length&&o.yf.arraysEqual(c,output.texData.texShape),I=e.packedInputs||d.length>2?"":`${c[0]>1}_${c[1]>1}`;n+=`${x}_${k}_${l?h:""}_${d.length}_${O}_${w}_${v}_${f}_${m}_${y}_${I}_${r}`}else{const e=t.isUniform?"uniform":t.texData.texShape;n+=`${t.shape}_${e}_${r}`}}));const r=e.userCode;let c=e.constructor.name;return c+="_"+n+"_"+r+`${Object(o.Wd)().getNumber("WEBGL_VERSION")}`,c}(e,f,m),x=this.getAndSaveBinary(y,(()=>function(e,t,n,output){const r=n.map(((input,i)=>{const e={logicalShape:input.shape,texShape:input.isUniform?null:input.texData.texShape,isUniform:input.isUniform,isPacked:!input.isUniform&&input.texData.isPacked,flatOffset:null};return null!=input.texData&&null!=input.texData.slice&&input.texData.slice.flatOffset>0&&(e.flatOffset=input.texData.slice.flatOffset),{name:t.variableNames[i],shapeInfo:e}})),c=r.map((e=>e.shapeInfo)),l={logicalShape:output.shape,texShape:output.texData.texShape,isUniform:!1,isPacked:output.texData.isPacked,flatOffset:null},source=Kg(r,l,t),d=yg(e.gl,source),h=e.createProgram(d);let f=null;const m=e.getUniformLocation(h,"NAN",!1);1===Object(o.Wd)().getNumber("WEBGL_VERSION")&&(f=e.getUniformLocation(h,"INFINITY",!1));const y=!1,x={},v={},O={};for(let i=0;i<t.variableNames.length;i++){const n=t.variableNames[i];x[n]=e.getUniformLocation(h,n,y),x[`offset${n}`]=e.getUniformLocation(h,`offset${n}`,y),t.enableShapeUniforms&&(v[`${n}Shape`]=e.getUniformLocation(h,`${n}Shape`,y),O[`${n}TexShape`]=e.getUniformLocation(h,`${n}TexShape`,y))}let w,k,I;t.enableShapeUniforms&&(w=e.getUniformLocation(h,"outShape",y),I=e.getUniformLocation(h,"outShapeStrides",y),k=e.getUniformLocation(h,"outTexShape",y));const S=[];return t.customUniforms&&t.customUniforms.forEach(((t,i)=>{S[i]=e.getUniformLocation(h,t.name,y)})),{program:t,fragmentShader:d,source:source,webGLProgram:h,uniformLocations:x,customUniformLocations:S,inShapeInfos:c,outShapeInfo:l,infLoc:f,nanLoc:m,inShapesLocations:v,inTexShapesLocations:O,outShapeLocation:w,outShapeStridesLocation:I,outTexShapeLocation:k}}(this.gpgpu,e,f,m))),v=null!=this.activeTimers;let O;v&&(O=this.startTimer()),function(e,t,n,output,r){t.program.enableShapeUniforms||(uy(t.inShapeInfos,n),uy([t.outShapeInfo],[output]));const c=output.texData.texture,l=output.texData.texShape;output.texData.isPacked?e.setOutputPackedMatrixTexture(c.texture,l[0],l[1]):e.setOutputMatrixTexture(c.texture,l[0],l[1]),e.setProgram(t.webGLProgram),1===Object(o.Wd)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((input,i)=>{const n=t.program.variableNames[i],r=t.uniformLocations[n],c=t.uniformLocations[`offset${n}`],l=t.inShapesLocations[`${n}Shape`],d=t.inTexShapesLocations[`${n}TexShape`];if(l){const{uniformShape:n}=sy(t.program.packedInputs,input.shape,input.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(l,new Int32Array(n));break;case 2:e.gl.uniform2iv(l,new Int32Array(n));break;case 3:e.gl.uniform3iv(l,new Int32Array(n));break;case 4:e.gl.uniform4iv(l,new Int32Array(n))}}if(d&&e.gl.uniform2i(d,input.texData.texShape[0],input.texData.texShape[1]),null!=r)if(input.isUniform)if(o.yf.sizeFromShape(input.shape)<2)e.gl.uniform1f(r,input.uniformValues[0]);else{let t=input.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=input.texData.slice&&null!=c&&e.gl.uniform1i(c,input.texData.slice.flatOffset),e.setInputMatrixTexture(input.texData.texture.texture,r,i)}));const d=t.outShapeLocation;if(d)switch(output.shape.length){case 1:e.gl.uniform1iv(d,new Int32Array(output.shape));break;case 2:e.gl.uniform2iv(d,new Int32Array(output.shape));break;case 3:e.gl.uniform3iv(d,new Int32Array(output.shape));break;case 4:e.gl.uniform4iv(d,new Int32Array(output.shape))}if(t.outShapeStridesLocation){const n=o.yf.computeStrides(output.shape);switch(output.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,output.texData.texShape[0],output.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach(((n,i)=>{const o=t.customUniformLocations[i],c=r[i];if("float"===n.type)e.gl.uniform1fv(o,c);else if("vec2"===n.type)e.gl.uniform2fv(o,c);else if("vec3"===n.type)e.gl.uniform3fv(o,c);else if("vec4"===n.type)e.gl.uniform4fv(o,c);else if("int"===n.type)e.gl.uniform1iv(o,c);else if("ivec2"===n.type)e.gl.uniform2iv(o,c);else if("ivec3"===n.type)e.gl.uniform3iv(o,c);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(o,c)}})),e.executeProgram()}(this.gpgpu,x,f,m,r),h.forEach((e=>this.disposeIntermediateTensorInfo(e))),v&&(O=this.endTimer(O),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(O)}));const w=Object(o.Wd)().get("WEBGL_FLUSH_THRESHOLD");if(w>0){const time=o.yf.now();time-this.lastGlFlushTime>w&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=time)}if(!Object(o.Wd)().getBool("WEBGL_LAZILY_UNPACK")&&d.isPacked&&!1===c){const e=this.unpackTensor(output);return this.disposeIntermediateTensorInfo(output),e}return output}compileAndRun(e,t,n,r,o=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(o.Wd)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(o.rf)((()=>{if(!Object(o.Wd)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Object(o.Wd)().getBool("DEBUG");Object(o.Wd)().set("DEBUG",!1);const t=this.abs(Object(o.Re)(1e-8)).dataSync()[0];if(Object(o.Wd)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:c,texture:l,usage:d,isPacked:h}=t;if(null!=l)return;const f=null!=this.activeTimers;let m;f&&(m=o.yf.now());let y=t.texShape;if(null==y&&(y=function(e,t=!1){let n=Object(o.Wd)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,i)=>i>=e.length-2?o.yf.nearestLargerEven(e[i]):e[i]))).length&&(e=[2,e[0]])),2!==e.length){const t=o.yf.squeezeShape(e);e=t.newShape}let r=o.yf.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=Tg(e);let n=2,c=2;return e.length&&([n,c]=Cg(e)),r=t*(n/2)*(c/2),o.yf.sizeToSquarishShape(r).map((e=>2*e))}return o.yf.sizeToSquarishShape(r)}(n,h),t.texShape=y),null!=c){const e=$g(n);let l,d=y[1],x=y[0];const v=c instanceof Uint8Array||c instanceof Uint8ClampedArray;!h&&v||([d,x]=pg(y[0],y[1])),l=h?new my(e,v):new fy(e,v);const O=v?[x,d]:y,w=this.makeTensorInfo(O,r),k=this.texData.get(w.dataId);k.usage=v?cg.PIXELS:cg.UPLOAD,k.texShape=O,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(w.dataId),d,x,c);const I=[[x,d]],S=!0,N=this.runWebGLProgram(l,[w],r,I,S),j=this.texData.get(N.dataId);t.texture=j.texture,t.texShape=j.texShape,t.isPacked=j.isPacked,t.usage=j.usage,this.disposeIntermediateTensorInfo(w),this.texData.delete(N.dataId),t.values=null,f&&(this.uploadWaitMs+=o.yf.now()-m)}else{const e=this.acquireTexture(y,d,r,h);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(a,e){if("float32"===e||"complex64"===e)return a;if("int32"===e||"bool"===e){const t="int32"===e?new Int32Array(a.length):new Uint8Array(a.length);for(let i=0;i<t.length;++i)t[i]=Math.round(a[i]);return t}throw new Error(`Unknown dtype ${e}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*o.yf.bytesPerElement(t)}}Ex.nextDataId=0;o.Qd.isBrowser()&&Object(o.Me)("webgl",(()=>new Ex),2);class Ax{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=o.vd.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=cy(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class Rx{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o.vd.assertAndGetBroadcastShape(t,n);const c=this.outputShape.length;this.enableShapeUniforms=cy(c);let l="";if(r)if(0===c||1===o.yf.sizeFromShape(this.outputShape))l="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(l=`\n          ${ay(c)} coords = getOutputCoords();\n        `,1===c)this.enableShapeUniforms?l+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":l+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=bx("coords",c);this.enableShapeUniforms?l+=`\n            bool nextRowOutOfBounds =\n              (${e[c-2]} + 1) >= outShape[${c} - 2];\n            bool nextColOutOfBounds =\n              (${e[c-1]} + 1) >= outShape[${c} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:l+=`\n            bool nextRowOutOfBounds =\n              (${e[c-2]} + 1) >= ${this.outputShape[c-2]};\n            bool nextColOutOfBounds =\n              (${e[c-1]} + 1) >= ${this.outputShape[c-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${l}\n\n        setOutput(result);\n      }\n    `}}function Fx(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Dx={kernelName:o.sb,backendName:"webgl",kernelFunc:Fx};function _x(e){const{inputs:t,backend:n}=e,{real:r,imag:o}=t,c=n.makeTensorInfo(r.shape,"complex64"),l=n.texData.get(c.dataId),d=Fx({inputs:{x:r},backend:n}),h=Fx({inputs:{x:o},backend:n});return l.complexTensorInfos={real:d,imag:h},c}const Mx={kernelName:o.z,backendName:"webgl",kernelFunc:_x},zx="return (a < 0.) ? b * a : a;",Lx="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Px={kernelName:o.Ab,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{alpha:l}=r,d=n.makeTensorInfo([],"float32",o.yf.createScalarValue(l,"float32")),h=Object(o.Wd)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rx(Lx,c.shape,d.shape):new Ax(zx,c.shape,d.shape),f=n.runWebGLProgram(h,[c,d],"float32");return n.disposeIntermediateTensorInfo(d),f}},Bx="return (a < 0.) ? b * a : a;",Wx="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Ux={kernelName:o.ic,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:c}=t,l=Object(o.Wd)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rx(Wx,r.shape,c.shape):new Ax(Bx,r.shape,c.shape);return n.runWebGLProgram(l,[r,c],"float32")}};function Vx({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:c,backend:l})=>{const{x:d}=c,h=l,f=r||d.dtype;if(h.shouldExecuteOnCPU([d])&&null!=n){const e=h.texData.get(d.dataId),t=n(e.values,f);return h.makeTensorInfo(d.shape,f,t)}let m;return m=Object(o.Wd)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Nx(d.shape,t):new kx(d.shape,e),h.runWebGLProgram(m,[d],f)}}function Gx({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:c,dtype:l}){return({inputs:d,backend:h})=>{const{a:a,b:b}=d,f=h;if(r&&"complex64"===a.dtype){const t=f.texData.get(a.dataId),n=f.texData.get(b.dataId),[r,c]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,c={dataId:n.dataId,dtype:n.dtype,shape:a.shape},l={dataId:r.dataId,dtype:r.dtype,shape:b.shape},d=new Ax(e,a.shape,b.shape);return f.runWebGLProgram(d,[c,l],Object(o.xf)(n.dtype,r.dtype))})),l=_x({inputs:{real:r,imag:c},backend:f});return f.disposeIntermediateTensorInfo(r),f.disposeIntermediateTensorInfo(c),l}const m=l||Object(o.xf)(a.dtype,b.dtype);if(("string"===a.dtype||"string"===b.dtype||f.shouldExecuteOnCPU([a,b]))&&null!=c){const e=f.texData.get(a.dataId).values,t=f.texData.get(b.dataId).values,n="string"===a.dtype?o.vd.fromUint8ToStringArray(e):e,r="string"===a.dtype?o.vd.fromUint8ToStringArray(t):t,[l,d]=c(a.shape,b.shape,n,r,m),h=f.makeTensorInfo(d,m);return f.texData.get(h.dataId).values=l,h}let y;return y=Object(o.Wd)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Rx(t,a.shape,b.shape,n):new Ax(e,a.shape,b.shape),f.runWebGLProgram(y,[a,b],m)}}function Hx(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?Wx:Bx;if("leakyrelu"===e)return t?Lx:zx;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class qx{constructor(e,t,n,r=!1,o=!1,c=!1,l=null,d=!1,h=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=cy(this.outputShape.length);const f=r?e[1]:e[2],m=Math.ceil(f/2),y=r?"i * 2, rc.y":"rc.y, i * 2",x=o?"rc.z, i * 2":"i * 2, rc.z",v=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],O=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let w="",k="";l&&(w=d?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${l}\n        }`:h?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${l}\n        }`:`vec4 activation(vec4 x) {\n          ${l}\n        }`,k="result = activation(result);");const I=c?"result += getBiasAtOutCoords();":"";c&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),h&&this.variableNames.push("leakyreluAlpha");let S="rc.x",N="rc.x";e[0]<t[0]?S=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(N=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${w}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${m}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${m}; i++) {\n          int batchA = ${S};\n          int batchB = ${N};\n          vec4 a = getMatrixA(batchA, ${y});\n          vec4 b = getMatrixB(batchB, ${x});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${v[0]} * ${O[0]});\n          result += (${v[1]} * ${O[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${I}\n\n        ${k}\n\n        setOutput(result);\n      }\n    `}}const Kx="return areal * breal - aimag * bimag;",Xx="return areal * bimag + aimag * breal;";class Yx{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=o.vd.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Zx="return a * b;";function Jx(e){const{inputs:t,backend:n}=e,{a:a,b:b}=t,r=o.vd.upcastType(a.dtype,b.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(b.dataId),r=new Yx(Kx,a.shape,b.shape),o=new Yx(Xx,a.shape,b.shape),c=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:b.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:b.shape}],l=n.runWebGLProgram(r,c,"float32"),d=n.runWebGLProgram(o,c,"float32"),h=_x({inputs:{real:l,imag:d},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),h}if(n.shouldExecuteOnCPU([a,b])){const e=n.texData.get(a.dataId),t=n.texData.get(b.dataId),[o,c]=qy(a.shape,b.shape,e.values,t.values,r),l=n.makeTensorInfo(c,r);return n.texData.get(l.dataId).values=o,l}let c;return c=Object(o.Wd)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rx(Zx,a.shape,b.shape):new Ax(Zx,a.shape,b.shape),n.runWebGLProgram(c,[a,b],r)}const Qx={kernelName:o.Wb,backendName:"webgl",kernelFunc:Jx};function ev(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{shape:l}=r,d=n,h=o.yf.sizeFromShape(c.shape),f=o.yf.inferFromImplicitShape(l,h),m=o.yf.sizeFromShape(f);o.yf.assert(h===m,(()=>`The new shape (${f}) has ${m} elements and the old shape (${c.shape}) has ${h} elements. The new shape and old shape must have the same number of elements.`));const y=d.texData.get(c.dataId);return!y.isPacked||Ag(c.shape,f)||null!==y.texture&&Ag(y.shape,f)?(d.incRef(c.dataId),{dataId:c.dataId,shape:f,dtype:c.dtype}):function(input,e,t){const n=[Tg(input.shape),...Cg(input.shape)],r={dtype:input.dtype,shape:n,dataId:input.dataId},o=[Tg(e),...Cg(e)],c=new yx(o,n),l=[n],output=t.runWebGLProgram(c,[r],input.dtype,l,!0);return{dataId:output.dataId,shape:e,dtype:output.dtype}}(c,f,d)}const tv={kernelName:o.qc,backendName:"webgl",kernelFunc:ev};class nv{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:c,outSize:l}=e;this.outputShape=[r,l];const d=4*Math.floor(n/4),h=n%4;let f="sumValue += dot(values, ones);";if(null!=t){const e=1/t;f=`sumValue += dot(values * ${o.yf.isInt(e)?e.toPrecision(2):e}, ones);`}let m="";c%n>0&&(m=`\n        if (inIdx < 0 || inIdx >= ${c}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${m}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${d}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${f}\n        }\n\n        int inIdx = inOffset + ${d};\n        if (${1===h}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${f}\n        } else if (${2===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${f}\n        } else if (${3===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${f}\n        }\n        setOutput(sumValue);\n      }\n    `}}class rv{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:o,outSize:c}=e;this.outputShape=[r,c];let l="0.0",d="";"prod"===t?l="1.0":"min"===t?(l="1.0 / 1e-20",d="min"):"max"===t&&(l="-1.0 / 1e-20",d="max");let h=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?h="sumValue":"prod"===t?h="prodValue":"all"===t?h="allValue":"any"===t&&(h="anyValue");const f=4*Math.floor(n/4),m=n%4;let y=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${d}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${d}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,x="vec4";"all"===t?(l="1.0",y="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",x="bvec4"):"any"===t&&(l="0.0",y="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",x="bvec4");let v="";o%n>0&&(v=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${l};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${v}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${l});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${f}; i += 4) {\n          int inIdx = inOffset + i;\n          ${x} values = ${x}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${y}\n        }\n\n        int inIdx = inOffset + ${f};\n        if (${1===m}) {\n          ${x} values = ${x}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${y}\n        } else if (${2===m}) {\n          ${x} values = ${x}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${y}\n        } else if (${3===m}) {\n          ${x} values = ${x}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${y}\n        }\n        setOutput(${h});\n      }\n    `}}function av(e,t,n,r){const c=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=o.vd.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let l=e;for(let i=0;i<c.length;i++){const{inSize:o,windowSize:d,outSize:h}=c[i];let f,m;f="mean"===n?0===i?new nv({windowSize:d,inSize:o,batchSize:e.shape[0],outSize:h},o):new nv({windowSize:d,inSize:o,batchSize:e.shape[0],outSize:h}):new rv({windowSize:d,inSize:o,batchSize:e.shape[0],outSize:h},n),m=l,l=r.runWebGLProgram(f,[l],t),m.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(m)}return l}class sv{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[t[i]];this.outputShape=n,this.rank=n.length;const r=ay(this.rank),o=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let i=0;i<e.length;i++)r[e[i]]=n[i];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${o}));\n    }\n    `}}class iv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[t[i]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=ay(this.rank),o=mx("rc",this.rank),c=new Array(this.rank);for(let i=0;i<t.length;i++)c[t[i]]=o[i];const l=`vec2(${c.slice(-2).join()})`,d=`++${o[this.rank-1]} < ${n[this.rank-1]}`,h=`getChannel(getA(${c.join()}), ${l})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${h};\n      if(${d}) {\n        result[1] = ${h};\n      }\n      --${o[this.rank-1]};\n      if(++${o[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${h};\n        if(${d}) {\n          result[3] = ${h};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function ov(e,t,n){const r=Object(o.Wd)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iv(e.shape,t):new sv(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function uv(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r;return function(e,t,n,r){const c=t,l=e.shape.length,d=o.yf.parseAxisParam(c,e.shape);let h=d;const f=o.vd.getAxesPermutation(h,l),m=null!=f;let y=e;m&&(y=ov(e,f,r),h=o.vd.getInnerMostAxes(h.length,l)),o.vd.assertAxesAreInnerMostDims("sum",h,l);const[x,v]=o.vd.computeOutAndReduceShapes(y.shape,h);let O=x;n&&(O=o.vd.expandShapeToKeepDim(x,d));const w=o.yf.sizeFromShape(v),k=ev({inputs:{x:y},attrs:{shape:[o.yf.sizeFromShape(e.shape)/w,w]},backend:r}),I=av(k,Object(o.lf)(e.dtype),"sum",r),S=ev({inputs:{x:I},attrs:{shape:O},backend:r});return r.disposeIntermediateTensorInfo(k),r.disposeIntermediateTensorInfo(I),m&&r.disposeIntermediateTensorInfo(y),S}(c,l,d,n)}const cv={kernelName:o.Zc,backendName:"webgl",kernelFunc:uv};function lv(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{perm:c}=r,l=n,d=o.shape.length,h=new Array(d);for(let i=0;i<h.length;i++)h[i]=o.shape[c[i]];let f;if(l.shouldExecuteOnCPU([o])){const e=l.texData.get(o.dataId).values,t=px(e,o.shape,o.dtype,c,h);f=l.makeTensorInfo(h,o.dtype);l.texData.get(f.dataId).values=t}else f=ov(o,c,l);return f}const dv={kernelName:o.hd,backendName:"webgl",kernelFunc:lv};function hv({a:a,b:b,transposeA:e,transposeB:t,backend:n,bias:r=null,preluActivationWeights:c=null,leakyreluAlpha:l=0,activation:d=null}){const h=a.shape.length,f=b.shape.length,m=e?a.shape[h-2]:a.shape[h-1],y=t?b.shape[f-1]:b.shape[f-2],x=e?a.shape[h-1]:a.shape[h-2],v=t?b.shape[f-2]:b.shape[f-1],O=a.shape.slice(0,-2),w=b.shape.slice(0,-2),k=o.yf.sizeFromShape(O),I=o.yf.sizeFromShape(w),S=o.zd.assertAndGetBroadcastShape(a.shape.slice(0,-2),b.shape.slice(0,-2)).concat([x,v]);o.yf.assert(m===y,(()=>`Error in matMul: inner shapes (${m}) and (${y}) of Tensors with shapes ${a.shape} and ${b.shape} and transposeA=${e} and transposeB=${t} must match.`));const N=e?[k,m,x]:[k,x,m],j=t?[I,v,y]:[I,y,v],T=ev({inputs:{x:a},backend:n,attrs:{shape:N}}),C=ev({inputs:{x:b},backend:n,attrs:{shape:j}}),$=[T,C],E=Math.max(k,I),A=e?T.shape[1]:T.shape[2],R=null!=r,F=null!=c,D="leakyrelu"===d,_=null!=d?Hx(d,!0):null;let M;if((1===x||1===v)&&A>1e3&&!1===(R||F||D||null!=_)){let r=T,o=C;e&&(r=lv({inputs:{x:T},backend:n,attrs:{perm:[0,2,1]}}),$.push(r)),t&&(o=lv({inputs:{x:C},backend:n,attrs:{perm:[0,2,1]}}),$.push(o));const c=1===v;let l=r;1!==v&&(l=ev({inputs:{x:r},backend:n,attrs:{shape:[E,A,1]}}),$.push(l));const d=1===v?2:1;let h=o;c&&(h=ev({inputs:{x:o},backend:n,attrs:{shape:[E,1,A]}}),$.push(h));const f=Jx({inputs:{a:l,b:h},backend:n});M=uv({inputs:{x:f},backend:n,attrs:{axis:d,keepDims:!0}}),$.push(f)}else{const d=Object(o.xf)(a.dtype,b.dtype),h=new qx(N,j,[E,x,v],e,t,R,_,F,D),f=[T,C];if(null!=r&&f.push(r),F&&f.push(c),D){const e=n.makeTensorInfo([],"float32",o.yf.createScalarValue(l,"float32"));f.push(e),$.push(e)}M=n.runWebGLProgram(h,f,d)}const z=ev({inputs:{x:M},backend:n,attrs:{shape:S}});$.push(M);for(const i of $)n.disposeIntermediateTensorInfo(i);return z}const pv={kernelName:o.md,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:b,bias:o,preluActivationWeights:c}=t,{transposeA:l,transposeB:d,activation:h,leakyreluAlpha:f}=r;return hv({a:a,b:b,transposeA:l,transposeB:d,backend:n,bias:o,preluActivationWeights:c,leakyreluAlpha:f,activation:h})}},fv="return abs(x);";const mv={kernelName:o.a,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=ex(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let c;return c=Object(o.Wd)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Nx(r.shape,fv):new kx(r.shape,fv),n.runWebGLProgram(c,[r],r.dtype)}},bv=Vx({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),gv={kernelName:o.b,backendName:"webgl",kernelFunc:bv},yv=Vx({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),xv={kernelName:o.c,backendName:"webgl",kernelFunc:yv},vv="return a + b;",Ov=Gx({opSnippet:vv,packedOpSnippet:vv,supportsComplex:!0,cpuKernelImpl:jy}),wv={kernelName:o.d,backendName:"webgl",kernelFunc:Ov};class kv{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,i)=>`T${i}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Iv{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,i)=>`T${i}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Sv={kernelName:o.e,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,c=n;if(1===c.length)return Fx({inputs:{x:c[0]},backend:r});if(c.length>Object(o.Wd)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(c.length/2),n=e({inputs:c.slice(0,t),backend:r}),o=e({inputs:c.slice(t),backend:r});return e({inputs:[n,o],backend:r})}const l=c.map((e=>e.dtype)).reduce(((e,t)=>Object(o.xf)(e,t))),d=c.map((e=>e.shape)),h=Object(o.Wd)().getBool("WEBGL_PACK")?new Iv(c[0].shape,d):new kv(c[0].shape,d);return r.runWebGLProgram(h,c,l)}};const Nv={kernelName:o.f,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r,h=c.shape.length,f=o.yf.parseAxisParam(l,c.shape);let m=f;const y=o.vd.getAxesPermutation(m,h);let x=c;null!=y&&(x=lv({inputs:{x:c},backend:n,attrs:{perm:y}}),m=o.vd.getInnerMostAxes(m.length,h)),o.vd.assertAxesAreInnerMostDims("all",m,h);const[v,O]=o.vd.computeOutAndReduceShapes(x.shape,m),w=ev({inputs:{x:x},backend:n,attrs:{shape:[-1,o.yf.sizeFromShape(O)]}}),k=av(w,w.dtype,"all",n);let I;if(d){I=ev({inputs:{x:k},backend:n,attrs:{shape:o.vd.expandShapeToKeepDim(v,f)}})}else I=ev({inputs:{x:k},backend:n,attrs:{shape:v}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),null!=y&&n.disposeIntermediateTensorInfo(x),I}};const jv={kernelName:o.g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r,h=c.shape.length,f=o.yf.parseAxisParam(l,c.shape);let m=f;const y=o.vd.getAxesPermutation(m,h);let x=c;null!=y&&(x=lv({inputs:{x:c},backend:n,attrs:{perm:y}}),m=o.vd.getInnerMostAxes(m.length,h)),o.vd.assertAxesAreInnerMostDims("any",m,h);const[v,O]=o.vd.computeOutAndReduceShapes(x.shape,m),w=ev({inputs:{x:x},backend:n,attrs:{shape:[-1,o.yf.sizeFromShape(O)]}}),k=av(w,w.dtype,"any",n);let I;if(d){I=ev({inputs:{x:k},backend:n,attrs:{shape:o.vd.expandShapeToKeepDim(v,f)}})}else I=ev({inputs:{x:k},backend:n,attrs:{shape:v}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),null!=y&&n.disposeIntermediateTensorInfo(x),I}};class Tv{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:c}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[o,c];const l="max"===t?">":"<",d=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${d};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${l} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Cv{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,o.yf.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const c=e[e.length-1],l=Math.ceil(c/t);this.outputShape=e.slice(0,-1),l>1&&this.outputShape.push(l),r||this.variableNames.push("bestIndicesA");const d=this.outputShape,h=d.length,f=ay(h),m=bx("coords",h);let y,x;if(1===l){x=h+1;const e=ay(x);y=`\n        ${e} sourceLocR = ${e}(${m.join()}, 0);\n        ++${m[h-1]};\n        ${e} sourceLocG = ${e}(${m.join()}, 0);\n        ++${m[h-2]};\n        ${e} sourceLocA = ${e}(${m.join()}, 0);\n        --${m[h-1]};\n        ${e} sourceLocB = ${e}(${m.join()}, 0);\n        --${m[h-2]};`}else x=h,y=`\n        ${f} sourceLocR = coords;\n        ++${m[h-1]};\n        ${f} sourceLocG = coords;\n        ++${m[h-2]};\n        ${f} sourceLocA = coords;\n        --${m[h-1]};\n        ${f} sourceLocB = coords;\n        --${m[h-2]};`;const v=["x","y","z","w","u","v"].slice(0,x),O="."+v[x-1],w=v.map((e=>"int "+e)),k=bx("sourceLocR",x-1).concat("inIdx.r"),I=bx("sourceLocG",x-1).concat("inIdx.g"),S=bx("sourceLocB",x-1).concat("inIdx.b"),N=bx("sourceLocA",x-1).concat("inIdx.a"),j="max"===n?"greaterThan":"lessThan",T=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${k.join()}),\n                             getBestIndicesAChannel(${I.join()}),\n                             getBestIndicesAChannel(${S.join()}),\n                             getBestIndicesAChannel(${N.join()})));`,C=`vec4(\n            getAChannel(${k.join()}),\n            hasNextCol ? getAChannel(${I.join()}) : 0.,\n            hasNextRow ? getAChannel(${S.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${N.join()}) : 0.)`,$=r?"":`\n      float getBestIndicesAChannel(${w.join()}) {\n        return getChannel(getBestIndicesA(${v.join()}),\n                                          vec2(${v.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${w.join()}) {\n        return getChannel(getA(${v.join()}),\n                               vec2(${v.slice(-2).join()}));\n      }\n      ${$}\n      void main() {\n        ${f} coords = getOutputCoords();\n        bool hasNextCol = ${m[h-1]} < ${d[h-1]-1};\n        bool hasNextRow = ${m[h-2]} < ${d[h-2]-1};\n        ${y}\n        ivec4 srcIdx = ivec4(sourceLocR${O}, sourceLocG${O},\n          sourceLocB${O}, sourceLocA${O}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${C};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${T}\n          vec4 candidate = ${C};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${j}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function $v(e,t,n,r=null){let c=t.shape[0],l=t.shape[1];null!=r&&(c=r.shape[0],l=r.shape[1]);const d=o.vd.computeOptimalWindowSize(l),h={windowSize:d,inSize:l,batchSize:c,outSize:Math.ceil(l/d)},f=new Tv(h,n,null==r),m=[t];null!=r&&m.push(r);const output=e.runWebGLProgram(f,m,"int32");if(1===output.shape[1])return output;const y=$v(e,t,n,output);return e.disposeIntermediateTensorInfo(output),y}function Ev(e,t,n,r=null){const c=null!=r?r.shape:t.shape,l=c[c.length-1],d=o.vd.computeOptimalWindowSize(l),h=new Cv(c,d,n,null==r),f=null==r?[t]:[t,r],output=e.runWebGLProgram(h,f,"int32");if(output.shape.length===t.shape.length){const r=Ev(e,t,n,output);return e.disposeIntermediateTensorInfo(output),r}return output}function Av(e,t,n,r){const c=[n];if(o.vd.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),c,t.shape.length),!Object(o.Wd)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],l=e.texData.get(t.dataId);let d=t;null!==l&&l.isPacked&&(d=e.unpackTensor(t),n.push(d));const[h,f]=o.vd.computeOutAndReduceShapes(d.shape,c),m=o.yf.sizeFromShape(f),y=ev({inputs:{x:d},backend:e,attrs:{shape:[-1,m]}});n.push(y);const x=$v(e,y,r);n.push(x);const v=ev({inputs:{x:x},backend:e,attrs:{shape:h}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),v}return Ev(e,t,r)}const Rv={kernelName:o.h,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l}=r;let d=o.yf.parseAxisParam(l,c.shape);const h=o.vd.getAxesPermutation(d,c.shape.length);let f=c;const m=[];null!=h&&(f=lv({inputs:{x:c},backend:n,attrs:{perm:h}}),m.push(f),d=o.vd.getInnerMostAxes(d.length,f.shape.length)),o.vd.assertAxesAreInnerMostDims("argMax",[d[0]],f.shape.length);const y=Av(n,f,d[0],"max");return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const Fv={kernelName:o.i,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l}=r;let d=o.yf.parseAxisParam(l,c.shape);const h=o.vd.getAxesPermutation(d,c.shape.length);let f=c;const m=[];null!=h&&(f=lv({inputs:{x:c},backend:n,attrs:{perm:h}}),m.push(f),d=o.vd.getInnerMostAxes(d.length,f.shape.length)),o.vd.assertAxesAreInnerMostDims("argMin",[d[0]],f.shape.length);const y=Av(n,f,d[0],"min");return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},Dv=Vx({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),_v={kernelName:o.j,backendName:"webgl",kernelFunc:Dv},Mv=Vx({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),zv={kernelName:o.k,backendName:"webgl",kernelFunc:Mv},Lv=Vx({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Pv={kernelName:o.l,backendName:"webgl",kernelFunc:Lv},Bv=Gx({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Wv={kernelName:o.m,backendName:"webgl",kernelFunc:Bv},Uv=Vx({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Vv={kernelName:o.n,backendName:"webgl",kernelFunc:Uv};class Gv{constructor(e,t,n,r=!1,o=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const c=e.filterWidth,l=e.strideHeight,d=e.strideWidth,h=e.dilationHeight,f=e.dilationWidth,m=e.effectiveFilterHeight,y=e.effectiveFilterWidth,x=e.padInfo.top,v=e.padInfo.left;this.outputShape=e.outShape;const O="avg"===t,w=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,k=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let I="0.0";if(O||(I="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${l}, ${d});\n        const ivec2 pads = ivec2(${x}, ${v});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${m};\n              wR += ${h}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${y};\n                wC += ${f}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?o?w:k:`wR * ${y} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let S=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(S="avgValue / count");const N=4*Math.floor(c/4),j=c%4,T=`\n      if (${O}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${l}, ${d});\n      const ivec2 pads = ivec2(${x}, ${v});\n      const float initializationValue = ${I};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${I});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${m};\n            wR += ${h}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${N}; wC += 4) {\n            int xC = xCCorner + wC * ${f};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${f}, d),\n              getValue(batch, xR, xC + 2 * ${f}, d),\n              getValue(batch, xR, xC + 3 * ${f}, d)\n            );\n\n            ${T}\n          }\n\n          int xC = xCCorner + ${N};\n          if (${1===j}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${T}\n          } else if (${2===j}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${f}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${T}\n          } else if (${3===j}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${f}, d),\n              getValue(batch, xR, xC + 2 * ${f}, d),\n              initializationValue\n            );\n\n            ${T}\n          }\n        }\n        setOutput(${S});\n      }\n    `}}class Hv{constructor(e,t,n,r=!1,o=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const c=e.filterWidth,l=e.strideDepth,d=e.strideHeight,h=e.strideWidth,f=e.dilationDepth,m=e.dilationHeight,y=e.dilationWidth,x=e.effectiveFilterDepth,v=e.effectiveFilterHeight,O=e.effectiveFilterWidth,w=e.padInfo.front,k=e.padInfo.top,I=e.padInfo.left;this.outputShape=e.outShape;const S="avg"===t;let N="0.0";if(S||(N="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${l}, ${d}, ${h});\n        const ivec3 pads = ivec3(${w}, ${k}, ${I});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${x};\n              wD += ${f}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${v};\n                wR += ${m}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${O};\n                  wC += ${y}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${v} * ${O} +\n                      wR * ${O} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let j=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(j="avgValue / count");const T=4*Math.floor(c/4),C=c%4,$=`\n      if (${S}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${l}, ${d}, ${h});\n      const ivec3 pads = ivec3(${w}, ${k}, ${I});\n      const float initializationValue = ${N};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${N});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${x};\n            wD += ${f}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${v};\n            wR += ${m}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${T}; wC += 4) {\n              int xC = xCCorner + wC * ${y};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${y}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${y}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${y}, ch)\n              );\n\n              ${$}\n            }\n\n            int xC = xCCorner + ${T};\n            if (${1===C}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${$}\n            } else if (${2===C}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${y}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${$}\n            } else if (${3===C}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${y}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${y}, ch),\n                initializationValue\n              );\n\n              ${$}\n            }\n          }\n          setOutput(${j});\n        }\n      }\n    `}}const qv={kernelName:o.o,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t;Lg(c,"avgPool");const{filterSize:l,strides:d,pad:h,dimRoundingMode:f}=r;o.yf.assert(o.vd.eitherStridesOrDilationsAreOne(d,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${d} and dilations '1'`));const m=o.vd.computePool2DInfo(c.shape,l,d,1,h,f);if(1===m.filterWidth&&1===m.filterHeight&&o.yf.arraysEqual(m.inShape,m.outShape))return Fx({inputs:{x:c},backend:n});const y=new Gv(m,"avg",!1);return n.runWebGLProgram(y,[c],"float32")}};const Kv={kernelName:o.p,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{filterSize:l,strides:d,pad:h,dimRoundingMode:f,dataFormat:m}=r,y=o.vd.computePool3DInfo(c.shape,l,d,[1,1,1],h,f,m),x=new Hv(y,"avg",!1);return n.runWebGLProgram(x,[c],"float32")}};class Xv{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,o=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,y=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${f}, ${m});\n      const float avgMultiplier = float(${y});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${h};\n            wC+= ${l}) {\n            float dyC = float(dyCCorner + wC) / ${o}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Yv{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,o=e.strideDepth,c=e.strideHeight,l=e.strideWidth,d=e.dilationDepth,h=e.dilationHeight,f=e.dilationWidth,m=e.effectiveFilterDepth,y=e.effectiveFilterHeight,x=e.effectiveFilterWidth,v=m-1-e.padInfo.front,O=y-1-e.padInfo.top,w=x-1-e.padInfo.left,k=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${v}, ${O}, ${w});\n      const float avgMultiplier = float(${k});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${m};\n            wD += ${d}) {\n          float dyD = float(dyDCorner + wD) / ${o}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${y};\n              wR += ${h}) {\n            float dyR = float(dyRCorner + wR) / ${c}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${x};\n                wC += ${f}) {\n              float dyC = float(dyCCorner + wC) / ${l}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Zv={kernelName:o.q,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,input:input}=t,l=input,{filterSize:d,strides:h,pad:f,dimRoundingMode:m}=r,y=o.vd.computePool3DInfo(l.shape,d,h,[1,1,1],f,m),x=new Yv(y);return n.runWebGLProgram(x,[c],l.dtype)}};const Jv={kernelName:o.r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,input:input}=t,l=input;Lg([c,input],"avgPoolGrad");const{filterSize:d,strides:h,pad:f}=r,m=o.vd.computePool2DInfo(l.shape,d,h,1,f),y=new Xv(m);return n.runWebGLProgram(y,[c],l.dtype)}};const Qv={kernelName:o.s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:b}=t,{transposeA:o,transposeB:c}=r;return hv({a:a,b:b,transposeA:o,transposeB:c,backend:n})}};class eO{constructor(e,t,n,r,c,l){this.outputShape=[],this.variableNames=["x","mean","variance"],o.vd.assertAndGetBroadcastShape(e,t),o.vd.assertAndGetBroadcastShape(e,n);let d="0.0";null!=r&&(o.vd.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),d="getOffsetAtOutCoords()");let h="1.0";null!=c&&(o.vd.assertAndGetBroadcastShape(e,c),this.variableNames.push("scale"),h="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${d};\n        float scale = ${h};\n        float inv = scale * inversesqrt(variance + float(${l}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class tO{constructor(e,t,n,r,c,l){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],o.vd.assertAndGetBroadcastShape(e,t),o.vd.assertAndGetBroadcastShape(e,n);let d="vec4(0.0)";null!=r&&(o.vd.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),d="getOffsetAtOutCoords()");let h="vec4(1.0)";null!=c&&(o.vd.assertAndGetBroadcastShape(e,c),this.variableNames.push("scale"),h="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${d};\n        vec4 scale = ${h};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${l}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const nO={kernelName:o.kb,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:c,variance:l,offset:d,scale:h}=e;o.yf.assert(c.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.yf.assert(null==d||c.shape.length===d.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.yf.assert(null==h||c.shape.length===h.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:f}=n;null==f&&(f=.001);const m=[r,c,l];let y=null;null!=d&&(y=d.shape,m.push(d));let x=null;null!=h&&(x=h.shape,m.push(h));const v=Object(o.Wd)().getBool("WEBGL_PACK_NORMALIZATION")?new tO(r.shape,c.shape,l.shape,y,x,f):new eO(r.shape,c.shape,l.shape,y,x,f);return t.runWebGLProgram(v,m,m[0].dtype)}};class rO{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=ay(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return aO.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let body;body=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,i)=>`sourceLoc.${aO[i]} = start[${i}] + coords.${aO[i]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${body}\n        setOutput(getSource(${n}));\n      }\n    `}}const aO=["x","y","z","w","u","v"];class sO{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=ay(this.rank),n=bx("coords",this.rank),r=bx("sourceLoc",this.rank),o=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,c=`getChannel(getSource(${r.join()}), ${o})`,l=`\n      result.x = ${c};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${c};\n        --${r[this.rank-1]};\n      }\n    `,d=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${c};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${c};\n        }\n      }\n    `,h=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,i)=>`start[${i}]`)).join()});`:e.map(((e,i)=>`${r[i]} = ${n[i]} + start[${i}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${h}\n        vec4 result = vec4(0.);\n        ${l}\n        ${d}\n        setOutput(result);\n      }\n    `}}function iO(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{begin:l,size:d}=r,[h,f]=o.cf.parseSliceParams(c,l,d);if(o.cf.assertParamsValid(c,h,f),0===o.yf.sizeFromShape(f))return n.makeTensorInfo(f,c.dtype,[]);if(n.shouldExecuteOnCPU([c])||"string"===c.dtype){const e=n.texData.get(c.dataId),t=tx(e.values,h,f,c.shape,c.dtype);return n.makeTensorInfo(f,c.dtype,t)}const{isPacked:m}=n.texData.get(c.dataId),y=o.cf.isSliceContinous(c.shape,h,f);if(m||!y){const e=Object(o.Wd)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sO(f):new rO(f),t=[h];return n.runWebGLProgram(e,[c],c.dtype,t)}return n.uploadToGPU(c.dataId),function(e,t,n,r){const c=r.texData.get(e.dataId),l=r.makeTensorInfo(n,e.dtype),d=r.texData.get(l.dataId);Object.assign(d,c),d.refCount=1,d.shape=n,d.dtype=e.dtype;let h=o.cf.computeFlatOffset(t,o.yf.computeStrides(e.shape));c.slice&&(h+=c.slice.flatOffset),d.slice={flatOffset:h,origDataId:c.slice&&c.slice.origDataId||e.dataId};const f=r.dataRefCount.get(d.slice.origDataId)||1;return r.dataRefCount.set(d.slice.origDataId,f+1),l}(c,h,f,n)}const oO={kernelName:o.Gc,backendName:"webgl",kernelFunc:iO},uO={kernelName:o.t,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{blockShape:l,crops:d}=r;o.yf.assert(c.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const h=l.reduce(((a,b)=>a*b)),f=o.vd.getReshaped(c.shape,l,h),m=o.vd.getPermuted(f.length,l.length),y=o.vd.getReshapedPermuted(c.shape,l,h),x=o.vd.getSliceBeginCoords(d,l.length),v=o.vd.getSliceSize(y,d,l.length),O=[],w=ev({inputs:{x:c},backend:n,attrs:{shape:f}}),k=lv({inputs:{x:w},backend:n,attrs:{perm:m}}),I=ev({inputs:{x:k},backend:n,attrs:{shape:y}}),S=iO({inputs:{x:I},backend:n,attrs:{begin:x,size:v}});return O.push(w),O.push(k),O.push(I),O.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};const cO={kernelName:o.u,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,weights:c}=t,{size:l}=r,d=n.readSync(o.dataId),h=n.readSync(c.dataId),f=Ty(d,h,c.dtype,c.shape,l);return n.makeTensorInfo([l],c.dtype,f)}};const lO={kernelName:o.v,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:c}=t,l=n.readSync(r.dataId),d=n.readSync(c.dataId),h=o.vd.assertAndGetBroadcastShape(Array.from(l),Array.from(d));return n.makeTensorInfo([h.length],"int32",Int32Array.from(h))}},dO=Gx({opSnippet:"return float(a != b);",cpuKernelImpl:Xy,dtype:"bool"}),hO={kernelName:o.bc,backendName:"webgl",kernelFunc:dO};function pO(e){const{inputs:t,backend:n}=e,{input:input}=t;return Fx({inputs:{x:n.texData.get(input.dataId).complexTensorInfos.real},backend:n})}const fO={kernelName:o.lc,backendName:"webgl",kernelFunc:pO};const mO={kernelName:o.w,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:c}=t,{x:l}=n,{dtype:d}=c;if("complex64"===d){if("complex64"===l.dtype)return Fx({inputs:{x:l},backend:r});const t=o.Df(l.shape),n=e({inputs:{x:l},backend:r,attrs:{dtype:"float32"}}),c=_x({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),c}if("complex64"===l.dtype){const t=pO({inputs:{input:l},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:d}});return r.disposeIntermediateTensorInfo(t),n}if(!o.yf.hasEncodingLoss(l.dtype,d)){const e=Fx({inputs:{x:l},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:d}}if("int32"===d)return function(input,e){const t=new kx(input.shape,"return float(int(x));"),output=e.runWebGLProgram(t,[input],"int32");return{dataId:output.dataId,shape:output.shape,dtype:output.dtype}}(l,r);if("bool"===d){const e=r.makeTensorInfo([],"bool",o.yf.getTypedArrayFromDType("bool",1)),t=dO({inputs:{a:l,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${l.dtype} to ${d}`)}},bO="return ceil(x);",gO=Vx({opSnippet:bO,packedOpSnippet:bO,cpuKernelImpl:$y}),yO={kernelName:o.x,backendName:"webgl",kernelFunc:gO};class xO{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class vO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const OO={kernelName:o.y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{clipValueMin:l,clipValueMax:d}=r;let h;h=Object(o.Wd)().getBool("WEBGL_PACK_CLIP")?new vO(c.shape):new xO(c.shape);const f=[[l],[d]];return n.runWebGLProgram(h,[c],c.dtype,f)}};class wO{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function kO(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const IO={kernelName:o.A,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,o=n.texData.get(r.dataId),c=new wO(r.shape),l=[kO(r,o.complexTensorInfos.real),kO(r,o.complexTensorInfos.imag)];return n.runWebGLProgram(c,l,l[0].dtype)}};class SO{constructor(e){this.outputShape=[],this.outputShape=o.vd.computeOutShape(e,1),this.variableNames=e.map(((e,i)=>`T${i}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){const e=t[i-1];n.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${e}));`)}const r=t.length,c=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${c}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class NO{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=o.vd.computeOutShape(e,t);const n=this.outputShape,r=n.length,c=ay(r),l=bx("coords",r),d=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,i)=>`T${i}`));const h=new Array(e.length-1);h[0]=e[0][t];for(let i=1;i<h.length;i++)h[i]=h[i-1]+e[i][t];const f=d[t],m=d.slice(-2),y=d.join();let x=`if (${f} < ${h[0]}) {\n        return getChannel(\n            getT0(${y}), vec2(${m.join()}));\n        }`;for(let i=1;i<h.length;i++){const e=h[i-1];x+=`\n        if (${f} < ${h[i]}  && ${f} >= ${h[i-1]}) {\n          return getChannel(\n            getT${i}(${jO(d,f,e)}),\n            vec2(${jO(m,f,e)}));\n        }`}const v=h.length,O=h[h.length-1];x+=`\n        return getChannel(\n          getT${v}(${jO(d,f,O)}),\n          vec2(${jO(m,f,O)}));`,this.userCode=`\n      float getValue(${d.map((e=>"int "+e))}) {\n        ${x}\n      }\n\n      void main() {\n        ${c} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${l}), 0., 0., 0.);\n\n        ${l[r-1]} = ${l[r-1]} + 1;\n        if (${l[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${l});\n        }\n\n        ${l[r-2]} = ${l[r-2]} + 1;\n        if (${l[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${l});\n        }\n\n        ${l[r-1]} = ${l[r-1]} - 1;\n        if (${l[r-2]} < ${n[r-2]} &&\n            ${l[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${l});\n        }\n        setOutput(result);\n      }\n    `}}function jO(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function TO(e){const{inputs:t,backend:n}=e,{input:input}=t;return Fx({inputs:{x:n.texData.get(input.dataId).complexTensorInfos.imag},backend:n})}const CO={kernelName:o.tb,backendName:"webgl",kernelFunc:TO};function $O(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>pO({inputs:{input:e},backend:n}))),o=e.map((e=>TO({inputs:{input:e},backend:n}))),c=$O(r,t,n),l=$O(o,t,n),d=_x({inputs:{real:c,imag:l},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),o.forEach((i=>n.disposeIntermediateTensorInfo(i))),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),d}let c=n.shouldExecuteOnCPU(e);if("string"===r&&(c=!0),c){const c=e.map((e=>{const r=o.yf.sizeFromShape(e.shape.slice(t));return ev({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),l=c.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),d=o.vd.computeOutShape(c.map((e=>e.shape)),1),h=1===c[0].shape[0],f=Ey(l,d,r,h),m=o.vd.computeOutShape(e.map((e=>e.shape)),t),y=n.makeTensorInfo(m,r,f);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}if(e.length>Object(o.Wd)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),o=$O(e.slice(0,r),t,n),c=$O(e.slice(r),t,n),l=$O([o,c],t,n);return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),l}if(Object(o.Wd)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const o=new NO(e.map((e=>e.shape)),t);return n.runWebGLProgram(o,e,r)}const{tensors2D:l,outShape:d}=function(e,t,n){const r=o.vd.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>ev({inputs:{x:e},attrs:{shape:[-1,o.yf.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),h=new SO(l.map((e=>e.shape))),f=n.runWebGLProgram(h,l,r);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const m=ev({inputs:{x:f},attrs:{shape:d},backend:n});return n.disposeIntermediateTensorInfo(f),m}function EO(e){const{inputs:t,backend:n,attrs:r}=e,{axis:c}=r,l=o.yf.parseAxisParam(c,t[0].shape)[0],d=o.vd.computeOutShape(t.map((e=>e.shape)),l);if(0===o.yf.sizeFromShape(d))return n.makeTensorInfo(d,t[0].dtype,[]);const h=t.filter((e=>o.yf.sizeFromShape(e.shape)>0));if(1===h.length)return Fx({inputs:{x:h[0]},backend:n});const f=h.map((e=>e.shape));return o.vd.assertParamsConsistent(f,l),$O(h,l,n)}const AO={kernelName:o.B,backendName:"webgl",kernelFunc:EO};class RO{constructor(e,t=!1,n=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const c=e.padInfo.top,l=e.padInfo.left,d=e.strideHeight,h=e.strideWidth,f=e.dilationHeight,m=e.dilationWidth,y=e.filterHeight,x=e.filterWidth,v=4*Math.floor(e.inChannels/4),O=e.inChannels%4,w="channelsLast"===e.dataFormat,k=w?1:2,I=w?2:3,S=w?3:1;let N="",j="";n&&(N=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:o?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,j="result = activation(result);");const T=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${N}\n\n      const ivec2 strides = ivec2(${d}, ${h});\n      const ivec2 pads = ivec2(${c}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${S}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${k}], coords[${I}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${y}; wR++) {\n          int xR = xRCorner + wR * ${f};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC++) {\n            int xC = xCCorner + wC * ${m};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${v}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${w}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===O}) {\n\n              if (${w}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${v}) *\n                    getW(wR, wC, ${v}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${v}, xR, xC) *\n                    getW(wR, wC, ${v}, d2);\n              }\n\n            } else if (${2===O}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${v}, d2),\n                getW(wR, wC, ${v} + 1, d2)\n              );\n\n              if (${w}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${v}),\n                  getX(batch, xR, xC, ${v} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${v}, xR, xC),\n                  getX(batch, ${v} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===O}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${v}, d2),\n                getW(wR, wC, ${v} + 1, d2),\n                getW(wR, wC, ${v} + 2, d2)\n              );\n\n              if (${w}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${v}),\n                  getX(batch, xR, xC, ${v} + 1),\n                  getX(batch, xR, xC, ${v} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${v}, xR, xC),\n                  getX(batch, ${v} + 1, xR, xC),\n                  getX(batch, ${v} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${T}\n        ${j}\n        setOutput(result);\n      }\n    `}}class FO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,o=e.strideDepth,c=e.strideHeight,l=e.strideWidth,d=e.dilationDepth,h=e.dilationHeight,f=e.dilationWidth,m=e.filterDepth,y=e.filterHeight,x=e.filterWidth,v=4*Math.floor(e.inChannels/4),O=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${o}, ${c}, ${l});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${m}; wF++) {\n          int xF = xFCorner + wF * ${d};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${y}; wR++) {\n            int xR = xRCorner + wR * ${h};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${x}; wC++) {\n              int xC = xCCorner + wC * ${f};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${v}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===O}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${v}) *\n                  getW(wF, wR, wC, ${v}, d2);\n              } else if (${2===O}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${v}),\n                  getX(batch, xF, xR, xC, ${v} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${v}, d2),\n                  getW(wF, wR, wC, ${v} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===O}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${v}),\n                  getX(batch, xF, xR, xC, ${v} + 1),\n                  getX(batch, xF, xR, xC, ${v} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${v}, d2),\n                  getW(wF, wR, wC, ${v} + 1, d2),\n                  getW(wF, wR, wC, ${v} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class DO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=cy(this.outputShape.length);const{dataFormat:n}=t,r=Bg(),o="channelsLast"===n,c=o?0:1,l=o?1:2,d=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let h="";for(let e=0;e<=1;e++)for(let col=0;col<=1;col++)h+=`\n          blockIndex = rc.y + ${col};\n          pos = rc.x + ${e};\n\n          ${d}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${c}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${l}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${o}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+col}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+col}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${h}\n\n        ${r.output} = result;\n      }\n    `}}function _O({x:e,filter:filter,convInfo:t,backend:n,bias:r=null,preluActivationWeights:c=null,leakyreluAlpha:l=0,activation:d=null}){const h=e.shape,f=n.texData.get(e.dataId),m=t.inChannels,y=h[0]*h[1]*h[2],x=t.outChannels,v="channelsLast"===t.dataFormat;let O;const w=[];if(!((1===y||1===x)&&m>1e3)&&f.isPacked&&v&&null!=f.texture&&h[2]%2!=0&&o.yf.arraysEqual(f.shape.slice(-3),h.slice(-3))){const m=h[0]*h[1]*(h[2]+1),y={dataId:e.dataId,shape:[1,m,t.inChannels],dtype:e.dtype},x=f.shape;f.shape=f.shape.slice(),f.shape[f.shape.length-2]++,o.yf.assert(Ag(f.shape,y.shape),(()=>`packed reshape ${f.shape} to ${y.shape} isn't free`));const v=ev({inputs:{x:filter},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});w.push(v);const k=hv({a:y,b:v,backend:n,transposeA:false,transposeB:false,bias:r,activation:d,preluActivationWeights:c,leakyreluAlpha:l}),I=n.texData.get(k.dataId);o.yf.assert(I.isPacked,(()=>"batchMatMul result is expected to be packed")),f.shape=x,I.shape=t.outShape,O=Fx({inputs:{x:k},backend:n}),O.shape=t.outShape,w.push(k)}else{const o=ev({inputs:{x:e},backend:n,attrs:{shape:[1,v?h[0]*h[1]*h[2]:h[0]*h[2]*h[3],t.inChannels]}}),f=ev({inputs:{x:filter},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),m=hv({a:o,b:f,transposeA:false,transposeB:false,backend:n,bias:r,activation:d,preluActivationWeights:c,leakyreluAlpha:l});O=ev({inputs:{x:m},backend:n,attrs:{shape:t.outShape}}),w.push(o),w.push(f),w.push(m)}for(const i of w)n.disposeIntermediateTensorInfo(i);return O}function MO({x:e,filter:filter,convInfo:t,backend:n,bias:r=null,preluActivationWeights:c=null,leakyreluAlpha:l=0,activation:d=null}){const{filterWidth:h,filterHeight:f,inChannels:m,outWidth:y,outHeight:x,dataFormat:v}=t,O="channelsLast"===v,w=h*f*m,k=x*y,I=[w,k],S=[],N=ev({inputs:{x:e},backend:n,attrs:{shape:e.shape.slice(1)}}),j=ev({inputs:{x:filter},backend:n,attrs:{shape:[1,w,o.yf.sizeFromShape(filter.shape)/w]}});S.push(N),S.push(j);const T=new DO(I,t),C=[N.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],$=n.runWebGLProgram(T,[N],"float32",C),E=ev({inputs:{x:$},backend:n,attrs:{shape:[1,I[0],I[1]]}});S.push($),S.push(E);const A=null!=r,R=null!=c,F="leakyrelu"===d,D=d?Hx(d,!0):null,_=new qx(E.shape,j.shape,[1,k,t.outChannels],!0,!1,A,D,R,F),M=[E,j];if(r&&M.push(r),R&&M.push(c),F){const e=n.makeTensorInfo([],"float32",o.yf.createScalarValue(l,"float32"));M.push(e),S.push(e)}const z=n.runWebGLProgram(_,M,"float32"),L=ev({inputs:{x:z},backend:n,attrs:{shape:O?[1,x,y,t.outChannels]:[1,t.outChannels,x,y]}});S.push(z);for(const i of S)n.disposeIntermediateTensorInfo(i);return L}const zO={kernelName:o.C,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,filter:filter}=t,{strides:l,pad:d,dataFormat:h,dilations:f,dimRoundingMode:m}=r,y=o.vd.convertConv2DDataFormat(h),x=o.vd.computeConv2DInfo(c.shape,filter.shape,l,f,d,m,!1,y);let v;if(1!==x.filterHeight||1!==x.filterWidth||1!==x.dilationHeight||1!==x.dilationWidth||1!==x.strideHeight||1!==x.strideWidth||"SAME"!==x.padInfo.type&&"VALID"!==x.padInfo.type)if(Object(o.Wd)().getBool("WEBGL_CONV_IM2COL")&&1===c.shape[0])v=MO({x:c,filter:filter,convInfo:x,backend:n});else{const e=new RO(x);v=n.runWebGLProgram(e,[c,filter],"float32")}else v=_O({x:c,filter:filter,convInfo:x,backend:n});const O=ev({inputs:{x:v},backend:n,attrs:{shape:x.outShape}});return n.disposeIntermediateTensorInfo(v),O}};class LO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,c="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${o};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${c}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class PO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,o=e.strideWidth,c="channelsLast"===e.dataFormat,l=t-1-e.padInfo.top,d=n-1-e.padInfo.left,h=c?1:2,f=c?2:3,m=c?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${m}];\n\n        ivec2 dyCorner = ivec2(coords[${h}], coords[${f}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${o}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${c}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class BO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,o=e.padInfo.front,c=e.padInfo.top,l=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${o};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${c};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${l};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class WO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,o=e.strideDepth,c=e.strideHeight,l=e.strideWidth,d=t-1-e.padInfo.front,h=n-1-e.padInfo.top,f=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${h}, ${f});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${o}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${c}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${l}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const UO={kernelName:o.D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,dy:l}=t,{strides:d,pad:h,dataFormat:f,dimRoundingMode:m,filterShape:y}=r,x=o.vd.convertConv2DDataFormat(f),v=o.vd.computeConv2DInfo(c.shape,y,d,1,h,m,!1,x),O=new LO(v);return n.runWebGLProgram(O,[c,l],"float32")}};const VO={kernelName:o.E,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,filter:filter}=t,{inputShape:l,strides:d,pad:h,dataFormat:f,dimRoundingMode:m}=r,y=o.vd.convertConv2DDataFormat(f),x=o.vd.computeConv2DInfo(l,filter.shape,d,1,h,m,!1,y),v=new PO(x);return n.runWebGLProgram(v,[c,filter],"float32")}};const GO={kernelName:o.F,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,filter:filter}=t,{strides:l,pad:d,dilations:h}=r,f=o.vd.computeConv3DInfo(c.shape,filter.shape,l,h,d),m=new FO(f);return n.runWebGLProgram(m,[c,filter],"float32")}};const HO={kernelName:o.G,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,dy:l}=t,{strides:d,pad:h,filterShape:f}=r,m=o.vd.computeConv3DInfo(c.shape,f,d,1,h),y=new BO(m);return n.runWebGLProgram(y,[c,l],"float32")}};const qO={kernelName:o.H,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,filter:filter}=t,{pad:l,strides:d,inputShape:h}=r,f=o.vd.computeConv3DInfo(h,filter.shape,d,1,l),m=new WO(f);return n.runWebGLProgram(m,[c,filter],"float32")}},KO=Vx({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),XO={kernelName:o.I,backendName:"webgl",kernelFunc:KO},YO=Vx({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),ZO={kernelName:o.J,backendName:"webgl",kernelFunc:YO};class JO{constructor(e,t,n,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[c,l,d,h]=e,[f]=t,[m,y]=n;this.outputShape=[f,m,y,h];const x="bilinear"===r?1:0,[v,O]=[l-1+".0",d-1+".0"],[w,k,I]=m>1?[""+(l-1)/(m-1),"(y2-y1) * height_ratio",`y1*${v} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${v}`],[S,N,j]=y>1?[""+(d-1)/(y-1),"(x2-x1) * width_ratio",`x1*${O} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${O}`];this.userCode=`\n      const float height_ratio = float(${w});\n      const float width_ratio = float(${S});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${c}) {\n          return;\n        }\n\n        float height_scale = ${k};\n        float width_scale = ${N};\n\n        float in_y = ${I};\n        if( in_y < 0.0 || in_y > ${v} ) {\n          setOutput(float(${o}));\n          return;\n        }\n        float in_x = ${j};\n        if( in_x < 0.0 || in_x > ${O} ) {\n          setOutput(float(${o}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${x} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const QO={kernelName:o.K,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:image,boxes:o,boxInd:c}=t,{cropSize:l,method:d,extrapolationValue:h}=r,f=new JO(image.shape,o.shape,l,d,h);return n.runWebGLProgram(f,[image,o,c],"float32")}};class ew{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,o=t?"0.0":`getX(${tw(r,"coords")})`,c=e[e.length-1];let l="",d="";t?(l=n?"end != "+(c-1):"end != 0",d=n?"end + 1":"end - 1"):(l=n?`end + pow2 < ${c}`:"end >= pow2",d=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${ay(r)} coords = getOutputCoords();\n        int end = ${nw(r,"coords")};\n        float val = ${o};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${d};\n          ${nw(r,"coords")} = idx;\n          val += getX(${tw(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function tw(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function nw(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const rw={kernelName:o.L,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,exclusive:d,reverse:h}=r,f=c.shape.length,m=o.vd.getAxesPermutation([l],f);let y=c;null!=m&&(y=lv({inputs:{x:c},backend:n,attrs:{perm:m}}));const x=o.vd.getInnerMostAxes(1,f)[0];if(x!==f-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const v=y.shape[x];let O=Fx({inputs:{x:y},backend:n});for(let i=0;i<=Math.ceil(Math.log2(v))-1;i++){const e=new ew(y.shape,!1,h),t=[[i]],r=O;O=n.runWebGLProgram(e,[O],O.dtype,t),n.disposeIntermediateTensorInfo(r)}if(d){const e=new ew(y.shape,d,h),t=O;O=n.runWebGLProgram(e,[O],O.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=m){const e=lv({inputs:{x:O},backend:n,attrs:{perm:o.vd.getUndoAxesPermutation(m)}});return n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(y),e}return O}};const aw={kernelName:o.N,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,weights:c}=t,{size:l,binaryOutput:d}=r;if(1===o.shape.length){const e=n.readSync(o.dataId),t=n.readSync(c.dataId),r=Ty(e,t,c.dtype,c.shape,l);return n.makeTensorInfo([l],c.dtype,r)}if(2===o.shape.length){const e=n.bufferSync(o),t=n.bufferSync(c),r=Cy(e,t,l,d);return n.makeTensorInfo(r.shape,c.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}};class sw{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const iw={kernelName:o.O,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{blockSize:c,dataFormat:l}=r,d=o.shape[0],h=("NHWC"===l?o.shape[1]:o.shape[2])*c,f=("NHWC"===l?o.shape[2]:o.shape[3])*c,m=("NHWC"===l?o.shape[3]:o.shape[1])/(c*c),y=new sw("NHWC"===l?[d,h,f,m]:[d,m,h,f],c,l);return n.runWebGLProgram(y,[o],o.dtype)}};class ow{constructor(e,t=!1,n=null,r=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=cy(this.outputShape.length);const c=e.filterHeight,l=e.filterWidth,d=e.outChannels/e.inChannels;let h="",f="";n&&(h=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:o?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${h}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${d};\n        int q = d2 - d1 * ${d};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${l}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}class uw{constructor(e,t=!1,n=null,r=!1,c=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=cy(this.outputShape.length);const l=e.outChannels/e.inChannels,d=e.padInfo.left,h=e.strideWidth,f=e.dilationWidth,m=e.filterHeight,y=e.filterWidth,x=y;let v="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<y;e++)v+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;v+=`\n    for (int r = 0; r < ${m}; r++) {\n      `;for(let e=0;e<y;e++)v+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;v+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(x+1)/2;e++){const t=2*e;if(v+=`\n          xC = xCCorner + ${t*f};\n          `,1===h){if(t<y&&(d%2==1?(v+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,v+=1===f&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):v+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<y)){const e=d%2==0?o.yf.nearestLargerEven(f):f;f%2==0&&d%2==1||f%2!=0&&d%2!=1?(v+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,f>1&&(v+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),v+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):v+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<y&&(d%2==1?(v+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<y&&(v+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(v+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<y&&(v+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<y&&(v+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<y&&(v+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}v+="\n    }\n  ",v+="\n      }\n    ";let O="",w="";n&&(O=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:c?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,w="result = activation(result);");const k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${O}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${l};\n        int q = d2 - d1 * ${l};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${v}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${k}\n        ${w}\n        setOutput(result);\n      }\n    `}}const cw={kernelName:o.P,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,filter:filter}=t,{strides:l,pad:d,dilations:h,dimRoundingMode:f}=r;let m=h;null==m&&(m=[1,1]),o.yf.assert(o.vd.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const y=o.vd.computeConv2DInfo(c.shape,filter.shape,l,m,d,f,!0);let x;x=Object(o.Wd)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1?new uw(y):new ow(y);const v=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]];return n.runWebGLProgram(x,[c,filter],"float32",v)}};class lw{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,c=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${c} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${o};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class dw{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,o=e.strideWidth,c=t-1-e.padInfo.top,l=n-1-e.padInfo.left,d=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${o}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${d}; dm++) {\n              int d2 = d1 * ${d} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const hw={kernelName:o.Q,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,dy:l}=t,{strides:d,dilations:h,pad:f,dimRoundingMode:m,filterShape:y}=r,x=o.vd.computeConv2DInfo(c.shape,y,d,h,f,m,!0),v=new lw(x);return n.runWebGLProgram(v,[c,l],"float32")}};const pw={kernelName:o.R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,filter:filter}=t,{strides:l,dilations:d,pad:h,dimRoundingMode:f,inputShape:m}=r,y=o.vd.computeConv2DInfo(m,filter.shape,l,d,h,f,!0),x=new dw(y);return n.runWebGLProgram(x,[c,filter],"float32")}};class fw{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const mw={kernelName:o.S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,c=[...r.shape,...r.shape],l=o.yf.sizeFromShape(r.shape),d=ev({inputs:{x:r},backend:n,attrs:{shape:[l]}}),h=new fw(l),f=n.runWebGLProgram(h,[d],d.dtype),m=ev({inputs:{x:f},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};class bw{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:o,strideWidth:c,filterHeight:l,filterWidth:d,dilationHeight:h,dilationWidth:f}=e,{top:m,left:y}=r;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${c});\n      const ivec2 pads = ivec2(${m}, ${y});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${l}; h++) {\n          int hIn = hBeg + h * ${h};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${d}; w++) {\n              int wIn = wBeg + w * ${f};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const gw={kernelName:o.T,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,filter:filter}=t,{strides:l,pad:d,dilations:h}=r,f=o.vd.computeDilation2DInfo(c.shape,filter.shape,l,d,"NHWC",h);let m;const y=new bw(f);m=n.runWebGLProgram(y,[c,filter],"float32");const x=ev({inputs:{x:m},backend:n,attrs:{shape:f.outShape}});return n.disposeIntermediateTensorInfo(m),x}};const yw={kernelName:o.W,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:c}=r,l=t,{allDims:d,summedDims:h,idDims:f}=o.vd.decodeEinsumEquation(c,l.length);o.vd.checkEinsumDimSizes(d.length,f,l);const{path:path,steps:m}=o.vd.getEinsumComputePath(h,f),y=m.length;let x=null,v=d.length;const O=[];for(let i=0;i<y;++i){for(const e of m[i]){const{permutationIndices:t,expandDims:r}=o.vd.getEinsumPermutation(v,f[e]);let c;o.vd.isIdentityPermutation(t)?c=l[e]:(c=lv({inputs:{x:l[e]},backend:n,attrs:{perm:t}}),O.push(c));const d=c.shape.slice();for(let e=0;e<r.length;++e)d.splice(r[e],0,1);o.yf.arraysEqual(c.shape,d)||(c=ev({inputs:{x:c},backend:n,attrs:{shape:d}}),O.push(c)),null===x?x=c:(x=Jx({inputs:{a:c,b:x},backend:n}),O.push(x))}i<y-1&&(path[i]>=0&&(x=uv({inputs:{x:x},backend:n,attrs:{axis:path[i]-(d.length-v),keepDims:!1}}),O.push(x)),v--)}for(const e of O)e!==x&&n.disposeIntermediateTensorInfo(e);return x}},xw=Vx({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),vw={kernelName:o.X,backendName:"webgl",kernelFunc:xw},Ow={kernelName:o.Y,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:c}=t,l=Object(o.Wd)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Rx("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,c.shape):new Ax("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,c.shape);return n.runWebGLProgram(l,[r,c],r.dtype)}},ww=Gx({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Ay}),kw={kernelName:o.Z,backendName:"webgl",kernelFunc:ww},Iw=Vx({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${o.vd.ERF_P};\n  float a1 = ${o.vd.ERF_A1};\n  float a2 = ${o.vd.ERF_A2};\n  float a3 = ${o.vd.ERF_A3};\n  float a4 = ${o.vd.ERF_A4};\n  float a5 = ${o.vd.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Sw={kernelName:o.ab,backendName:"webgl",kernelFunc:Iw},Nw=Vx({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Ry,dtype:"float32"}),jw={kernelName:o.bb,backendName:"webgl",kernelFunc:Nw};function Tw(e){const{inputs:t,attrs:n,backend:r}=e,{dim:c}=n,{input:input}=t,l=input.shape.length,d=input.shape.slice();let h=c;return c<0&&(o.yf.assert(-(l+1)<=c,(()=>`Axis must be in the interval [${-(l+1)}, ${l}]`)),h=l+c+1),d.splice(h,0,1),ev({inputs:{x:input},backend:r,attrs:{shape:d}})}const Cw={kernelName:o.cb,backendName:"webgl",kernelFunc:Tw},$w="return exp(x) - 1.0;",Ew=Vx({opSnippet:$w,packedOpSnippet:$w,cpuKernelImpl:Fy}),Aw={kernelName:o.db,backendName:"webgl",kernelFunc:Ew};class Rw{constructor(component,e,t){this.variableNames=["real","imag"];const n=e[1];this.outputShape=e;const r=t?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=t?`${n}.0`:"1.0";let c;if("real"===component)c="return real * expR - imag * expI;";else{if("imag"!==component)throw new Error(`FFT component must be either "real" or "imag", got ${component}.`);c="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${c}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${n});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${n}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${o};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Fw(e,t,n){const r=n.texData.get(e.dataId),c=o.yf.sizeFromShape(e.shape),l=e.shape[e.shape.length-1],d=ev({inputs:{x:e},backend:n,attrs:{shape:[c/l,l]}}),h=d.shape,f=new Rw("real",h,t),m=new Rw("imag",h,t),y=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:h},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:h}],x=n.runWebGLProgram(f,y,"float32"),v=n.runWebGLProgram(m,y,"float32"),O=_x({inputs:{real:x,imag:v},backend:n});n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v);const w=ev({inputs:{x:O},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(O),w}const Dw={kernelName:o.eb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:input}=t;return Fw(input,!1,n)}};class _w{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Mw(e){const{backend:t,attrs:n}=e,{shape:r,value:c}=n;let{dtype:l}=n;if(l=l||o.yf.inferDtype(c),"string"===l){const e=o.yf.getArrayFromDType(l,o.yf.sizeFromShape(r));return e.fill(c),t.makeTensorInfo(r,l,e)}{const e=new _w(r,c),n=[[c]];return t.runWebGLProgram(e,[],l,n)}}const zw={kernelName:o.fb,backendName:"webgl",kernelFunc:Mw};class Lw{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Pw={kernelName:o.gb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:image}=e,n=t,r=new Lw(image.shape);return n.runWebGLProgram(r,[image],image.dtype)}},Bw="return floor(x);",Ww=Vx({opSnippet:Bw,packedOpSnippet:Bw,cpuKernelImpl:Dy}),Uw={kernelName:o.hb,backendName:"webgl",kernelFunc:Ww},Vw=Gx({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Gw={kernelName:o.ib,backendName:"webgl",kernelFunc:Vw};class Hw{constructor(e){this.variableNames=["A"];const t=Bg(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class qw{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Bg(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Kw={kernelName:o.jb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:c}=t;const{numChannels:l}=r,d="undefined"!=typeof HTMLVideoElement&&c instanceof HTMLVideoElement,h="undefined"!=typeof HTMLImageElement&&c instanceof HTMLImageElement,[f,m]=d?[c.videoWidth,c.videoHeight]:[c.width,c.height],y=[m,f],x=[m,f,l];(h||d)&&(null==Xw&&(Xw=document.createElement("canvas").getContext("2d")),Xw.canvas.width=f,Xw.canvas.height=m,Xw.drawImage(c,0,0,f,m),c=Xw.canvas);const v=n.makeTensorInfo(y,"int32");n.texData.get(v.dataId).usage=cg.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(v.dataId),c);const O=Object(o.Wd)().getBool("WEBGL_PACK")?new qw(x):new Hw(x),w=n.runWebGLProgram(O,[v],"int32");return n.disposeData(v.dataId),w}};let Xw;const Yw={kernelName:o.lb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,filter:filter,bias:l,preluActivationWeights:d}=t,{strides:h,pad:f,dataFormat:m,dilations:y,dimRoundingMode:x,activation:v,leakyreluAlpha:O}=r,w=o.vd.convertConv2DDataFormat(m),k=o.vd.computeConv2DInfo(c.shape,filter.shape,h,y,f,x,!1,w);let I;const S=[];if(1!==k.filterHeight||1!==k.filterWidth||1!==k.dilationHeight||1!==k.dilationWidth||1!==k.strideHeight||1!==k.strideWidth||"SAME"!==k.padInfo.type&&"VALID"!==k.padInfo.type)if(Object(o.Wd)().getBool("WEBGL_CONV_IM2COL")&&1===c.shape[0])I=MO({x:c,filter:filter,convInfo:k,backend:n,bias:l,activation:v,preluActivationWeights:d,leakyreluAlpha:O});else{const e=null!=l,t=null!=d,r="leakyrelu"===v,h=v?Hx(v,!1):null,f=new RO(k,e,h,t,r),m=[c,filter];if(l&&m.push(l),d&&m.push(d),r){const e=n.makeTensorInfo([],"float32",o.yf.createScalarValue(O,"float32"));m.push(e),S.push(e)}I=n.runWebGLProgram(f,m,"float32")}else I=_O({x:c,filter:filter,convInfo:k,backend:n,bias:l,activation:v,preluActivationWeights:d,leakyreluAlpha:O});const N=ev({inputs:{x:I},backend:n,attrs:{shape:k.outShape}});return S.push(I),S.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};const Zw={kernelName:o.mb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,filter:filter,bias:l,preluActivationWeights:d}=t,{strides:h,pad:f,dilations:m,dimRoundingMode:y,activation:x,leakyreluAlpha:v}=r,O=[];let w=m;null==w&&(w=[1,1]),o.yf.assert(o.vd.eitherStridesOrDilationsAreOne(h,w),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${h} and dilations '${w}'`));const k=o.vd.computeConv2DInfo(c.shape,filter.shape,h,w,f,y,!0),I=Object(o.Wd)().getBool("WEBGL_PACK_DEPTHWISECONV")&&k.strideWidth<=2&&k.outChannels/k.inChannels==1,S=x?Hx(x,I):null,N=[c,filter],j=null!=l,T=null!=d,C="leakyrelu"===x;if(j&&N.push(l),T&&N.push(d),C){const e=n.makeTensorInfo([],"float32",o.yf.createScalarValue(v,"float32"));N.push(e),O.push(e)}let $;$=I?new uw(k,j,S,T,C):new ow(k,j,S,T,C);const E=[[k.padInfo.top,k.padInfo.left],[k.strideHeight,k.strideWidth],[k.dilationHeight,k.dilationWidth],[k.inHeight,k.inWidth]],A=n.runWebGLProgram($,N,"float32",E);return O.forEach((e=>n.disposeIntermediateTensorInfo(e))),A}};class Jw{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=ay(t.length),o=ay(n.length),c=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${o} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${c};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const Qw={kernelName:o.nb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:c}=t,l=c.shape,d=l[l.length-1],h=o.yf.sizeFromShape(r.shape),[f,m,y,x]=o.vd.prepareAndValidate(r,c),v=ev({inputs:{x:c},backend:n,attrs:{shape:[m,d]}}),O=ev({inputs:{x:r},backend:n,attrs:{shape:[o.yf.sizeFromShape(r.shape)/y,y]}});if(n.shouldExecuteOnCPU([r,c])||"string"===r.dtype){const e=n.readSync(c.dataId),t=n.bufferSync(r),o=_y(e,t,r.dtype,m,d,y,x,r.shape,h);return n.makeTensorInfo(f,r.dtype,o.values)}const w=new Jw(d,x,[m,y]),k=n.runWebGLProgram(w,[O,v],O.dtype),I=ev({inputs:{x:k},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(k),I}};class ek{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=ay(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let i=0;i<e.length;i++)2===i?r.push("index"):r.push(`${n[i]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function tk(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,indices:l}=t,{axis:d,batchDims:h}=r,f=o.yf.parseAxisParam(d,c.shape)[0];if(Object(o.Wd)().get("DEBUG")){const e=n.readSync(l.dataId),t=c.shape[f];for(let i=0;i<e.length;++i){const n=e[i];o.yf.assert(n<=t-1&&n>=0,(()=>`GatherV2: the index value ${n} is not in [0, ${t-1}]`))}}const m=o.vd.segment_util.collectGatherOpShapeInfo(c,l,f,h),y=o.yf.sizeFromShape(l.shape),x=[],v=ev({inputs:{x:c},backend:n,attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]}}),O=ev({inputs:{x:l},backend:n,attrs:{shape:[m.batchSize,y/m.batchSize]}});x.push(v),x.push(O);const w=[m.batchSize,m.outerSize,y/m.batchSize,m.sliceSize];if(n.shouldExecuteOnCPU([c,l])||"string"===c.dtype){const e=n.bufferSync(O),t=n.bufferSync(v),r=My(t,e,w);return x.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(m.outputShape,r.dtype,r.values)}const k=new ek(v.shape,w),I=n.runWebGLProgram(k,[v,O],v.dtype);x.push(I);const S=ev({inputs:{x:I},backend:n,attrs:{shape:m.outputShape}});return x.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}const nk={kernelName:o.ob,backendName:"webgl",kernelFunc:tk},rk=Gx({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:zy,dtype:"bool"}),ak={kernelName:o.pb,backendName:"webgl",kernelFunc:rk},sk=Gx({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Ly}),ik={kernelName:o.qb,backendName:"webgl",kernelFunc:sk};const ok={kernelName:o.rb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:input}=t;return Fw(input,!0,n)}},uk=Vx({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),ck={kernelName:o.ub,backendName:"webgl",kernelFunc:uk},lk=Vx({opSnippet:"return float(isinf(x));",dtype:"bool"}),dk={kernelName:o.vb,backendName:"webgl",kernelFunc:lk},hk=Vx({opSnippet:"return float(isnan(x));",dtype:"bool"}),pk={kernelName:o.wb,backendName:"webgl",kernelFunc:hk},fk=Gx({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Py,dtype:"bool"}),mk={kernelName:o.Bb,backendName:"webgl",kernelFunc:fk},bk=Gx({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:By,dtype:"bool"}),gk={kernelName:o.Cb,backendName:"webgl",kernelFunc:bk};const yk={kernelName:o.Db,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:o,num:c}=n,l=Wy(r,o,c);return t.makeTensorInfo([l.length],"float32",l)}},xk=Vx({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Uy}),vk={kernelName:o.Eb,backendName:"webgl",kernelFunc:xk},Ok=Vx({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),wk={kernelName:o.Fb,backendName:"webgl",kernelFunc:Ok},kk=Gx({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Ik={kernelName:o.Gb,backendName:"webgl",kernelFunc:kk},Sk=Vx({opSnippet:"return float(!(x >= 1.0));"}),Nk={kernelName:o.Hb,backendName:"webgl",kernelFunc:Sk},jk=Gx({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Tk={kernelName:o.Ib,backendName:"webgl",kernelFunc:jk};class Ck{constructor(e,t,n,r,o){this.variableNames=["x"],this.outputShape=[];const c=t,l=e[3]-1;let d;this.outputShape=e;const h=`float(${n}) + float(${r}) * sum`;d=.5===o?`inversesqrt(${h})`:1===o?`1.0/(${h})`:`exp(log(${h}) * float(-${o}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${c}; j <= ${c}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${l}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${d};\n        setOutput(val);\n      }\n    `}}class $k{constructor(e,t,n,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const c=t,l=e[3]-1;let d;this.outputShape=e;const h=`float(${n}) + float(${r}) * sum`;d=.5===o?`inversesqrt(${h})`:1===o?`1.0/(${h})`:`exp(log(${h}) * float(-${o}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${c};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${c}; j <= ${c}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${l}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${d};\n        setOutput(result);\n      }\n    `}}const Ek={kernelName:o.yb,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{depthRadius:l,bias:d,alpha:h,beta:f}=r,m=Object(o.Wd)().getBool("WEBGL_PACK_NORMALIZATION")?new $k(c.shape,l,d,h,f):new Ck(c.shape,l,d,h,f);return n.runWebGLProgram(m,[c],c.dtype)}};class Ak{constructor(e,t,n,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=o,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${o})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${o});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Rk={kernelName:o.zb,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:o,y:c,dy:l}=t,{depthRadius:d,bias:h,alpha:f,beta:m}=r,y=new Ak(o.shape,d,h,f,m);return n.runWebGLProgram(y,[o,c,l],o.dtype)}};function Fk(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{reductionIndices:l,keepDims:d}=r,h=c.shape.length,f=o.yf.parseAxisParam(l,c.shape);let m=f;const y=o.vd.getAxesPermutation(m,h),x=null!=y,v=n.shouldExecuteOnCPU([c]);let O=c;if(x){if(v){const e=n.texData.get(O.dataId).values,t=new Array(h);for(let i=0;i<t.length;i++)t[i]=c.shape[y[i]];const r=px(e,c.shape,c.dtype,y,t);O=n.makeTensorInfo(t,c.dtype);n.texData.get(O.dataId).values=r}else O=ov(c,y,n);m=o.vd.getInnerMostAxes(m.length,h)}o.vd.assertAxesAreInnerMostDims("max",m,h);const[w,k]=o.vd.computeOutAndReduceShapes(O.shape,m);let I,S=w;if(d&&(S=o.vd.expandShapeToKeepDim(w,f)),v){const e=n.texData.get(O.dataId).values,t=Vy(e,o.yf.sizeFromShape(k),S,c.dtype);I=n.makeTensorInfo(S,c.dtype);n.texData.get(I.dataId).values=t}else I=function(e,t,n,r){const c=o.yf.sizeFromShape(t),l=ev({inputs:{x:e},attrs:{shape:[o.yf.sizeFromShape(e.shape)/c,c]},backend:r}),d=av(l,e.dtype,"max",r),h=ev({inputs:{x:d},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(d),h}(O,k,S,n);return x&&n.disposeIntermediateTensorInfo(O),I}const Dk={kernelName:o.Jb,backendName:"webgl",kernelFunc:Fk},_k=Gx({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Gy}),Mk={kernelName:o.Pb,backendName:"webgl",kernelFunc:_k};const zk={kernelName:o.Kb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t;Lg(c,"maxPool");const{filterSize:l,strides:d,pad:h,dimRoundingMode:f}=r;o.yf.assert(o.vd.eitherStridesOrDilationsAreOne(d,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${d} and dilations '1'`));const m=o.vd.computePool2DInfo(c.shape,l,d,1,h,f);if(1===m.filterWidth&&1===m.filterHeight&&o.yf.arraysEqual(m.inShape,m.outShape))return Fx({inputs:{x:c},backend:n});const y=new Gv(m,"max",!1);return n.runWebGLProgram(y,[c],c.dtype)}};const Lk={kernelName:o.Lb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{filterSize:l,strides:d,pad:h,dataFormat:f,dimRoundingMode:m}=r,y=o.vd.computePool3DInfo(c.shape,l,d,[1,1,1],h,m,f),x=new Hv(y,"max",!1);return n.runWebGLProgram(x,[c],c.dtype)}};class Pk{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,o=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=o-1-e.padInfo.top,d=c-1-e.padInfo.left,h=o*c-1;this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${c}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${h} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${c} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Bk{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=d-1-e.padInfo.front,y=h-1-e.padInfo.top,x=f-1-e.padInfo.left,v=d*h*f-1;this.userCode=`\n      const ivec3 pads = ivec3(${m}, ${y}, ${x});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${d};\n           wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${c}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${f};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${v} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${h} * ${f} +\n                  wR * ${f} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Wk={kernelName:o.Mb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,input:input}=t,l=input,{filterSize:d,strides:h,pad:f,dimRoundingMode:m}=r,y=o.vd.computePool3DInfo(l.shape,d,h,[1,1,1],f,m),x=new Hv(y,"max",!0),v=n.runWebGLProgram(x,[l],l.dtype),O=new Bk(y),w=n.runWebGLProgram(O,[c,v],l.dtype);return n.disposeIntermediateTensorInfo(v),w}};const Uk={kernelName:o.Nb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,input:input,output:output}=t,l=input;Lg([input,output],"maxPoolGrad");const{filterSize:d,strides:h,pad:f,dimRoundingMode:m}=r,y=o.vd.computePool2DInfo(l.shape,d,h,1,f,m),x=new Gv(y,"max",!0),v=n.runWebGLProgram(x,[l],l.dtype),O=new Pk(y),w=n.runWebGLProgram(O,[c,v],l.dtype);return n.disposeIntermediateTensorInfo(v),w}};const Vk={kernelName:o.Ob,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:c,strides:l,pad:d,includeBatchInIndex:h}=t,f=n;o.yf.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const m=[1,1];o.yf.assert(o.vd.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const y=o.vd.computePool2DInfo(r.shape,c,l,m,d),[x,v]=function(e,t,n,r){let o=new Gv(n,"max",!1);const c=r.runWebGLProgram(o,[e],"float32");return o=new Gv(n,"max",!0,!0,t),[c,r.runWebGLProgram(o,[e],"float32")]}(r,h,y,f);return[x,v]}};const Gk={kernelName:o.Qb,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:c,axis:l}=t,d=n,h=r.shape.length,f=o.yf.parseAxisParam(l,r.shape);let m=f;const y=o.vd.getAxesPermutation(m,h),x=null!=y,v=d.shouldExecuteOnCPU([r]),O=[];let w=r;if(x){if(v){const e=d.texData.get(w.dataId).values,t=new Array(h);for(let i=0;i<t.length;i++)t[i]=r.shape[y[i]];const n=px(e,r.shape,r.dtype,y,t);w=d.makeTensorInfo(t,r.dtype);d.texData.get(w.dataId).values=n}else w=ov(r,y,d);O.push(w),m=o.vd.getInnerMostAxes(m.length,h)}o.vd.assertAxesAreInnerMostDims("sum",m,h);const[k,I]=o.vd.computeOutAndReduceShapes(w.shape,m);let S=k;c&&(S=o.vd.expandShapeToKeepDim(k,f));const N=function(e,t,n,r){const c=o.yf.sizeFromShape(t),l=ev({inputs:{x:e},attrs:{shape:[o.yf.sizeFromShape(e.shape)/c,c]},backend:r}),d=av(l,"float32","mean",r),h=ev({inputs:{x:d},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(d),h}(w,I,S,d);for(const i of O)d.disposeIntermediateTensorInfo(i);return N}};const Hk={kernelName:o.Rb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r,h=c.shape.length,f=o.yf.parseAxisParam(l,c.shape);let m=f;const y=o.vd.getAxesPermutation(m,h);let x=c;null!=y&&(x=lv({inputs:{x:c},backend:n,attrs:{perm:y}}),m=o.vd.getInnerMostAxes(m.length,c.shape.length)),o.vd.assertAxesAreInnerMostDims("min",m,h);const[v,O]=o.vd.computeOutAndReduceShapes(x.shape,m),w=ev({inputs:{x:x},backend:n,attrs:{shape:[-1,o.yf.sizeFromShape(O)]}}),k=av(w,w.dtype,"min",n);let I;if(d){I=ev({inputs:{x:k},backend:n,attrs:{shape:o.vd.expandShapeToKeepDim(v,f)}})}else I=ev({inputs:{x:k},backend:n,attrs:{shape:v}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),null!=y&&n.disposeIntermediateTensorInfo(x),I}},qk=Gx({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Hy}),Kk={kernelName:o.Sb,backendName:"webgl",kernelFunc:qk};class Xk{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((p,i)=>p[0]+e[i]+p[1]));const r=e.length,o=ay(r),c=t.map((p=>p[0])).join(","),l=t.map(((p,i)=>p[0]+e[i])).join(","),d=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),h="reflect"===n?0:1;this.userCode=1!==r?`\n      ${o} start = ${o}(${c});\n      ${o} end = ${o}(${l});\n\n      void main() {\n        ${o} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${h};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${h};\n          }\n        }\n        ${o} coords = outC - start;\n        setOutput(getX(${d}));\n      }\n    `:`\n        int start = ${c};\n        int end = ${l};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${h};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${h};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Yk{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((p,i)=>p[0]+e[i]+p[1]));const r=e.length,o=ay(r),c=t.map((p=>p[0])).join(","),l=t.map(((p,i)=>p[0]+e[i])).join(","),d=bx("rc",r),source=bx("source",r),h=`${d[r-1]} < ${this.outputShape[r-1]}`,f=1===r?"source":`vec2(${source.slice(-2).join()})`,m="reflect"===n?0:1;let y="";if(1===r){const e=`\n        ${o} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${m};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${m};\n        }\n        source -= start;\n      `;y=`\n        ${o} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${source.join()}), ${f});\n        ${d[r-1]} += 1;\n        if(${h}) {\n          ${e}\n          result[1] = getChannel(getX(${source.join()}), ${f});\n        }\n      `}else{const e=`\n        ${o} source = rc;\n        ${o} lt = ${o}(lessThan(source, start));\n        ${o} gte = ${o}(greaterThanEqual(source, end));\n        ${o} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${m}) +\n                gte * ((end - 1) * 2 - source + ${m});\n        source -= start;\n      `;y=`\n        ${o} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${source.join()}), ${f});\n        ${d[r-1]} += 1;\n        if(${h}) {\n          ${e}\n          result[1] = getChannel(getX(${source.join()}), ${f});\n        }\n        rc = outputLoc;\n        ${d[r-2]} += 1;\n        if(${d[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${source.join()}), ${f});\n          ${d[r-1]} += 1;\n          if(${h}) {\n            ${e}\n            result[3] = getChannel(getX(${source.join()}), ${f});\n          }\n        }\n      `}this.userCode=`\n      const ${o} start = ${o}(${c});\n      const ${o} end = ${o}(${l});\n\n      void main() {\n        ${o} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${y}\n        setOutput(result);\n      }\n    `}}const Zk={kernelName:o.Tb,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:c,mode:l}=n,d=Object(o.Wd)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Yk(r.shape,c,l):new Xk(r.shape,c,l);return t.runWebGLProgram(d,[r],r.dtype)}},Jk=Gx({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Qk={kernelName:o.Ub,backendName:"webgl",kernelFunc:Jk};class eI{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const tI=Gx({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),nI={kernelName:o.mc,backendName:"webgl",kernelFunc:tI},rI="return a - b;",aI=Gx({opSnippet:rI,packedOpSnippet:rI,supportsComplex:!0,cpuKernelImpl:lx}),sI={kernelName:o.Yc,backendName:"webgl",kernelFunc:aI};function iI(e){const{inputs:t,backend:n,attrs:r}=e,{logits:c}=t,{dim:l}=r,d=o.yf.parseAxisParam([l],c.shape),h=Fk({inputs:{x:c},backend:n,attrs:{reductionIndices:d,keepDims:!1}}),f=o.vd.expandShapeToKeepDim(h.shape,d),m=ev({inputs:{x:h},backend:n,attrs:{shape:f}}),a=aI({inputs:{a:c,b:m},backend:n}),b=Nw({inputs:{x:a},backend:n}),y=uv({inputs:{x:b},backend:n,attrs:{axis:d,keepDims:!1}}),x=ev({inputs:{x:y},backend:n,attrs:{shape:f}}),v=tI({inputs:{a:b,b:x},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),v}const oI={kernelName:o.Hc,backendName:"webgl",kernelFunc:iI};const uI={kernelName:o.Vb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:o}=t,{numSamples:c,seed:l,normalized:d}=r,h=d?o:iI({inputs:{logits:o},backend:n,attrs:{dim:o.shape.length-1}}),f=h.shape[0],m=h.shape[1],y=new eI(f,m,c),x=[[l]],v=n.runWebGLProgram(y,[h],"int32",x);return d||n.disposeIntermediateTensorInfo(h),v}};const cI={kernelName:o.Xb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,o]=Ky(e.values,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,t)}let c;return c=Object(o.Wd)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Nx(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new kx(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(c,[r],r.dtype)}},lI=o.ke.nonMaxSuppressionV3Impl;const dI={kernelName:o.Yb,backendName:"webgl",kernelFunc:function(e){o.vd.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:c,scores:l}=t,{maxOutputSize:d,iouThreshold:h,scoreThreshold:f}=r,m=n.readSync(c.dataId),y=n.readSync(l.dataId),{selectedIndices:x}=lI(m,y,d,h,f);return n.makeTensorInfo([x.length],"int32",new Int32Array(x))}},hI=o.ke.nonMaxSuppressionV4Impl;const pI={kernelName:o.Zb,backendName:"webgl",kernelFunc:function(e){o.vd.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:c,scores:l}=t,{maxOutputSize:d,iouThreshold:h,scoreThreshold:f,padToMaxOutputSize:m}=r,y=n.readSync(c.dataId),x=n.readSync(l.dataId),{selectedIndices:v,validOutputs:O}=hI(y,x,d,h,f,m);return[n.makeTensorInfo([v.length],"int32",new Int32Array(v)),n.makeTensorInfo([],"int32",new Int32Array([O]))]}},fI=o.ke.nonMaxSuppressionV5Impl;const mI={kernelName:o.ac,backendName:"webgl",kernelFunc:function(e){o.vd.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:c,scores:l}=t,{maxOutputSize:d,iouThreshold:h,scoreThreshold:f,softNmsSigma:m}=r,y=n.readSync(c.dataId),x=n.readSync(l.dataId),v=d,O=h,w=f,k=m,{selectedIndices:I,selectedScores:S}=fI(y,x,v,O,w,k);return[n.makeTensorInfo([I.length],"int32",new Int32Array(I)),n.makeTensorInfo([S.length],"float32",new Float32Array(S))]}};class bI{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const gI={kernelName:o.cc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:c}=t,{depth:l,onValue:d,offValue:h}=r,f=o.yf.sizeFromShape(c.shape),m=new bI(f,l,d,h),y=ev({inputs:{x:c},backend:n,attrs:{shape:[f]}}),x=n.runWebGLProgram(m,[y],c.dtype);n.disposeIntermediateTensorInfo(y);const v=ev({inputs:{x:x},backend:n,attrs:{shape:[...c.shape,l]}});return n.disposeIntermediateTensorInfo(x),v}};function yI(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=pO({inputs:{input:r},backend:n}),t=yI({inputs:{x:e},backend:n}),o=TO({inputs:{input:r},backend:n}),i=yI({inputs:{x:o},backend:n}),c=_x({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}return Mw({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const xI={kernelName:o.ld,backendName:"webgl",kernelFunc:yI};const vI={kernelName:o.dc,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:o}=n;if("string"===o.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===o.dtype){const t=pO({inputs:{input:o},backend:r}),n=e({inputs:{x:t},backend:r}),c=TO({inputs:{input:o},backend:r}),i=yI({inputs:{x:c},backend:r}),l=_x({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(i),l}return Mw({attrs:{shape:o.shape,dtype:o.dtype,value:1},backend:r})}};const OI={kernelName:o.fc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:c}=r;if(1===t.length)return Tw({inputs:{input:t[0]},backend:n,attrs:{dim:c}});const l=t[0].shape,d=t[0].dtype;t.forEach((e=>{o.yf.assertShapesMatch(l,e.shape,"All tensors passed to stack must have matching shapes"),o.yf.assert(d===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const h=[],f=EO({inputs:t.map((e=>{const t=Tw({inputs:{input:e},backend:n,attrs:{dim:c}});return h.push(t),t})),backend:n,attrs:{axis:c}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class wI{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((p,i)=>p[0]+e[i]+p[1]));const r=e.length,o=ay(r),c=t.map((p=>p[0])).join(","),l=t.map(((p,i)=>p[0]+e[i])).join(","),d=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${o} start = ${o}(${c});\n      ${o} end = ${o}(${l});\n\n      void main() {\n        ${o} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${o} coords = outC - start;\n          setOutput(getX(${d}));\n        }\n      }\n    `:`\n        int start = ${c};\n        int end = ${l};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class kI{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((p,i)=>p[0]+e[i]+p[1]));const r=e.length,o=ay(r),c=t.map((p=>p[0])).join(","),l=t.map(((p,i)=>p[0]+e[i])).join(","),d=bx("rc",r),source=bx("source",r),h=`${d[r-1]} < ${this.outputShape[r-1]}`,f=1===r?"source":`vec2(${source.slice(-2).join()})`,m=[`${o} rc = outputLoc;`,`${d[r-1]} += 1;\n       if(${h}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${d[r-2]} += 1;\n       if(${d[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${d[r-1]} += 1;\n         if(${h}) {`],y=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let x="";for(let i=0,e=1===r?2:4;i<e;i++)x+=`\n        ${m[i]}\n        if (${y}) {\n          result[${i}] = float(value);\n        } else {\n          ${o} source = rc - start;\n          result[${i}] = getChannel(getX(${source.join()}), ${f});\n        }\n      `;x+=1===r?"} ":"}}",this.userCode=`\n      const ${o} start = ${o}(${c});\n      const ${o} end = ${o}(${l});\n\n      void main() {\n        ${o} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${x}\n        setOutput(result);\n      }\n    `}}const II=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{paddings:l,constantValue:d}=r;if(0===o.yf.sizeFromShape(c.shape)){return Mw({backend:n,attrs:{shape:l.map(((p,i)=>p[0]+c.shape[i]+p[1])),value:d,dtype:c.dtype}})}const h=Object(o.Wd)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kI(c.shape,l,d):new wI(c.shape,l,d),f=[[d]];return n.runWebGLProgram(h,[c],c.dtype,f)},SI={kernelName:o.gc,backendName:"webgl",kernelFunc:II},NI=Gx({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),jI={kernelName:o.hc,backendName:"webgl",kernelFunc:NI};const TI={kernelName:o.jc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r,h=c.shape.length,f=[],m=o.yf.parseAxisParam(l,c.shape);let y=m;const x=o.vd.getAxesPermutation(y,h);let v,O=c;if(null!=x&&(O=lv({inputs:{x:c},backend:n,attrs:{perm:x}}),y=o.vd.getInnerMostAxes(y.length,h),f.push(O)),o.vd.assertAxesAreInnerMostDims("prod",y,h),n.shouldExecuteOnCPU([O])){const e=n.texData.get(O.dataId).values,{outVals:t,outShape:r,outDtype:o}=Yy(O.shape,O.dtype,e,y);v=n.makeTensorInfo(r,o,t)}else{const[e,t]=o.vd.computeOutAndReduceShapes(O.shape,y),r=o.yf.sizeFromShape(t),l=ev({inputs:{x:O},backend:n,attrs:{shape:[-1,r]}}),d=av(l,Object(o.lf)(c.dtype),"prod",n);v=ev({inputs:{x:d},backend:n,attrs:{shape:e}}),f.push(l),f.push(d)}if(d){f.push(v);const e=o.vd.expandShapeToKeepDim(v.shape,m);v=ev({inputs:{x:v},backend:n,attrs:{shape:e}})}return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},CI=e=>{const{backend:t,attrs:n}=e,{start:r,stop:o,step:c,dtype:l}=n,d=Zy(r,o,c,l);return t.makeTensorInfo([d.length],l,d)},$I={kernelName:o.kc,backendName:"webgl",kernelFunc:CI},EI=Vx({opSnippet:"return 1.0 / x;"}),AI={kernelName:o.nc,backendName:"webgl",kernelFunc:EI},RI=Vx({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),FI={kernelName:o.oc,backendName:"webgl",kernelFunc:RI},DI=Vx({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),_I={kernelName:o.pc,backendName:"webgl",kernelFunc:DI};class MI{constructor(e,t,n,r,o){this.variableNames=["A"],this.outputShape=[];const[c,l,d,h]=e;this.outputShape=[c,t,n,h];const f=[r&&t>1?l-1:l,r&&n>1?d-1:d],m=[r&&t>1?t-1:t,r&&n>1?n-1:n];let y;y=o?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${f[0]/m[0]},\n          ${f[1]/m[1]});\n      const vec2 inputShapeRC = vec2(${l}.0, ${d}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${y};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class zI{constructor(e,t,n,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[c,l,d,h]=e;this.outputShape=[c,t,n,h];const f=[r&&t>1?l-1:l,r&&n>1?d-1:d],m=[r&&t>1?t-1:t,r&&n>1?n-1:n];let y;y=o?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${f[0]/m[0]},\n          ${f[1]/m[1]},\n          ${f[1]/m[1]});\n      const vec3 inputShapeRC = vec3(${l}.0, ${d}.0,\n                                     ${d}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${y};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${h-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const LI={kernelName:o.rc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:c}=t,{alignCorners:l,halfPixelCenters:d,size:h}=r,[f,m]=h,y=Object(o.Wd)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new zI(c.shape,f,m,l,d):new MI(c.shape,f,m,l,d);return n.runWebGLProgram(y,[c],"float32")}};class PI{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,c,l]=e,d=[n&&c>1?r-1:r,n&&l>1?o-1:o],h=[n&&c>1?c-1:c,n&&l>1?l-1:l],f=d[0]/h[0],m=d[1]/h[1],y=1/f,x=1/m,v=2*Math.ceil(y)+2,O=2*Math.ceil(x)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${f});\n        const float widthScale = float(${m});\n\n        const float invHeightScale = float(${y});\n        const float invWidthScale = float(${x});\n\n        const int winHeight = int(${v});\n        const int winWidth = int(${O});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${c}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${l}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const BI={kernelName:o.sc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:o,dy:c}=t,{alignCorners:l}=r,d=new PI(c.shape,o.shape,l);return n.runWebGLProgram(d,[c],c.dtype)}};class WI{constructor(e,t,n,r,o){this.variableNames=["A"],this.outputShape=[];const[c,l,d,h]=e;this.outputShape=[c,t,n,h];const f=[r&&t>1?l-1:l,r&&n>1?d-1:d],m=[r&&t>1?t-1:t,r&&n>1?n-1:n],y=r?"0.5":"0.0";let x;x=o?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${f[0]/m[0]},\n          ${f[1]/m[1]});\n      const vec2 inputShapeRC = vec2(${l}.0, ${d}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${x};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${y})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class UI{constructor(e,t,n,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[c,l,d,h]=e;this.outputShape=[c,t,n,h];const f=[r&&t>1?l-1:l,r&&n>1?d-1:d],m=[r&&t>1?t-1:t,r&&n>1?n-1:n],y=r?"0.5":"0.0";let x;x=o?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${f[0]/m[0]},\n          ${f[1]/m[1]},\n          ${f[1]/m[1]});\n      const vec3 inputShapeRC = vec3(${l}.0, ${d}.0,\n                                     ${d}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${x};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${y})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${h-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const VI={kernelName:o.tc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:c}=t,{alignCorners:l,halfPixelCenters:d,size:h}=r,[f,m]=h,y=Object(o.Wd)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new UI(c.shape,f,m,l,d):new WI(c.shape,f,m,l,d);return n.runWebGLProgram(y,[c],c.dtype)}};class GI{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,c,l]=e,d=[n&&c>1?r-1:r,n&&l>1?o-1:o],h=[n&&c>1?c-1:c,n&&l>1?l-1:l],f=d[0]/h[0],m=d[1]/h[1],y=1/f,x=1/m,v=2*Math.ceil(y)+2,O=2*Math.ceil(x)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${f});\n        const float widthScale = float(${m});\n\n        const float invHeightScale = float(${y});\n        const float invWidthScale = float(${x});\n\n        const int winHeight = int(${v});\n        const int winWidth = int(${O});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${c}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${l}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${d[0]}) *\n                (float(dyR) / float(${h[0]}));\n\n            float sourceFracCol =\n                float(${d[1]}) *\n                  (float(dyC) / float(${h[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${o}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const HI={kernelName:o.uc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:o,dy:c}=t,{alignCorners:l}=r,d=new GI(c.shape,o.shape,l);return n.runWebGLProgram(d,[c],c.dtype)}};class qI{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,i)=>(i=>-1!==t.indexOf(i)&&1!==e[i]?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`)(i))).join(","),o=ay(n);this.userCode=`\n      void main() {\n        ${o} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class KI{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=bx("rc",n),o=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,c=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,l=ay(n);function d(n){const r=e.map(((r,i)=>function(i,n){return-1!==t.indexOf(i)&&1!==e[i]?`${e[i]} - ${n[i]} - 1`:`${n[i]}`}(i,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${o}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${l} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return d(e)}(r.slice())};\n          if(${o}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",d(e)}(r.slice())};\n          }\n          if(${c}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",d(e)}(r.slice())};\n            if(${o}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",d(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const XI={kernelName:o.vc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{dims:l}=r,d=c.shape.length,h=o.yf.parseAxisParam(l,c.shape);if(0===d)return Fx({inputs:{x:c},backend:n});const f=Object(o.Wd)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new KI(c.shape,h):new qI(c.shape,h);return n.runWebGLProgram(f,[c],c.dtype)}};class YI{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let o="";o="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${o}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const ZI={kernelName:o.wc,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:image}=e,{radians:r,fillValue:c,center:l}=t,d=n,h=new YI(image.shape,c),[f,m]=o.vd.getImageCenter(l,image.shape[1],image.shape[2]),y=[[f,m,Math.sin(r),Math.cos(r)]];return d.runWebGLProgram(h,[image],image.dtype,y)}},JI=Vx({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),QI={kernelName:o.xc,backendName:"webgl",kernelFunc:JI},eS=Vx({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Jy}),tS={kernelName:o.yc,backendName:"webgl",kernelFunc:eS};class nS{constructor(e,t,n,r,o,c,l=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=c;const d=ay(o.length),h=ay(c.length);let f="";1===n?f="i":2===n&&(f="i, j");const m=`getIndices(${f})`;let y="";1===r?y="i":2===r&&(y="i, coords[1]");const x=`getUpdates(${y})`,v=t>1?"strides[j]":"strides";this.userCode=`\n        ${d} strides = ${d}(${o});\n\n        void main() {\n          ${h} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${m});\n              flattenedIndex += index * ${v};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${x};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const rS={kernelName:o.zc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:c,updates:l}=t,{shape:d}=r,{sliceRank:h,numUpdates:f,sliceSize:m,strides:y,outputSize:x}=o.vd.calculateShapes(l,c,d),v=[x/m,m];if(0===x)return n.makeTensorInfo(d,c.dtype);const O=ev({inputs:{x:c},backend:n,attrs:{shape:[f,h]}}),w=ev({inputs:{x:l},backend:n,attrs:{shape:[f,m]}}),k=n.makeTensorInfo([],"float32",new Float32Array([0])),I=new nS(f,h,O.shape.length,w.shape.length,y,v),S=n.runWebGLProgram(I,[w,O,k],w.dtype),N=ev({inputs:{x:S},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(S),n.disposeIntermediateTensorInfo(k),N}};class aS{constructor(e,t,n){let r,o;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)o="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],c=[],l=[];for(let i=0;i<t.length;i++)l.push(`${n[i]}`),i<e&&c.push(`${n[i]}`);r=c.join(),o=l.join()}const c=ay(n);this.userCode=`\n      void main() {\n        ${c} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${o}));\n        } else {\n          setOutput(getB(${o}));\n        }\n      }\n    `}}const sS={kernelName:o.Ac,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:c,e:l}=t,d=new aS(r.shape.length,c.shape,c.shape.length);return n.runWebGLProgram(d,[r,c,l],Object(o.xf)(c.dtype,l.dtype))}},iS=Vx({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${o.vd.SELU_SCALEALPHA};\n  float scale = ${o.vd.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),oS={kernelName:o.Bc,backendName:"webgl",kernelFunc:iS},uS=Vx({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Qy}),cS={kernelName:o.Cc,backendName:"webgl",kernelFunc:uS},lS=Vx({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),dS={kernelName:o.Dc,backendName:"webgl",kernelFunc:lS},hS=Vx({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),pS={kernelName:o.Ec,backendName:"webgl",kernelFunc:hS},fS=Vx({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),mS={kernelName:o.Fc,backendName:"webgl",kernelFunc:fS},bS=Vx({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),gS={kernelName:o.Ic,backendName:"webgl",kernelFunc:bS},yS={kernelName:o.Jc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{blockShape:l,paddings:d}=r;o.yf.assert(c.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const h=l.reduce(((a,b)=>a*b)),f=[[0,0]];f.push(...d);for(let i=1+l.length;i<c.shape.length;++i)f.push([0,0]);const m=[],y=II({inputs:{x:c},backend:n,attrs:{paddings:f,constantValue:0}}),x=o.vd.getReshaped(y.shape,l,h,!1),v=o.vd.getPermuted(x.length,l.length,!1),O=o.vd.getReshapedPermuted(y.shape,l,h,!1),w=ev({inputs:{x:y},backend:n,attrs:{shape:x}}),k=lv({inputs:{x:w},backend:n,attrs:{perm:v}}),I=ev({inputs:{x:k},backend:n,attrs:{shape:O}});return m.push(y),m.push(w),m.push(k),m.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};const xS={kernelName:o.Kc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:o,denseShape:c,defaultValue:l}=t;if(1!==c.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${c.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==o.shape.length)throw new Error(`Values must be a vector, saw:\n         ${o.shape}`);if(0!==l.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${l.shape}`);const d=n.readSync(r.dataId),h=n.readSync(o.dataId),f=n.readSync(c.dataId),m=n.readSync(l.dataId)[0],[y,x,v,O,w]=nx(d,r.shape,r.dtype,h,o.dtype,f,m);return[n.makeTensorInfo(x,r.dtype,y),n.makeTensorInfo([x[0]],o.dtype,v),n.makeTensorInfo([O.length],"bool",new Uint8Array(O.map((e=>Number(e))))),n.makeTensorInfo([w.length],r.dtype,new Int32Array(w))]}};const vS={kernelName:o.Lc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:o,newShape:c}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==o.shape.length)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(1!==c.shape.length)throw new Error(`Target shape should be a vector but received shape ${c.shape}`);const l=Array.from(n.readSync(o.dataId)),d=n.readSync(r.dataId),h=Array.from(n.readSync(c.dataId)),[f,m,y]=rx(d,r.shape,r.dtype,l,h);return[n.makeTensorInfo(m,r.dtype,f),n.makeTensorInfo([y.length],c.dtype,new Int32Array(y))]}};const OS={kernelName:o.Mc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:data,indices:r,segmentIds:o}=t;if(data.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${o.shape}`);const c=n.readSync(data.dataId),l=n.readSync(r.dataId),d=n.readSync(o.dataId),[h,f]=ax(c,data.shape,data.dtype,l,d,!0);return n.makeTensorInfo(f,data.dtype,h)}};const wS={kernelName:o.Nc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:data,indices:r,segmentIds:o}=t;if(data.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${o.shape}`);const c=n.readSync(data.dataId),l=n.readSync(r.dataId),d=n.readSync(o.dataId),[h,f]=ax(c,data.shape,data.dtype,l,d);return n.makeTensorInfo(f,data.dtype,h)}};const kS={kernelName:o.Oc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:c,sparseValues:l,defaultValue:d}=t,{outputShape:h}=r,{sliceRank:f,numUpdates:m,strides:y,outputSize:x}=o.vd.calculateShapes(l,c,h),v=new nS(m,f,c.shape.length,l.shape.length,y,[x,1],!1),O=n.runWebGLProgram(v,[l,c,d],l.dtype),w=ev({inputs:{x:O},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(O),w}};const IS={kernelName:o.Pc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{numOrSizeSplits:l,axis:d}=r,h=o.yf.parseAxisParam(d,c.shape)[0],f=o.vd.prepareSplitSize(c,l,h),m=c.shape.length,y=new Array(m).fill(0),x=c.shape.slice();return f.map((s=>{const e=[...x];e[h]=s;const t=iO({inputs:{x:c},backend:n,attrs:{begin:y,size:e}});return y[h]+=s,t}))}},SS="return sqrt(x);",NS=Vx({opSnippet:SS,packedOpSnippet:SS,cpuKernelImpl:sx}),jS={kernelName:o.Qc,backendName:"webgl",kernelFunc:NS},TS=Vx({opSnippet:"return x * x;"}),CS={kernelName:o.Rc,backendName:"webgl",kernelFunc:TS},$S="return (a - b) * (a - b);",ES=Gx({opSnippet:$S,packedOpSnippet:$S}),AS={kernelName:o.Sc,backendName:"webgl",kernelFunc:ES};const RS={kernelName:o.Tc,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,o=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,c=new kx(r.shape,o);return n.runWebGLProgram(c,[r],r.dtype)}};class FS{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,o=ay(n.length),c=ay(n.length);let l="";if(1===r)l="coords * strides + begin";else{let e=0;l=n.map(((t,i)=>(e++,1===n.length?`coords * strides[${i}] + begin[${i}]`:`coords[${e-1}] * strides[${i}] + begin[${i}]`))).join(",")}this.userCode=`\n      ${o} begin = ${o}(${e});\n      ${o} strides = ${o}(${t});\n\n      void main() {\n        ${c} coords = getOutputCoords();\n        setOutput(getX(${l}));\n      }\n    `}}const DS={kernelName:o.Uc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{begin:l,end:d,strides:h,beginMask:f,endMask:m,ellipsisMask:y,newAxisMask:x,shrinkAxisMask:v}=r,{finalShapeSparse:O,finalShape:w,isIdentity:k,sliceDim0:I,isSimpleSlice:S,begin:N,end:j,strides:T}=o.cf.sliceInfo(c.shape,l,d,h,f,m,y,x,v);let C;if(k)C=ev({inputs:{x:c},backend:n,attrs:{shape:w}});else if(I||S){o.yf.assert(c.shape.length>=1,(()=>`Input must have rank at least 1, got: ${c.shape.length}`));const e=o.cf.computeOutShape(N,j,T),t=iO({inputs:{x:c},backend:n,attrs:{begin:N,size:e}});C=ev({inputs:{x:t},backend:n,attrs:{shape:w}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([c])){const e=n.readSync(c.dataId),t=Object(o.Bd)(c.shape,c.dtype,e),r=ix(O,t,T,N);C=n.makeTensorInfo(w,c.dtype,r.values)}else{const e=new FS(N,T,O);C=n.runWebGLProgram(e,[c],c.dtype)}}const $=ev({inputs:{x:C},backend:n,attrs:{shape:w}});return n.disposeIntermediateTensorInfo(C),$}};const _S={kernelName:o.Vc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:o,nGramWidths:c,leftPad:l,rightPad:d,padWidth:h,preserveShortSequences:f}=r,{data:data,dataSplits:m}=t,y=n.readSync(data.dataId),x=n.readSync(m.dataId),[v,O]=ox(y,x,o,c,l,d,h,f);return[n.makeTensorInfo([v.length],"string",v),n.makeTensorInfo(m.shape,"int32",O)]}};const MS={kernelName:o.Wc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:o}=r,{input:input,delimiter:c}=t;if("string"!==input.dtype)throw new Error("Input must be of datatype string");if(1!==input.shape.length)throw new Error(`Input must be a vector, got shape: ${input.shape}`);if(0!==c.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${c.shape}`);const l=n.readSync(input.dataId),d=n.readSync(c.dataId)[0],[h,f,m]=ux(l,d,o),y=f.length;return[n.makeTensorInfo([y,2],"int32",h),n.makeTensorInfo([y],"string",f),n.makeTensorInfo([2],"int32",new Int32Array(m))]}};const zS={kernelName:o.Xc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:o}=r,{input:input}=t;if("string"!==input.dtype)throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const c=n.readSync(input.dataId),output=cx(c,o);return n.makeTensorInfo(input.shape,"int32",output)}},LS=Vx({opSnippet:"return tan(x);"}),PS={kernelName:o.ad,backendName:"webgl",kernelFunc:LS},BS=Vx({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),WS={kernelName:o.bd,backendName:"webgl",kernelFunc:BS};class US{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[i]*t[i];this.outputShape=n,this.rank=n.length;const r=ay(this.rank),o=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let i=0;i<e.length;i++)r.push(`imod(${n[i]}, ${e[i]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${o}));\n      }\n    `}}function VS(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{reps:l}=r;if("string"===c.dtype||c.shape.length>5){const data=n.readSync(c.dataId),e="string"===c.dtype?data.map((e=>o.yf.decodeString(e))):data,t=Object(o.Bd)(c.shape,c.dtype,e),r=dx(t,l);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const d=new US(c.shape,l);return n.runWebGLProgram(d,[c],c.dtype)}const GS={kernelName:o.ed,backendName:"webgl",kernelFunc:VS};class HS{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class qS{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function KS(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function XS(e){let t=1;for(;t<e;)t*=2;return t}const YS={kernelName:o.fd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{k:l,sorted:d}=r,h=Object(o.Wd)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),f=Object(o.Wd)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),m=c.shape,y=m[m.length-1];if(n.shouldExecuteOnCPU([c])||y<h||l>f){const e=n.readSync(c.dataId),[t,r]=hx(e,m,c.dtype,l,d);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===l)return m[m.length-1]=0,[n.makeTensorInfo(m,c.dtype,[]),n.makeTensorInfo(m,"int32",[])];if(1===y)return[c,Mw({attrs:{shape:m,dtype:"int32",value:0},backend:n})];const x=n.texData.get(c.dataId),v=null!==x&&x.isPacked,O=v?n.unpackTensor(c):c,w=o.yf.sizeFromShape(m)/y,k=ev({inputs:{x:O},attrs:{shape:[w,y]},backend:n});v&&KS(n,O);const I=XS(l),S=XS(y);let N=null;const j=()=>null===N?[k,k]:[k,N],T=(e,t,r)=>{const o=j(),c=new HS(r),l=[[y],[null===N?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],d=N;N=n.runWebGLProgram(c,o,"int32",l),KS(n,d)};for(let e=1;e<I;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)T(t,n,[w,S])}for(let e=S;e>I;e/=2){const t=j(),r=new qS([w,e/2]),o=[[y],[null===N?1:0],[I]],c=N;N=n.runWebGLProgram(r,t,"int32",o),KS(n,c);const l=I/2,d=2*l;for(let e=l;e>=1;e/=2)T(d,e,N.shape)}let C=N;N=iO({inputs:{x:N},backend:n,attrs:{begin:0,size:[w,l]}}),KS(n,C);let $=tk({inputs:{x:k,indices:N},backend:n,attrs:{axis:1,batchDims:1}});KS(n,k);const E=m.slice(0,-1);E.push(l),C=N,N=ev({inputs:{x:N},attrs:{shape:E},backend:n}),KS(n,C);const A=$;return $=ev({inputs:{x:$},attrs:{shape:E},backend:n}),KS(n,A),[$,N]}};class ZS{constructor(e,t,n,r,o,c){this.variableNames=["Image","Transforms"],this.outputShape=c;const l="nearest"===n?1:2;let d;switch(r){case"constant":default:d=1;break;case"reflect":d=2;break;case"wrap":d=3;break;case"nearest":d=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${d} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${d} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${d} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${o});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${o});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${l} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const JS={kernelName:o.gd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:image,transforms:o}=t,{interpolation:c,fillMode:l,fillValue:d,outputShape:h}=r,[f,m,y,x]=image.shape,[v,O]=null!=h?h:[m,y],w=new ZS(m,y,c,l,d,[f,v,O,x]);return n.runWebGLProgram(w,[image,o],"float32")}};const QS={kernelName:o.id,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:o}=n,{x:c}=t;Lg(c,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const l=r.readSync(c.dataId),{outputValues:d,outputShape:h,indices:f}=fx(l,o,c.shape,c.dtype);return[r.makeTensorInfo(h,c.dtype,d),r.makeTensorInfo([f.length],"int32",f)]}};const eN={kernelName:o.jd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:o}=t;let{axis:c}=r;c<0&&(c+=o.shape.length);const l=o,d=l.shape.length,h=o.shape[c],f=new Array(d-1);let m=0;for(let i=0;i<d;i++)i!==c&&(f[m++]=l.shape[i]);const y=[],x=new Array(d).fill(0),v=l.shape.slice();v[c]=1;const O=new Array(h);for(let i=0;i<O.length;i++){x[c]=i;const e=iO({inputs:{x:l},backend:n,attrs:{begin:x,size:v}}),t=ev({inputs:{x:e},backend:n,attrs:{shape:f}});O[i]=t,y.push(e)}return y.forEach((e=>n.disposeIntermediateTensorInfo(e))),O}};class tN{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,o=e.inSize,c=e.numSegments,l=c*Math.ceil(o/n);this.outputShape=[r,l];const d=4*Math.floor(n/4),h=n%4,f="\n        sumValue += dot(values, segFilter);\n    ";let m="";o%n>0&&(m=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return initializationValue;\n        }\n      `);let y="";o%n>0&&(y=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${m}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${y}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${c})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${c})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${d}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${f}\n        }\n\n        int inIdx = inOffset + ${d};\n        if (${1===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${f}\n        } else if (${2===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${f}\n        } else if (${3===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${f}\n        }\n        setOutput(sumValue);\n      }\n    `}}const nN=[pv,mv,gv,xv,wv,Sv,Nv,jv,Rv,Fv,_v,zv,Pv,Wv,Vv,qv,Kv,Zv,Jv,Qv,nO,uO,cO,lO,mO,yO,OO,Mx,IO,AO,zO,UO,VO,GO,HO,qO,XO,ZO,QO,rw,aw,iw,cw,hw,pw,mw,gw,yw,vw,Ow,kw,Sw,jw,Cw,Aw,Dw,zw,Pw,Uw,Gw,Kw,Yw,Zw,Qw,nk,ak,ik,Dx,ok,CO,ck,dk,pk,Px,mk,gk,yk,vk,wk,Ik,Nk,Tk,Ek,Rk,Dk,Mk,zk,Lk,Wk,Uk,Vk,Gk,Hk,Kk,Zk,Qk,uI,Qx,cI,dI,pI,mI,hO,gI,vI,OI,SI,jI,Ux,TI,$I,fO,nI,AI,FI,_I,tv,LI,BI,VI,HI,XI,ZI,QI,tS,rS,sS,oS,cS,dS,pS,mS,oO,oI,gS,yS,xS,vS,OS,wS,kS,IS,jS,CS,AS,RS,DS,_S,MS,zS,sI,cv,PS,WS,GS,YS,JS,dv,QS,eN,{kernelName:o.kd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,segmentIds:l}=t,{numSegments:d}=r,h=c.shape.length,f=[];let m=0;const y=o.vd.getAxesPermutation([m],h);let x=c;null!=y&&(x=lv({inputs:{x:c},backend:n,attrs:{perm:y}}),f.push(x),m=o.vd.getInnerMostAxes(1,h)[0]);const v=o.vd.segment_util.computeOutShape(x.shape,m,d),O=o.yf.sizeFromShape([x.shape[m]]),w=ev({inputs:{x:x},backend:n,attrs:{shape:[-1,O]}});f.push(w);const k=Object(o.lf)(c.dtype),I=(e,t,r,c,l)=>{const d=e.shape[0],h=e.shape[1],m=o.vd.segment_util.segOpComputeOptimalWindowSize(h,l),y=new tN({windowSize:m,inSize:h,batchSize:d,numSegments:l},t),output=n.compileAndRun(y,[e,r],c);if(f.push(output),output.shape[1]===l)return output;const x=CI({backend:n,attrs:{start:0,stop:l,step:1,dtype:"float32"}}),v=VS({inputs:{x:x},backend:n,attrs:{reps:[h/m]}});f.push(x),f.push(v);return I(output,t,v,c,l)},S=ev({inputs:{x:I(w,"unsortedSegmentSum",l,k,d)},backend:n,attrs:{shape:v}});let N=S;if(null!=y){f.push(S);const e=o.vd.getUndoAxesPermutation(y);N=lv({inputs:{x:N},backend:n,attrs:{perm:e}})}return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}},xI];for(const e of nN)Object(o.Ne)(e);o.Bf},,,function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({exp_:function(e){const t={x:Object(c.a)(e,"x","exp")};return r.a.runKernel(o.bb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(371),o=n(367),c=n(413),l=n(370),d=n(403),h=n(368);const f=Object(h.a)({greater_:function(a,b){let e=Object(l.a)(a,"a","greater","string_or_numeric"),t=Object(l.a)(b,"b","greater","string_or_numeric");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.pb,n)}})},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(373),o=n(967);function c(e,t="float32",n){return t=t||"float32",o.c(e),new r.b(e,t,n)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(371),o=n(367),c=n(413),l=n(370),d=n(403),h=n(368);const f=Object(h.a)({lessEqual_:function(a,b){let e=Object(l.a)(a,"a","lessEqual","string_or_numeric"),t=Object(l.a)(b,"b","lessEqual","string_or_numeric");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Bb,n)}})},,,,,,,,,,function(e,t,n){"use strict";var r,o,c,l,d;n.d(t,"b",(function(){return f})),n.d(t,"a",(function(){return m})),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(c||(c={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(l||(l={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(d||(d={}));const h={float32:l,int32:o,bool:c,complex64:d};function f(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return h[e][t]}function m(e){return f(e,"int32")}},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368);const h=Object(d.a)({complex_:function(e,t){const n=Object(c.a)(e,"real","complex"),d=Object(c.a)(t,"imag","complex");l.e(n.shape,d.shape,`real and imag shapes, ${n.shape} and ${d.shape}, must match in call to tf.complex().`);const h={real:n,imag:d};return r.a.runKernel(o.A,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({abs_:function(e){const t=Object(c.a)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.a.runKernel(o.B,e)}{const e={x:t};return r.a.runKernel(o.a,e)}}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(430),h=n(368),f=n(378);const m=Object(h.a)({conv2d_:function(e,filter,t,n,h="NHWC",m=[1,1],y){const x=Object(c.a)(e,"x","conv2d","float32"),v=Object(c.a)(filter,"filter","conv2d","float32");let O=x,w=!1;3===x.rank&&(w=!0,O=Object(f.a)(x,[1,x.shape[0],x.shape[1],x.shape[2]])),l.b(4===O.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${O.rank}.`)),l.b(4===v.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${v.rank}.`)),d.a("conv2d",n,y);const k="NHWC"===h?O.shape[3]:O.shape[1];l.b(k===v.shape[2],(()=>`Error in conv2d: depth of input (${k}) must match input depth for filter ${v.shape[2]}.`)),l.b(d.i(t,m),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${m}'`));const I={x:O,filter:v},S={strides:t,pad:n,dataFormat:h,dilations:m,dimRoundingMode:y},N=r.a.runKernel(o.D,I,S);return w?Object(f.a)(N,[N.shape[1],N.shape[2],N.shape[3]]):N}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(371),o=n(367),c=n(413),l=n(370),d=n(403),h=n(368);const f=Object(h.a)({greaterEqual_:function(a,b){let e=Object(l.a)(a,"a","greaterEqual","string_or_numeric"),t=Object(l.a)(b,"b","greaterEqual","string_or_numeric");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.qb,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(403),d=n(368);const h=Object(d.a)({logicalAnd_:function(a,b){const e=Object(c.a)(a,"a","logicalAnd","bool"),t=Object(c.a)(b,"b","logicalAnd","bool");Object(l.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Gb,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(413),l=n(370),d=n(368);const h=Object(d.a)({matMul_:function(a,b,e=!1,t=!1){let n=Object(l.a)(a,"a","matMul"),d=Object(l.a)(b,"b","matMul");[n,d]=Object(c.makeTypesMatch)(n,d);const h={a:n,b:d},f={transposeA:e,transposeB:t};return r.a.runKernel(o.s,h,f)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(413),l=n(370),d=n(368);const h=Object(d.a)({pow_:function(base,e){let t=Object(l.a)(base,"base","pow"),n=Object(l.a)(e,"exp","pow");[t,n]=Object(c.makeTypesMatch)(t,n);const d={a:t,b:n};return r.a.runKernel(o.gc,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({split_:function(e,t,n=0){const l={x:Object(c.a)(e,"x","split")},d={numOrSizeSplits:t,axis:n};return r.a.runKernel(o.Oc,l,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368);const h=Object(d.a)({stack_:function(e,t=0){const n=Object(c.b)(e,"tensors","stack","string_or_numeric");l.b(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&l.b(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const d=n,h={axis:t};return r.a.runKernel(o.ec,d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(370),o=n(967),c=n(970);function l(e,t){Object(o.d)(e);const n=Object(r.c)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(c.a)(e,null,n,t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368);const h=Object(d.a)({transpose_:function(e,t){const n=Object(c.a)(e,"x","transpose");if(null==t&&(t=n.shape.map(((s,i)=>i)).reverse()),l.b(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{l.b(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const d={x:n},h={perm:t};return r.a.runKernel(o.ed,d,h)}})},function(e,t,n){"use strict";n.d(t,"c",(function(){return O})),n.d(t,"b",(function(){return w})),n.d(t,"a",(function(){return k})),n.d(t,"d",(function(){return I}));var r=n(403),o=n(1e3),c=n(1003),l=n(380),d=n(1008),h=n(819),f=n(1021),m=n(378),y=n(978),x=n(821),v=n(417);function O(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Object(l.a)(e,Object(x.a)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function w(e,t){let n=t;const o=r.getReductionAxes(e.shape,t.shape);return o.length>0&&(n=Object(v.a)(n,o)),Object(m.a)(n,e.shape)}function k(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Object(h.a)(e);if("elu"===t)return Object(o.a)(e);if("relu6"===t)return Object(f.a)(e);if("prelu"===t)return Object(d.a)(e,n);if("leakyrelu"===t)return Object(c.a)(e,r);if("sigmoid"===t)return Object(y.a)(e);throw new Error(`Unknown fused activation ${t}.`)}const I=(e,t)=>!(e>0)||"linear"===t},,,function(e,t,n){"use strict";function r(e,element,t){const n=function(e,t,n){return function(e,t,n){let r=0,o=e.length,c=0,l=!1;for(;r<o;){c=r+(o-r>>>1);const d=n(t,e[c]);d>0?r=c+1:(o=c,l=!d)}return l?r:-r-1}(e,t,n||o)}(e,element,t),r=n<0?-(n+1):n;e.splice(r,0,element)}function o(a,b){return a>b?1:a<b?-1:0}function c(e,t,n,r,o){return h(e,t,n,r,o,0)}function l(e,t,n,r,o,c){return h(e,t,n,r,o,0,!1,c,!0)}function d(e,t,n,r,o,c){return h(e,t,n,r,o,c,!0)}function h(e,t,n,o,c,l,d=!1,h=!1,x=!1){const v=[];for(let i=0;i<t.length;i++)t[i]>c&&v.push({score:t[i],boxIndex:i,suppressBeginIndex:0});v.sort(y);const O=l>0?-.5/l:0,w=[],k=[];for(;w.length<n&&v.length>0;){const t=v.pop(),{score:n,boxIndex:l,suppressBeginIndex:d}=t;if(n<c)break;let h=!1;for(let n=w.length-1;n>=d;--n){const r=f(e,l,w[n]);if(r>=o){h=!0;break}if(t.score=t.score*m(o,O,r),t.score<=c)break}t.suppressBeginIndex=w.length,h||(t.score===n?(w.push(l),k.push(t.score)):t.score>c&&r(v,t,y))}const I=w.length,S=n-I;h&&S>0&&(w.push(...new Array(S).fill(0)),k.push(...new Array(S).fill(0)));const N={selectedIndices:w};return d&&(N.selectedScores=k),x&&(N.validOutputs=I),N}function f(e,i,t){const n=e.subarray(4*i,4*i+4),r=e.subarray(4*t,4*t+4),o=Math.min(n[0],n[2]),c=Math.min(n[1],n[3]),l=Math.max(n[0],n[2]),d=Math.max(n[1],n[3]),h=Math.min(r[0],r[2]),f=Math.min(r[1],r[3]),m=Math.max(r[0],r[2]),y=Math.max(r[1],r[3]),x=(l-o)*(d-c),v=(m-h)*(y-f);if(x<=0||v<=0)return 0;const O=Math.max(o,h),w=Math.max(c,f),k=Math.min(l,m),I=Math.min(d,y),S=Math.max(k-O,0)*Math.max(I-w,0);return S/(x+v-S)}function m(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function y(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return l})),n.d(t,"c",(function(){return d}))},,,function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({clone_:function(e){const t={x:Object(c.a)(e,"x","clone","string_or_numeric")};return r.a.runKernel(o.sb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368);const h=Object(d.a)({tile_:function(e,t){const n=Object(c.a)(e,"x","tile","string_or_numeric");l.b(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const d={x:n},h={reps:t};return r.a.runKernel(o.bd,d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({log_:function(e){const t={x:Object(c.a)(e,"x","log","float32")};return r.a.runKernel(o.Db,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({max_:function(e,t=null,n=!1){const l={x:Object(c.a)(e,"x","max")},d={reductionIndices:t,keepDims:n};return r.a.runKernel(o.Jb,l,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(967),c=n(796),l=n(818);function d(e,t="float32"){if("complex64"===t){const t=d(e,"float32"),n=Object(l.a)(e,"float32");return Object(c.a)(t,n)}const n=Object(o.D)(Object(o.O)(e),t);return r.a.makeTensor(n,e,t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(371),o=n(967),c=n(796);function l(e,t="float32"){if("complex64"===t){const t=l(e,"float32"),n=l(e,"float32");return Object(c.a)(t,n)}const n=Object(o.F)(Object(o.O)(e),t);return r.a.makeTensor(n,e,t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({relu_:function(e){const t={x:Object(c.a)(e,"x","relu")};return r.a.runKernel(o.nc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368);const h=Object(d.a)({unstack_:function(e,t=0){const n=Object(c.a)(e,"x","unstack","string_or_numeric");l.b(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const d={value:n},h={axis:t};return r.a.runKernel(o.gd,d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({step_:function(e,t=0){const n={x:Object(c.a)(e,"x","step")},l={alpha:t};return r.a.runKernel(o.Sc,n,l)}})},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n.d(t,"f",(function(){return m})),n.d(t,"e",(function(){return y})),n.d(t,"d",(function(){return x})),n.d(t,"g",(function(){return v})),n.d(t,"a",(function(){return O})),n.d(t,"b",(function(){return A})),n.d(t,"c",(function(){return r}));var r,o=n(366),c=n(1182),l=n(1113);function d(e){return e instanceof o.cd?{value:e.clone(),recurse:!1}:Object(l.e)(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class h{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class f extends h{constructor(){super(f.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let i=0;i<n;i++)t[i]=this.get(this.wrap(this.begin+i));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function m(e){return new w(e)}function y(e){return new k(e)}function x(e,t){return new F(e,t)}function v(e,t=r.FAIL){return new D(e,t)}f.INITIAL_CAPACITY=32;class O{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new $(this,e)}filter(e){return new T(this,e)}map(e){return new C(this,e)}mapAsync(e){return new E(this,e)}serialMapAsync(e){return new E(this,e).serial()}flatmap(e){return new R(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new j(this,e,t)}columnMajorBatch(e,t=!0,n=l.f){return this.rowMajorBatch(e,t).map((e=>Object(l.d)(e,n)))}concatenate(e,t){return new F(m([this,e]),t)}take(e){return e<0||null==e?this:new N(this,e)}skip(e){return e<0||null==e?this:new S(this,e)}prefetch(e){return new _(this,e)}shuffle(e,t){return new M(this,e,t)}serial(){return new I(this)}}class w extends O{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,Object(l.b)(t,d)),done:!1};var t}}class k extends O{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class I extends O{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class S extends O{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;o.Rd(e.value)}return this.upstream.next()}}class N extends O{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class j extends O{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class T extends O{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;o.Rd(e.value)}}}class C extends O{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=o.qf.getTensorsInContainer(e.value),n=this.transform(e.value),r=o.qf.getTensorsInContainer(n);for(const e of t)o.qf.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class $ extends O{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class E extends O{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=o.qf.getTensorsInContainer(e.value),n=await this.transform(e.value),r=o.qf.getTensorsInContainer(n);for(const e of t)o.qf.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class A extends O{constructor(){super(),this.outputQueue=new f,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class R extends A{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=o.qf.getTensorsInContainer(e.value),n=this.transform(e.value),r=o.qf.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)o.qf.isTensorInList(e,r)||e.dispose();return!0}}class F extends O{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(r||(r={}));class D extends O{constructor(e,t=r.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const o=await Object(l.c)(this.iterators,(function(e){if(e instanceof O){return{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}}return{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case r.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case r.SHORTEST:return{value:null,done:!0};case r.LONGEST:}return this.count++,{value:o,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class _ extends O{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new h(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class M extends _{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=c.alea(n||o.yf.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(378);var h=n(368);const f=Object(h.a)({batchNorm_:function(e,t,n,h,f,m){null==m&&(m=.001);const y=Object(c.a)(e,"x","batchNorm"),x=Object(c.a)(t,"mean","batchNorm"),v=Object(c.a)(n,"variance","batchNorm");let O,w;null!=f&&(O=Object(c.a)(f,"scale","batchNorm")),null!=h&&(w=Object(c.a)(h,"offset","batchNorm")),l.b(x.rank===v.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),l.b(null==w||x.rank===w.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),l.b(null==O||x.rank===O.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const k=function(e){let t;return t=0===e.rank||1===e.rank?Object(d.a)(e,[1,1,1,e.size]):2===e.rank?Object(d.a)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Object(d.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(y),I={x:k,scale:O,offset:w,mean:x,variance:v},S={varianceEpsilon:m},N=r.a.runKernel(o.kb,I,S);return Object(d.a)(N,y.shape)}})},,,,,,,,function(e,t,n){"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,d(e,t,n)}function o(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,d(e,n,r),d(t,n,r)}function c(e,t,n){return Math.max(e,Math.min(t,n))}function l(e){return e%2==0?e:e+1}function d(object,e,t){const n=object[e];object[e]=object[t],object[t]=n}function h(e){let t=0;for(let i=0;i<e.length;i++)t+=e[i];return t}function f(a,b){const e=Math.random();return b*e+(1-e)*a}function m(a,b){let e=0;for(let i=0;i<a.length;i++){const t=Number(a[i])-Number(b[i]);e+=t*t}return e}function y(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function x(e,t,n=""){y(I(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function v(a){y(null!=a,(()=>"The input to the tensor constructor must be a non-null value."))}function O(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||L(e)&&!n)for(let i=0;i<e.length;++i)O(e[i],t,n);else t.push(e);return t}function w(e){if(0===e.length)return 1;let t=e[0];for(let i=1;i<e.length;i++)t*=e[i];return t}function k(e){return 0===e.length}function I(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let i=0;i<e.length;i++)if(e[i]!==t[i])return!1;return!0}function S(a){return a%1==0}function N(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function j(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function T(e){const t=new Uint32Array(e);for(let i=0;i<e;++i)t[i]=i;return r(t),t}function C(a,e){return e<=a.length?a:a+" ".repeat(e-a.length)}function $(e,t=(e=>0),n){return new Promise(((r,o)=>{let c=0;const l=()=>{if(e())return void r();c++;const d=t(c);null!=n&&c>=n?o():setTimeout(l,d)};l()}))}function E(e,t){let n=1,r=-1;for(let i=0;i<e.length;++i)if(e[i]>=0)n*=e[i];else if(-1===e[i]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${i}`);r=i}else if(e[i]<0)throw Error(`Shapes can not be < 0. Found ${e[i]} at dim ${i}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const o=e.slice();return o[r]=t/n,o}function A(e,t){const n=t.length;return y((e=null==e?t.map(((s,i)=>i)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),y(e.every((e=>S(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((a=>a<0?n+a:a))}function R(e,t){const n=[],r=[],o=null!=t&&Array.isArray(t)&&0===t.length,c=null==t||o?null:A(t,e).sort();let l=0;for(let i=0;i<e.length;++i){if(null!=c){if(c[l]===i&&1!==e[i])throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(null==c[l]||c[l]>i)&&1===e[i]&&(n.push(e[i]),r.push(i)),c[l]<=i&&l++}1!==e[i]&&(n.push(e[i]),r.push(i))}return{newShape:n,keptDims:r}}function F(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function D(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function _(e,t){for(let i=0;i<e.length;i++){const n=e[i];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function M(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function z(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function L(a){return a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array||a instanceof Uint8ClampedArray}function P(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function B(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function W(e){return"string"==typeof e||e instanceof String}function U(e){return"boolean"==typeof e}function V(e){return"number"==typeof e}function G(e){return Array.isArray(e)?G(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":V(e)?"float32":W(e)?"string":U(e)?"bool":"float32"}function H(e){return!!(e&&e.constructor&&e.call&&e.apply)}function K(e,t){for(let i=t;i<e;++i)if(e%i==0)return i;return e}function X(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let i=t-3;i>=0;--i)n[i]=n[i+1]*e[i+1];return n}function Y(e,t,a,n=!1){const r=new Array;if(1===t.length){const o=t[0]*(n?2:1);for(let i=0;i<o;i++)r[i]=a[e+i]}else{const o=t[0],c=t.slice(1),l=c.reduce(((e,t)=>e*t))*(n?2:1);for(let i=0;i<o;i++)r[i]=Y(e+i*l,c,a,n)}return r}function Z(e,a,t=!1){if(0===e.length)return a[0];const n=e.reduce(((e,t)=>e*t))*(t?2:1);if(0===n)return[];if(n!==a.length)throw new Error(`[${e}] does not match the input size ${a.length}${t?" for a complex tensor":""}.`);return Y(0,e,a,t)}function J(e,t){const n=Q(e,t);for(let i=0;i<n.length;i++)n[i]=1;return n}function Q(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function ee(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Z(e,new Float32Array(n));if("int32"===t)return Z(e,new Int32Array(n));if("bool"===t)return Z(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function te(e){e.forEach((t=>{y(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function ne(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let i=0;i<e.length-1;++i)r+=n[i]*e[i];return r}function re(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let i=0;i<r.length-1;++i)r[i]=Math.floor(e/n[i]),e-=r[i]*n[i];return r[r.length-1]=e,r}function ae(object){return object&&object.then&&"function"==typeof object.then}n.d(t,"M",(function(){return r})),n.d(t,"N",(function(){return o})),n.d(t,"i",(function(){return c})),n.d(t,"H",(function(){return l})),n.d(t,"S",(function(){return d})),n.d(t,"R",(function(){return h})),n.d(t,"J",(function(){return f})),n.d(t,"l",(function(){return m})),n.d(t,"b",(function(){return y})),n.d(t,"e",(function(){return x})),n.d(t,"d",(function(){return v})),n.d(t,"m",(function(){return O})),n.d(t,"O",(function(){return w})),n.d(t,"y",(function(){return k})),n.d(t,"a",(function(){return I})),n.d(t,"v",(function(){return S})),n.d(t,"T",(function(){return N})),n.d(t,"P",(function(){return j})),n.d(t,"k",(function(){return T})),n.d(t,"L",(function(){return C})),n.d(t,"K",(function(){return $})),n.d(t,"s",(function(){return E})),n.d(t,"I",(function(){return A})),n.d(t,"Q",(function(){return R})),n.d(t,"o",(function(){return F})),n.d(t,"n",(function(){return D})),n.d(t,"h",(function(){return _})),n.d(t,"B",(function(){return M})),n.d(t,"p",(function(){return z})),n.d(t,"A",(function(){return L})),n.d(t,"g",(function(){return P})),n.d(t,"f",(function(){return B})),n.d(t,"z",(function(){return W})),n.d(t,"t",(function(){return U})),n.d(t,"w",(function(){return V})),n.d(t,"r",(function(){return G})),n.d(t,"u",(function(){return H})),n.d(t,"G",(function(){return K})),n.d(t,"j",(function(){return X})),n.d(t,"U",(function(){return Z})),n.d(t,"D",(function(){return J})),n.d(t,"F",(function(){return Q})),n.d(t,"E",(function(){return ee})),n.d(t,"c",(function(){return te})),n.d(t,"C",(function(){return ne})),n.d(t,"q",(function(){return re})),n.d(t,"x",(function(){return ae}))},function(e,t,n){"use strict";n.d(t,"b",(function(){return h})),n.d(t,"a",(function(){return f})),n.d(t,"c",(function(){return m})),n.d(t,"e",(function(){return y})),n.d(t,"d",(function(){return x}));var r=n(445),o=n(1070),c=n(995);const l=Object(o.a)("kernelRegistry",(()=>new Map)),d=Object(o.a)("gradRegistry",(()=>new Map));function h(e,t){const n=v(e,t);return l.get(n)}function f(e){return d.get(e)}function m(e){const t=l.entries(),n=[];for(;;){const{done:r,value:o}=t.next();if(r)break;const[c,l]=o,[d]=c.split("_");d===e&&n.push(l)}return n}function y(e){const{kernelName:t,backendName:n}=e,r=v(t,n);l.has(r)&&c.b(`The kernel '${t}' for backend '${n}' is already registered`),l.set(r,e)}function x(e){const{kernelName:t}=e;d.has(t)&&Object(r.b)().getBool("DEBUG")&&c.b(`Overriding the gradient for '${t}'`),d.set(t,e)}function v(e,t){return`${t}_${e}`}},function(e,t,n){"use strict";(function(e){n(371);var t=n(1071),r=n(445);const o=Object(r.b)();o.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),o.registerFlag("IS_BROWSER",(()=>t.isBrowser())),o.registerFlag("IS_NODE",(()=>void 0!==e&&void 0!==e.versions&&void 0!==e.versions.node)),o.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),o.registerFlag("PROD",(()=>!1)),o.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>o.getBool("DEBUG"))),o.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),o.registerFlag("IS_TEST",(()=>!1)),o.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),o.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1))}).call(this,n(110))},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(371),o=n(967),c=n(375);function l(e,t,n,l){if(null==l&&(l=Object(o.r)(e)),"complex64"===l)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(o.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Object(o.c)(t);const e=Object(o.O)(t),r=Object(o.O)(n);Object(o.b)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let i=0;i<n.length;++i){const e=n[i],r=i!==n.length-1||e!==Object(o.O)(t.slice(i));Object(o.b)(n[i]===t[i]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Object(o.A)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==l?Object(c.toTypedArray)(e,l):Object(o.m)(e,[],!0),r.a.makeTensor(e,t,l)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(430),h=n(368),f=n(378);const m=Object(h.a)({depthwiseConv2d_:function(e,filter,t,n,h="NHWC",m=[1,1],y){const x=Object(c.a)(e,"x","depthwiseConv2d","float32"),v=Object(c.a)(filter,"filter","depthwiseConv2d","float32");let O=x,w=!1;3===x.rank&&(w=!0,O=Object(f.a)(x,[1,x.shape[0],x.shape[1],x.shape[2]])),l.b(4===O.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${O.rank}.`)),l.b(4===v.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${v.rank}.`)),l.b(O.shape[3]===v.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${O.shape[3]}) must match the inChannels dimension in filter ${v.shape[2]}.`)),d.a("depthwiseConv2d",n,y);const k={x:O,filter:v},I={strides:t,pad:n,dataFormat:h,dilations:m,dimRoundingMode:y},S=r.a.runKernel(o.P,k,I);return w?Object(f.a)(S,[S.shape[1],S.shape[2],S.shape[3]]):S}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(371),o=n(367),c=n(413),l=n(370),d=n(403),h=n(368);const f=Object(h.a)({equal_:function(a,b){let e=Object(l.a)(a,"a","equal","string_or_numeric"),t=Object(l.a)(b,"b","equal","string_or_numeric");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Z,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368);const h=Object(d.a)({expandDims_:function(e,t=0){const n=Object(c.a)(e,"x","expandDims","string_or_numeric");l.b(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const d={input:n},h={dim:t};return r.a.runKernel(o.cb,d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(371),o=n(367);function c(e,t,n){const c={shape:e,value:t,dtype:n};return r.a.runKernel(o.fb,{},c)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(371),o=n(367),c=n(413),l=n(370),d=n(403),h=n(391),f=n(368);const m=Object(f.a)({maximum_:function(a,b){let e=Object(l.a)(a,"a","maximum"),t=Object(l.a)(b,"b","maximum");[e,t]=Object(c.makeTypesMatch)(e,t),"bool"===e.dtype&&(e=Object(h.a)(e,"int32"),t=Object(h.a)(t,"int32")),Object(d.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Pb,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({mean_:function(e,t=null,n=!1){const l={x:Object(c.a)(e,"x","mean")},d={axis:t,keepDims:n};return r.a.runKernel(o.Qb,l,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({reverse_:function(e,t){const n={x:Object(c.a)(e,"x","reverse")},l={dims:t};return r.a.runKernel(o.uc,n,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({sigmoid_:function(e){const t={x:Object(c.a)(e,"x","sigmoid","float32")};return r.a.runKernel(o.Bc,t)}})},function(e,t,n){"use strict";n.r(t),n.d(t,"assertParamsValid",(function(){return o})),n.d(t,"maskToAxes",(function(){return c})),n.d(t,"computeOutShape",(function(){return l})),n.d(t,"stridesWithElidedDims",(function(){return d})),n.d(t,"getNormalizedAxes",(function(){return m})),n.d(t,"startIndicesWithElidedDims",(function(){return y})),n.d(t,"stopIndicesWithElidedDims",(function(){return x})),n.d(t,"stridesForAxis",(function(){return v})),n.d(t,"startForAxis",(function(){return O})),n.d(t,"stopForAxis",(function(){return w})),n.d(t,"isSliceContinous",(function(){return k})),n.d(t,"computeFlatOffset",(function(){return I})),n.d(t,"parseSliceParams",(function(){return S})),n.d(t,"sliceInfo",(function(){return N}));var r=n(967);function o(input,e,t){const n=input.shape.length;r.b(n===e.length,(()=>`Error in slice${n}D: Length of begin ${e} must match the rank of the array (${n}).`)),r.b(n===t.length,(()=>`Error in slice${n}D: Length of size ${t} must match the rank of the array (${n}).`));for(let i=0;i<n;++i)r.b(e[i]+t[i]<=input.shape[i],(()=>`Error in slice${n}D: begin[${i}] + size[${i}] (${e[i]+t[i]}) would overflow input.shape[${i}] (${input.shape[i]})`))}function c(mask){const e=[];let t=0;for(;mask>0;)1&mask&&e.push(t),mask/=2,t++;return e}function l(e,t,n){const r=[];for(let o=0;o<e.length;o++)r[o]=Math.ceil((t[o]-e[o])/n[o]);return r}function d(e,t,n,r){const o=[...e];for(let i=o.length;i<r.length;i++)o.push(1);for(let i=0;i<n;i++)0===i?o[t]=1:(o.splice(t,0,1),o.pop());return o}function h(e,t,n){return n<=e?n:n-(t-1)}function f(e,t){const n=[];for(let i=0;i<e;i++)n.push(t+i);return n}function m(e,t,n,r,o,c,l,h,f){const m=e.length;let k=new Array(m),I=new Array(m),S=new Array(m);if(t.length&&n>0){const f=t[0],m=n+1;k=y(l,f,m,r,e),I=x(h,f,m,o,e),S=d(c,f,m,e)}else for(let t=0;t<m;t++)k[t]=O(l,r,c,e,t,f),I[t]=w(h,o,c,e,t,f),S[t]=v(c,t,f);return{begin:k,end:I,strides:S}}function y(e,t,n,r,o){const c=[...o],l=f(n,t);for(let o=0;o<c.length;o++)if(l.indexOf(o)>-1)c[o]=0;else{const l=h(t,n,o);let d=r[l];e&1<<l&&(d=0),c[o]=d}return c}function x(e,t,n,o,c){const l=[...c],d=f(n,t);for(let r=0;r<l.length;r++)if(d.indexOf(r)>-1)l[r]=Number.MAX_SAFE_INTEGER;else{const c=h(t,n,r);let d=o[c];e&1<<c&&(d=Number.MAX_SAFE_INTEGER),l[r]=d}for(let i=0;i<l.length;i++){const e=c[i];l[i]<0&&(l[i]+=e),l[i]=r.i(0,l[i],c[i])}return l}function v(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function O(e,t,n,o,c,l){let d=t[c];const h=n[c]||1;(e&1<<c||l&1<<c||null==d)&&(d=h>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const f=o[c];return d<0&&(d+=f),d=r.i(0,d,f-1),d}function w(e,t,n,o,c,l){let d=t[c];const h=n[c]||1;(e&1<<c||l&1<<c||null==d)&&(d=h>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const f=o[c];return d<0&&(d+=f),d=h>0?r.i(0,d,f):r.i(-1,d,f-1),d}function k(e,t,n){let r=n.length;for(let i=0;i<n.length;i++)if(n[i]>1){r=i;break}for(let i=r+1;i<n.length;i++)if(t[i]>0||n[i]!==e[i])return!1;return!0}function I(e,t){let n=e.length>0?e[e.length-1]:1;for(let i=0;i<e.length-1;i++)n+=e[i]*t[i];return n}function S(e,t,n){let o;const c=e.shape.length;let l;return o="number"==typeof t?[t,...new Array(c-1).fill(0)]:t.length<c?t.concat(new Array(c-t.length).fill(0)):t.slice(),o.forEach((e=>{r.b(-1!==e,(()=>"slice() does not support negative begin indexing."))})),l=null==n?new Array(c).fill(-1):"number"==typeof n?[n,...new Array(c-1).fill(-1)]:n.length<c?n.concat(new Array(c-n.length).fill(-1)):n,l=l.map(((t,i)=>t>=0?t:(r.b(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${i}.`)),e.shape[i]-o[i]))),[o,l]}function N(e,t,n,r,o,c,l,d,h){let f;if(null==r?(f=new Array(t.length),f.fill(1)):f=r,null!=l&&0!=(l&l-1))throw new Error("Multiple ellipses in slice is not allowed.");let m=!1;const y={dims:f.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:f.slice(),beginMask:o,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h};for(let i=0;i<y.dims;i++)m&&0!=(1<<i&d)&&y.numAddAxisAfterEllipsis++,1<<i&l&&(m=!0);m||(y.ellipsisMask|=1<<y.dims,y.dims++);const x={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let i=0;i<e.dims;i++)if(1<<i&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-i)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=i}else if(1<<i&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[i]),null!=e.end&&(t.end[n]=e.end[i]),t.strides[n]=e.strides[i],e.beginMask&1<<i&&(t.beginMask|=1<<n),e.endMask&1<<i&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<i?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(i)),t.inputShapeGatherIndicesSparse[n]=i,n++}}(y,x);let v=!0,O=!0,w=!0;const k=[],I=[];for(let i=0;i<e.length;++i){if(0===x.strides[i])throw Error(`strides[${i}] must be non-zero`);const t=!!(x.shrinkAxisMask&1<<i),n=e[i];if(-1===n){k.push(t?1:-1);continue}const r=[x.beginMask&1<<i,x.endMask&1<<i],o=[x.strides[i]>0?0:-1,x.strides[i]>0?n:n-1];if(t&&x.strides[i]<=0)throw Error("only stride 1 allowed on non-range indexing.");w=w&&1===x.strides[i];const c=!!(x.beginMask&1<<i&&x.endMask&1<<i);if(x.beginValid&&x.endValid){if(t){const e=x.begin[i]<0?n+x.begin[i]:x.begin[i];if(x.begin[i]=e,x.end[i]=x.begin[i]+1,e<0||e>=n)throw Error(`slice index ${x.begin[i]} of dimension ${i} out of bounds.`)}else x.begin[i]=j(x.begin[i],0,x.strides[i],n,r,o),x.end[i]=j(x.end[i],1,x.strides[i],n,r,o);const e=1===x.strides[i]&&0===x.begin[i]&&x.end[i]===n;v=v&&e,O=O&&(0===i&&1===x.strides[i]||e)}else v=v&&1===x.strides[i]&&c,O=O&&(0===i&&1===x.strides[i]||c);let l,d=!1;if(x.beginValid&&x.endValid?(l=x.end[i]-x.begin[i],d=!0):t?(l=1,d=!0):c&&n>=0&&(l=x.strides[i]<0?-n:n,d=!0),d){let e;e=0===l||l<0!=x.strides[i]<0?0:Math.trunc(l/x.strides[i])+(l%x.strides[i]!=0?1:0),k.push(e)}else k.push(-1)}for(let e=0;e<x.finalShapeGatherIndices.length;++e){const t=x.finalShapeGatherIndices[e];t>=0?I.push(k[t]):-2===t&&I.push(1)}return{finalShapeSparse:I.filter(((e,i)=>-2!==x.finalShapeGatherIndices[i])),finalShape:I,isIdentity:v,sliceDim0:O,isSimpleSlice:w,begin:x.begin,end:x.end,strides:x.strides}}function j(e,t,n,r,o,c){if(o[t])return n>0?c[t]:c[t+1&1];{const t=e<0?r+e:e;return t<c[0]?c[0]:t>c[1]?c[1]:t}}},function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"b",(function(){return c})),n.d(t,"a",(function(){return l}));var r=n(967);function o(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,o=t.rank>1?t.rank-1:1,c=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${o}.`;if(n.rank<o)throw new Error(c+` update.rank < ${o}. `);if(e.length<r+(n.rank-o))throw new Error(c+` Output shape length < ${r+(n.rank-o)}`);if(n.rank!==o+e.length-r)throw new Error(c+" update.rank != "+(o+e.length-r));for(let e=0;e<o;++e)if(n.shape[e]!==t.shape[e])throw new Error(c+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-o;++t)if(n.shape[t+o]!==e[t+r])throw new Error(c+` updates.shape[${t+o}] (${n.shape[t+o]}) != shape[${t+o}] (${e[t+o]})`)}function c(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}o(n,t,e)}function l(e,t,n){const o=t.shape.length,c=o>1?t.shape[o-1]:1,l=n.length;let d=1;for(let i=c;i<l;++i)d*=n[i];const h=c<1?1:c;return{sliceRank:c,numUpdates:Object(r.O)(t.shape)/h,sliceSize:d,strides:[...Object(r.j)(n.slice(0,c)),1],outputSize:Object(r.O)(n)}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368);const h=Object(d.a)({spaceToBatchND_:function(e,t,n){const d=Object(c.a)(e,"x","spaceToBatchND");l.b(d.rank>=1+t.length,(()=>`input rank ${d.rank} should be > than [blockShape] ${t.length}`)),l.b(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),l.b(d.shape.reduce(((a,b,i)=>i>0&&i<=t.length?a&&(b+n[i-1][0]+n[i-1][1])%t[i-1]==0:a),!0),(()=>`input spatial dimensions ${d.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const h={x:d},f={blockShape:t,paddings:n};return r.a.runKernel(o.Ic,h,f)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({logicalNot_:function(e){const t={x:Object(c.a)(e,"x","logicalNot","bool")};return r.a.runKernel(o.Hb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368);const h=Object(d.a)({batchToSpaceND_:function(e,t,n){const d=Object(c.a)(e,"x","batchToSpaceND"),h=t.reduce(((a,b)=>a*b));l.b(d.rank>=1+t.length,(()=>`input rank is ${d.rank} but should be > than blockShape.length ${t.length}`)),l.b(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),l.b(d.shape[0]%h==0,(()=>`input tensor batch is ${d.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${h}`));const f={x:d},m={blockShape:t,crops:n};return r.a.runKernel(o.t,f,m)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));const r={};function o(e){return r[e]}},,,,,,,,,,,function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return c}));var r=n(445);function o(...e){Object(r.b)().getBool("IS_TEST")||Object(r.b)().getBool("PROD")||console.warn(...e)}function c(...e){Object(r.b)().getBool("IS_TEST")||Object(r.b)().getBool("PROD")||console.log(...e)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return o}));class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class o{refCount(e){return c("refCount")}incRef(e){return c("incRef")}timerAvailable(){return!0}time(e){return c("time")}read(e){return c("read")}readSync(e){return c("readSync")}readToGPU(e,t){return c("readToGPU")}numDataIds(){return c("numDataIds")}disposeData(e,t){return c("disposeData")}write(e,t,n){return c("write")}move(e,t,n,r,o){return c("move")}memory(){return c("memory")}floatPrecision(){return c("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return c("dispose")}}function c(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(370),o=n(970);function c(e,t,n){const c=Object(r.c)(e,n);return Object(o.a)(e,t,c,n)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return y}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(391),h=n(430),f=n(368),m=n(378);const y=Object(f.a)({avgPool_:function(e,t,n,f,y){const x=Object(c.a)(e,"x","avgPool","float32");l.b(h.i(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let v=x,O=!1;3===x.rank&&(O=!0,v=Object(m.a)(x,[1,x.shape[0],x.shape[1],x.shape[2]])),l.b(4===v.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${v.rank}.`)),h.a("avgPool",f,y);const w={x:v},k={filterSize:t,strides:n,pad:f,dimRoundingMode:y};let I=r.a.runKernel(o.o,w,k);return I=Object(d.a)(I,x.dtype),O?Object(m.a)(I,[I.shape[1],I.shape[2],I.shape[3]]):I}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(413),l=n(370),d=n(368);const h=Object(d.a)({floorDiv_:function(a,b){let e=Object(l.a)(a,"a","floorDiv"),t=Object(l.a)(b,"b","floorDiv");[e,t]=Object(c.makeTypesMatch)(e,t);const n={a:e,b:t};return r.a.runKernel(o.ib,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({elu_:function(e){const t={x:Object(c.a)(e,"x","elu","float32")};return r.a.runKernel(o.X,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({floor_:function(e){const t={x:Object(c.a)(e,"x","floor","float32")};return r.a.runKernel(o.hb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({gather_:function(e,t,n=0,l=0){const d={x:Object(c.a)(e,"x","gather"),indices:Object(c.a)(t,"indices","gather","int32")},h={axis:n,batchDims:l};return r.a.runKernel(o.ob,d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({leakyRelu_:function(e,t=.2){const n={x:Object(c.a)(e,"x","leakyRelu")},l={alpha:t};return r.a.runKernel(o.zb,n,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(430),h=n(368),f=n(378);const m=Object(h.a)({maxPool_:function(e,t,n,h,m){const y=Object(c.a)(e,"x","maxPool");let x=y,v=!1;3===y.rank&&(v=!0,x=Object(f.a)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),l.b(4===x.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${x.rank}.`)),l.b(d.i(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),d.a("maxPool",h,m);const O={x:x},w={filterSize:t,strides:n,pad:h,dimRoundingMode:m},k=r.a.runKernel(o.Kb,O,w);return v?Object(f.a)(k,[k.shape[1],k.shape[2],k.shape[3]]):k}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(371),o=n(367),c=n(413),l=n(370),d=n(403),h=n(391),f=n(368);const m=Object(f.a)({minimum_:function(a,b){let e=Object(l.a)(a,"a","minimum"),t=Object(l.a)(b,"b","minimum");[e,t]=Object(c.makeTypesMatch)(e,t),"bool"===e.dtype&&(e=Object(h.a)(e,"int32"),t=Object(h.a)(t,"int32")),Object(d.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Sb,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(371),o=n(367),c=n(413),l=n(370),d=n(403),h=n(368);const f=Object(h.a)({notEqual_:function(a,b){let e=Object(l.a)(a,"a","notEqual","string_or_numeric"),t=Object(l.a)(b,"b","notEqual","string_or_numeric");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.bc,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({pad_:function(e,t,n=0){const l=Object(c.a)(e,"x","pad");if(0===l.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const d={paddings:t,constantValue:n},h={x:l};return r.a.runKernel(o.fc,h,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({prelu_:function(e,t){const n={x:Object(c.a)(e,"x","prelu"),alpha:Object(c.a)(t,"alpha","prelu")};return r.a.runKernel(o.hc,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(370),o=n(967),c=n(368),l=n(378);const d=Object(c.a)({squeeze_:function(e,t){const n=Object(r.a)(e,"x","squeeze");return Object(l.a)(n,Object(o.Q)(n.shape,t).newShape)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(371),o=n(367),c=n(370),l=n(813),d=n(368),h=n(378);const f=Object(d.a)({broadcastTo_:function(e,t){let input=Object(c.a)(e,"broadcastTo","x");const n=input.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<input.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${input.rank}.`);if(t.length>input.rank){const e=input.shape.slice();for(;e.length<t.length;)e.unshift(1);input=Object(h.a)(input,e)}const d=input.shape,f=Array.from(t);for(let i=t.length-1;i>=0;i--)if(d[i]===t[i])f[i]=1;else if(1!==input.shape[i])throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(0===f.map(((e,i)=>e>1?i:-1)).filter((i=>i>=0)).length)return Object(l.a)(input);const m={x:input},y={reps:f};return r.a.runKernel(o.bd,m,y)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(967),l=n(368);const d=Object(l.a)({fft_:function(input){Object(c.b)("complex64"===input.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${input.dtype}.`));const e={input:input};return r.a.runKernel(o.eb,e)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(967),l=n(368);const d=Object(l.a)({ifft_:function(input){Object(c.b)("complex64"===input.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${input.dtype}.`));const e={input:input};return r.a.runKernel(o.rb,e)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return w}));var r=n(967),o=n(796),c=n(522),l=n(1015),d=n(368),h=n(1014),f=n(378),m=n(507),y=n(803),x=n(818),v=n(410),O=n(1011);const w=Object(d.a)({rfft_:function(input,e){Object(r.b)("float32"===input.dtype,(()=>`The dtype for rfft() must be real value but got ${input.dtype}`));let t=input.shape[input.shape.length-1];const n=input.size/t;let d;if(null!=e&&e<t){const n=input.shape.map((e=>0)),r=input.shape.map((e=>e));r[input.shape.length-1]=e,d=Object(m.a)(input,n,r),t=e}else if(null!=e&&e>t){const n=input.shape.map((e=>e));n[input.shape.length-1]=e-t,d=Object(c.a)([input,Object(x.a)(n)],input.shape.length-1),t=e}else d=input;const w=Object(v.a)(d),k=Object(f.a)(Object(o.a)(d,w),[n,t]),I=Object(O.a)(k),S=Math.floor(t/2)+1,N=Object(h.a)(I),j=Object(l.a)(I),T=Object(y.a)(N,[S,t-S],N.shape.length-1),C=Object(y.a)(j,[S,t-S],j.shape.length-1),$=d.shape.slice();return $[d.shape.length-1]=S,Object(f.a)(Object(o.a)(T[0],C[0]),$)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({real_:function(input){const e={input:Object(c.a)(input,"input","real")};return r.a.runKernel(o.kc,e)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({imag_:function(input){const e={input:Object(c.a)(input,"input","imag")};return r.a.runKernel(o.tb,e)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(371),o=n(367);function c(e,t,n=1,c="float32"){if(0===n)throw new Error("Cannot have a step of zero");const l={start:e,stop:t,step:n,dtype:c};return r.a.runKernel(o.jc,{},l)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return I}));var r=n(370),o=n(967),c=n(797),l=n(552),d=n(816),h=n(1018),f=n(368),m=n(802),y=n(378),x=n(409),v=n(553),O=n(426),w=n(417);function k(e,p,t=null){if(0===e.rank)return Object(c.a)(e);if(1!==e.rank&&null===t)return k(Object(y.a)(e,[-1]),p,t);if(1===e.rank||"number"==typeof t||Array.isArray(t)&&1===t.length){if(1===p)return Object(w.a)(Object(c.a)(e),t);if(p===1/0)return Object(d.a)(Object(c.a)(e),t);if(p===-1/0)return Object(h.a)(Object(c.a)(e),t);if("euclidean"===p||2===p)return Object(v.a)(Object(w.a)(Object(m.a)(Object(c.a)(e),Object(x.a)(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${p}`)}if(Array.isArray(t)&&2===t.length){if(1===p)return Object(d.a)(Object(w.a)(Object(c.a)(e),t[0]),t[1]-1);if(p===1/0)return Object(d.a)(Object(w.a)(Object(c.a)(e),t[1]),t[0]);if(p===-1/0)return Object(h.a)(Object(w.a)(Object(c.a)(e),t[1]),t[0]);if("fro"===p||"euclidean"===p)return Object(v.a)(Object(w.a)(Object(O.a)(e),t));throw new Error(`Error in norm: invalid ord value: ${p}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const I=Object(f.a)({norm_:function(e,t="euclidean",n=null,c=!1){const d=k(e=Object(r.a)(e,"x","norm"),t,n);let h=d.shape;if(c){const t=Object(o.I)(n,e.shape);h=l.e(d.shape,t)}return Object(y.a)(d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({min_:function(e,t=null,n=!1){const l={x:Object(c.a)(e,"x","min")},d={axis:t,keepDims:n};return r.a.runKernel(o.Rb,l,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(371),o=n(367),c=n(413),l=n(370),d=n(403),h=n(368);const f=Object(h.a)({squaredDifference_:function(a,b){let e=Object(l.a)(a,"a","squaredDifference"),t=Object(l.a)(b,"b","squaredDifference");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Rc,n,{})}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var r=n(370),o=n(967),c=n(414),l=n(552),d=n(580),h=n(815),f=n(816),m=n(368),y=n(378),x=n(404),v=n(417);const O=Object(m.a)({logSumExp_:function(e,t=null,n=!1){const m=Object(r.a)(e,"x","logSumExp"),O=Object(o.I)(t,m.shape),w=Object(f.a)(m,O,!0),a=Object(x.a)(m,w),b=Object(d.a)(a),k=Object(v.a)(b,O),I=Object(h.a)(k),S=Object(c.a)(Object(y.a)(w,I.shape),I);if(n){const e=Object(l.e)(S.shape,O);return Object(y.a)(S,e)}return S}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({relu6_:function(e){const t={x:Object(c.a)(e,"x","relu6")};return r.a.runKernel(o.oc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({cumsum_:function(e,t=0,n=!1,l=!1){const d={x:Object(c.a)(e,"x","cumsum")},h={axis:t,exclusive:n,reverse:l};return r.a.runKernel(o.M,d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368);const h=Object(d.a)({unsortedSegmentSum_:function(e,t,n){const d=Object(c.a)(e,"x","unsortedSegmentSum"),h=Object(c.a)(t,"segmentIds","unsortedSegmentSum","int32");Object(l.b)(Object(l.v)(n),(()=>"numSegments must be of dtype int"));const f={x:d,segmentIds:h},m={numSegments:n};return r.a.runKernel(o.hd,f,m)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(371),o=n(367),c=n(413),l=n(370),d=n(403),h=n(368);const f=Object(h.a)({less_:function(a,b){let e=Object(l.a)(a,"a","less","string_or_numeric"),t=Object(l.a)(b,"b","less","string_or_numeric");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Ab,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({cos_:function(e){const t={x:Object(c.a)(e,"x","cos","float32")};return r.a.runKernel(o.J,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(403),d=n(368);const h=Object(d.a)({logicalOr_:function(a,b){const e=Object(c.a)(a,"a","logicalOr","bool"),t=Object(c.a)(b,"b","logicalOr","bool");Object(l.assertAndGetBroadcastShape)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Ib,n)}})},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";(function(e,r){let o;function c(){if(null==o){let t;if("undefined"!=typeof window)t=window;else if(void 0!==e)t=e;else if(void 0!==r)t=r;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}o=t}return o}function l(e,t){const n=function(){const e=c();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,"b",(function(){return c})),n.d(t,"a",(function(){return l}))}).call(this,n(52),n(110))},function(e,t,n){"use strict";let r;function o(e){r=e}function c(nav){if(void 0!==r)return r;if(nav||"undefined"!=typeof navigator&&null!=navigator){if(nav||(nav=navigator),"ReactNative"===nav.product)return!0;const a=nav.userAgent||nav.vendor||("undefined"!=typeof window?window.opera:"");if(!a){const e=nav;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))}return!1}function l(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}n.r(t),n.d(t,"mockIsMobile",(function(){return o})),n.d(t,"isMobile",(function(){return c})),n.d(t,"isBrowser",(function(){return l}))},function(e,t,n){"use strict";(function(e){var r=n(1274),o=n(1275),c=n(1276);function l(){return h.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function d(e,t){if(l()<t)throw new RangeError("Invalid typed array length");return h.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=h.prototype:(null===e&&(e=new h(t)),e.length=t),e}function h(e,t,n){if(!(h.TYPED_ARRAY_SUPPORT||this instanceof h))return new h(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return y(this,e)}return f(this,e,t,n)}function f(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r);h.TYPED_ARRAY_SUPPORT?(e=t).__proto__=h.prototype:e=x(e,t);return e}(e,t,n,r):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!h.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|O(t,n),o=(e=d(e,r)).write(t,n);o!==r&&(e=e.slice(0,o));return e}(e,t,n):function(e,t){if(h.isBuffer(t)){var n=0|v(t.length);return 0===(e=d(e,n)).length||t.copy(e,0,0,n),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(r=t.length)!=r?d(e,0):x(e,t);if("Buffer"===t.type&&c(t.data))return x(e,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function m(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function y(e,t){if(m(t),e=d(e,t<0?0:0|v(t)),!h.TYPED_ARRAY_SUPPORT)for(var i=0;i<t;++i)e[i]=0;return e}function x(e,t){var n=t.length<0?0:0|v(t.length);e=d(e,n);for(var i=0;i<n;i+=1)e[i]=255&t[i];return e}function v(e){if(e>=l())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+l().toString(16)+" bytes");return 0|e}function O(e,t){if(h.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return X(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return Y(e).length;default:if(r)return X(e).length;t=(""+t).toLowerCase(),r=!0}}function w(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return M(this,t,n);case"utf8":case"utf-8":return R(this,t,n);case"ascii":return D(this,t,n);case"latin1":case"binary":return _(this,t,n);case"base64":return A(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return z(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function k(b,e,t){var i=b[e];b[e]=b[t],b[t]=i}function I(e,t,n,r,o){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=o?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(o)return-1;n=e.length-1}else if(n<0){if(!o)return-1;n=0}if("string"==typeof t&&(t=h.from(t,r)),h.isBuffer(t))return 0===t.length?-1:S(e,t,n,r,o);if("number"==typeof t)return t&=255,h.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):S(e,[t],n,r,o);throw new TypeError("val must be string, number or Buffer")}function S(e,t,n,r,o){var i,c=1,l=e.length,d=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;c=2,l/=2,d/=2,n/=2}function h(e,i){return 1===c?e[i]:e.readUInt16BE(i*c)}if(o){var f=-1;for(i=n;i<l;i++)if(h(e,i)===h(t,-1===f?0:i-f)){if(-1===f&&(f=i),i-f+1===d)return f*c}else-1!==f&&(i-=i-f),f=-1}else for(n+d>l&&(n=l-d),i=n;i>=0;i--){for(var m=!0,y=0;y<d;y++)if(h(e,i+y)!==h(t,y)){m=!1;break}if(m)return i}return-1}function N(e,t,n,r){n=Number(n)||0;var o=e.length-n;r?(r=Number(r))>o&&(r=o):r=o;var c=t.length;if(c%2!=0)throw new TypeError("Invalid hex string");r>c/2&&(r=c/2);for(var i=0;i<r;++i){var l=parseInt(t.substr(2*i,2),16);if(isNaN(l))return i;e[n+i]=l}return i}function j(e,t,n,r){return Z(X(t,e.length-n),e,n,r)}function T(e,t,n,r){return Z(function(e){for(var t=[],i=0;i<e.length;++i)t.push(255&e.charCodeAt(i));return t}(t),e,n,r)}function C(e,t,n,r){return T(e,t,n,r)}function $(e,t,n,r){return Z(Y(t),e,n,r)}function E(e,t,n,r){return Z(function(e,t){for(var n,r,o,c=[],i=0;i<e.length&&!((t-=2)<0);++i)r=(n=e.charCodeAt(i))>>8,o=n%256,c.push(o),c.push(r);return c}(t,e.length-n),e,n,r)}function A(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function R(e,t,n){n=Math.min(e.length,n);for(var r=[],i=t;i<n;){var o,c,l,d,h=e[i],f=null,m=h>239?4:h>223?3:h>191?2:1;if(i+m<=n)switch(m){case 1:h<128&&(f=h);break;case 2:128==(192&(o=e[i+1]))&&(d=(31&h)<<6|63&o)>127&&(f=d);break;case 3:o=e[i+1],c=e[i+2],128==(192&o)&&128==(192&c)&&(d=(15&h)<<12|(63&o)<<6|63&c)>2047&&(d<55296||d>57343)&&(f=d);break;case 4:o=e[i+1],c=e[i+2],l=e[i+3],128==(192&o)&&128==(192&c)&&128==(192&l)&&(d=(15&h)<<18|(63&o)<<12|(63&c)<<6|63&l)>65535&&d<1114112&&(f=d)}null===f?(f=65533,m=1):f>65535&&(f-=65536,r.push(f>>>10&1023|55296),f=56320|1023&f),r.push(f),i+=m}return function(e){var t=e.length;if(t<=F)return String.fromCharCode.apply(String,e);var n="",i=0;for(;i<t;)n+=String.fromCharCode.apply(String,e.slice(i,i+=F));return n}(r)}t.Buffer=h,t.SlowBuffer=function(e){+e!=e&&(e=0);return h.alloc(+e)},t.INSPECT_MAX_BYTES=50,h.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=l(),h.poolSize=8192,h._augment=function(e){return e.__proto__=h.prototype,e},h.from=function(e,t,n){return f(null,e,t,n)},h.TYPED_ARRAY_SUPPORT&&(h.prototype.__proto__=Uint8Array.prototype,h.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&h[Symbol.species]===h&&Object.defineProperty(h,Symbol.species,{value:null,configurable:!0})),h.alloc=function(e,t,n){return function(e,t,n,r){return m(t),t<=0?d(e,t):void 0!==n?"string"==typeof r?d(e,t).fill(n,r):d(e,t).fill(n):d(e,t)}(null,e,t,n)},h.allocUnsafe=function(e){return y(null,e)},h.allocUnsafeSlow=function(e){return y(null,e)},h.isBuffer=function(b){return!(null==b||!b._isBuffer)},h.compare=function(a,b){if(!h.isBuffer(a)||!h.isBuffer(b))throw new TypeError("Arguments must be Buffers");if(a===b)return 0;for(var e=a.length,t=b.length,i=0,n=Math.min(e,t);i<n;++i)if(a[i]!==b[i]){e=a[i],t=b[i];break}return e<t?-1:t<e?1:0},h.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},h.concat=function(e,t){if(!c(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return h.alloc(0);var i;if(void 0===t)for(t=0,i=0;i<e.length;++i)t+=e[i].length;var n=h.allocUnsafe(t),r=0;for(i=0;i<e.length;++i){var o=e[i];if(!h.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(n,r),r+=o.length}return n},h.byteLength=O,h.prototype._isBuffer=!0,h.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var i=0;i<e;i+=2)k(this,i,i+1);return this},h.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var i=0;i<e;i+=4)k(this,i,i+3),k(this,i+1,i+2);return this},h.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var i=0;i<e;i+=8)k(this,i,i+7),k(this,i+1,i+6),k(this,i+2,i+5),k(this,i+3,i+4);return this},h.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?R(this,0,e):w.apply(this,arguments)},h.prototype.equals=function(b){if(!h.isBuffer(b))throw new TypeError("Argument must be a Buffer");return this===b||0===h.compare(this,b)},h.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},h.prototype.compare=function(e,t,n,r,o){if(!h.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===o&&(o=this.length),t<0||n>e.length||r<0||o>this.length)throw new RangeError("out of range index");if(r>=o&&t>=n)return 0;if(r>=o)return-1;if(t>=n)return 1;if(this===e)return 0;for(var c=(o>>>=0)-(r>>>=0),l=(n>>>=0)-(t>>>=0),d=Math.min(c,l),f=this.slice(r,o),m=e.slice(t,n),i=0;i<d;++i)if(f[i]!==m[i]){c=f[i],l=m[i];break}return c<l?-1:l<c?1:0},h.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},h.prototype.indexOf=function(e,t,n){return I(this,e,t,n,!0)},h.prototype.lastIndexOf=function(e,t,n){return I(this,e,t,n,!1)},h.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var o=this.length-t;if((void 0===n||n>o)&&(n=o),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var c=!1;;)switch(r){case"hex":return N(this,e,t,n);case"utf8":case"utf-8":return j(this,e,t,n);case"ascii":return T(this,e,t,n);case"latin1":case"binary":return C(this,e,t,n);case"base64":return $(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return E(this,e,t,n);default:if(c)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),c=!0}},h.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var F=4096;function D(e,t,n){var r="";n=Math.min(e.length,n);for(var i=t;i<n;++i)r+=String.fromCharCode(127&e[i]);return r}function _(e,t,n){var r="";n=Math.min(e.length,n);for(var i=t;i<n;++i)r+=String.fromCharCode(e[i]);return r}function M(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var o="",i=t;i<n;++i)o+=K(e[i]);return o}function z(e,t,n){for(var r=e.slice(t,n),o="",i=0;i<r.length;i+=2)o+=String.fromCharCode(r[i]+256*r[i+1]);return o}function L(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function P(e,t,n,r,o,c){if(!h.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<c)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function B(e,t,n,r){t<0&&(t=65535+t+1);for(var i=0,o=Math.min(e.length-n,2);i<o;++i)e[n+i]=(t&255<<8*(r?i:1-i))>>>8*(r?i:1-i)}function W(e,t,n,r){t<0&&(t=4294967295+t+1);for(var i=0,o=Math.min(e.length-n,4);i<o;++i)e[n+i]=t>>>8*(r?i:3-i)&255}function U(e,t,n,r,o,c){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function V(e,t,n,r,c){return c||U(e,0,n,4),o.write(e,t,n,r,23,4),n+4}function G(e,t,n,r,c){return c||U(e,0,n,8),o.write(e,t,n,r,52,8),n+8}h.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),h.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=h.prototype;else{var o=t-e;n=new h(o,void 0);for(var i=0;i<o;++i)n[i]=this[i+e]}return n},h.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||L(e,t,this.length);for(var r=this[e],o=1,i=0;++i<t&&(o*=256);)r+=this[e+i]*o;return r},h.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||L(e,t,this.length);for(var r=this[e+--t],o=1;t>0&&(o*=256);)r+=this[e+--t]*o;return r},h.prototype.readUInt8=function(e,t){return t||L(e,1,this.length),this[e]},h.prototype.readUInt16LE=function(e,t){return t||L(e,2,this.length),this[e]|this[e+1]<<8},h.prototype.readUInt16BE=function(e,t){return t||L(e,2,this.length),this[e]<<8|this[e+1]},h.prototype.readUInt32LE=function(e,t){return t||L(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},h.prototype.readUInt32BE=function(e,t){return t||L(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},h.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||L(e,t,this.length);for(var r=this[e],o=1,i=0;++i<t&&(o*=256);)r+=this[e+i]*o;return r>=(o*=128)&&(r-=Math.pow(2,8*t)),r},h.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||L(e,t,this.length);for(var i=t,r=1,o=this[e+--i];i>0&&(r*=256);)o+=this[e+--i]*r;return o>=(r*=128)&&(o-=Math.pow(2,8*t)),o},h.prototype.readInt8=function(e,t){return t||L(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},h.prototype.readInt16LE=function(e,t){t||L(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},h.prototype.readInt16BE=function(e,t){t||L(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},h.prototype.readInt32LE=function(e,t){return t||L(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},h.prototype.readInt32BE=function(e,t){return t||L(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},h.prototype.readFloatLE=function(e,t){return t||L(e,4,this.length),o.read(this,e,!0,23,4)},h.prototype.readFloatBE=function(e,t){return t||L(e,4,this.length),o.read(this,e,!1,23,4)},h.prototype.readDoubleLE=function(e,t){return t||L(e,8,this.length),o.read(this,e,!0,52,8)},h.prototype.readDoubleBE=function(e,t){return t||L(e,8,this.length),o.read(this,e,!1,52,8)},h.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||P(this,e,t,n,Math.pow(2,8*n)-1,0);var o=1,i=0;for(this[t]=255&e;++i<n&&(o*=256);)this[t+i]=e/o&255;return t+n},h.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||P(this,e,t,n,Math.pow(2,8*n)-1,0);var i=n-1,o=1;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=e/o&255;return t+n},h.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,1,255,0),h.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},h.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,2,65535,0),h.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):B(this,e,t,!0),t+2},h.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,2,65535,0),h.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):B(this,e,t,!1),t+2},h.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,4,4294967295,0),h.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):W(this,e,t,!0),t+4},h.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,4,4294967295,0),h.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):W(this,e,t,!1),t+4},h.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var o=Math.pow(2,8*n-1);P(this,e,t,n,o-1,-o)}var i=0,c=1,sub=0;for(this[t]=255&e;++i<n&&(c*=256);)e<0&&0===sub&&0!==this[t+i-1]&&(sub=1),this[t+i]=(e/c>>0)-sub&255;return t+n},h.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var o=Math.pow(2,8*n-1);P(this,e,t,n,o-1,-o)}var i=n-1,c=1,sub=0;for(this[t+i]=255&e;--i>=0&&(c*=256);)e<0&&0===sub&&0!==this[t+i+1]&&(sub=1),this[t+i]=(e/c>>0)-sub&255;return t+n},h.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,1,127,-128),h.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},h.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,2,32767,-32768),h.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):B(this,e,t,!0),t+2},h.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,2,32767,-32768),h.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):B(this,e,t,!1),t+2},h.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,4,2147483647,-2147483648),h.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):W(this,e,t,!0),t+4},h.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),h.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):W(this,e,t,!1),t+4},h.prototype.writeFloatLE=function(e,t,n){return V(this,e,t,!0,n)},h.prototype.writeFloatBE=function(e,t,n){return V(this,e,t,!1,n)},h.prototype.writeDoubleLE=function(e,t,n){return G(this,e,t,!0,n)},h.prototype.writeDoubleBE=function(e,t,n){return G(this,e,t,!1,n)},h.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var i,o=r-n;if(this===e&&n<t&&t<r)for(i=o-1;i>=0;--i)e[i+t]=this[i+n];else if(o<1e3||!h.TYPED_ARRAY_SUPPORT)for(i=0;i<o;++i)e[i+t]=this[i+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+o),t);return o},h.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var code=e.charCodeAt(0);code<256&&(e=code)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!h.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var i;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(i=t;i<n;++i)this[i]=e;else{var o=h.isBuffer(e)?e:X(new h(e,r).toString()),c=o.length;for(i=0;i<n-t;++i)this[i+t]=o[i%c]}return this};var H=/[^+\/0-9A-Za-z-_]/g;function K(e){return e<16?"0"+e.toString(16):e.toString(16)}function X(e,t){var n;t=t||1/0;for(var r=e.length,o=null,c=[],i=0;i<r;++i){if((n=e.charCodeAt(i))>55295&&n<57344){if(!o){if(n>56319){(t-=3)>-1&&c.push(239,191,189);continue}if(i+1===r){(t-=3)>-1&&c.push(239,191,189);continue}o=n;continue}if(n<56320){(t-=3)>-1&&c.push(239,191,189),o=n;continue}n=65536+(o-55296<<10|n-56320)}else o&&(t-=3)>-1&&c.push(239,191,189);if(o=null,n<128){if((t-=1)<0)break;c.push(n)}else if(n<2048){if((t-=2)<0)break;c.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;c.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;c.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return c}function Y(e){return r.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(H,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function Z(e,t,n,r){for(var i=0;i<r&&!(i+n>=t.length||i>=e.length);++i)t[i+n]=e[i];return i}}).call(this,n(52))},function(e,t,n){"use strict";function r(e,t=!1){console.log(e.toString(t))}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({all_:function(e,t=null,n=!1){const l={x:Object(c.a)(e,"x","all","bool")},d={axis:t,keepDims:n};return r.a.runKernel(o.f,l,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({any_:function(e,t=null,n=!1){const l={x:Object(c.a)(e,"x","any","bool")},d={axis:t,keepDims:n};return r.a.runKernel(o.g,l,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({argMax_:function(e,t=0){const n={x:Object(c.a)(e,"x","argMax")},l={axis:t};return r.a.runKernel(o.h,n,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(370),o=n(967),c=n(798),l=n(430),d=n(368),h=n(378);const f=Object(d.a)({conv1d_:function(e,filter,t,n,d="NWC",f=1,m){const y=Object(r.a)(e,"x","conv1d"),x=Object(r.a)(filter,"filter","conv1d");let v=y,O=!1;2===y.rank&&(O=!0,v=Object(h.a)(y,[1,y.shape[0],y.shape[1]])),o.b(3===v.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${v.rank}.`)),o.b(3===x.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${x.rank}.`)),l.a("conv1d",n,m),o.b(v.shape[2]===x.shape[1],(()=>`Error in conv1d: depth of input (${v.shape[2]}) must match input depth for filter ${x.shape[1]}.`)),o.b(l.i(t,f),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${f}'`)),o.b("NWC"===d,(()=>`Error in conv1d: got dataFormat of ${d} but only NWC is currently supported.`));const w=Object(h.a)(x,[1,x.shape[0],x.shape[1],x.shape[2]]),k=Object(h.a)(v,[v.shape[0],1,v.shape[1],v.shape[2]]),I=[1,t],S=[1,f],N=Object(c.a)(k,w,I,n,"NHWC",S,m);return O?Object(h.a)(N,[N.shape[2],N.shape[3]]):Object(h.a)(N,[N.shape[0],N.shape[2],N.shape[3]])}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(370),o=n(1079),c=n(368);const l=Object(c.a)({conv2dTranspose_:function(e,filter,t,n,c,l){const d=Object(r.a)(e,"x","conv2dTranspose"),h=Object(r.a)(filter,"filter","conv2dTranspose");return Object(o.a)(t,d,h,n,c,"NHWC",l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(371),o=n(367),c=n(967),l=n(430),d=n(368),h=n(378);const f=Object(d.a)({conv2DBackpropInput_:function(e,t,filter,n,d,f="NHWC",m){c.b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let y=e,x=t,v=!1;3===t.rank&&(v=!0,x=Object(h.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),y=[1,e[0],e[1],e[2]]),c.b(4===y.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${y.length}.`)),c.b(4===x.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${x.rank}`)),c.b(4===filter.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${filter.rank}`));const O="NHWC"===f?y[3]:y[1],w="NHWC"===f?x.shape[3]:x.shape[1];c.b(O===filter.shape[2],(()=>`Error in conv2dDerInput: depth of input (${O}) must match input depth for filter ${filter.shape[2]}.`)),c.b(w===filter.shape[3],(()=>`Error in conv2dDerInput: depth of output (${w}) must match output depth for filter ${filter.shape[3]}.`)),l.a("conv2dDerInput",d,m);const k={dy:x,filter:filter},I={strides:n,pad:d,dataFormat:f,dimRoundingMode:m,inputShape:y},S=r.a.runKernel(o.F,k,I);return v?Object(h.a)(S,[S.shape[1],S.shape[2],S.shape[3]]):S}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({log1p_:function(e){const t={x:Object(c.a)(e,"x","log1p")};return r.a.runKernel(o.Eb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({oneHot_:function(e,t,n=1,l=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const d={indices:Object(c.a)(e,"indices","oneHot","int32")},h={depth:t,onValue:n,offValue:l};return r.a.runKernel(o.cc,d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return c}));var r=n(1278);n(1083);class o{constructor(e,t,n,o,c){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const l=c||Math.random();this.random=r.alea(l.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,o,s;do{r=2*this.random()-1,o=2*this.random()-1,s=r*r+o*o}while(s>=1||0===s);const c=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*c,t=this.mean+this.stdDev*o*c,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class c{constructor(e=0,t=1,n,o){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==o&&(o=Math.random()),"number"==typeof o&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=r.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return c}));var r=n(371);n(370),n(967),n(375);function o(){return 32===r.a.backend.floatPrecision()?.001:.1}function c(a,e,t){if(null==t&&(t=o()),!l(a,e,t))throw new Error(`Numbers differ: actual === ${a}, expected === ${e}`)}function l(a,e,t){return!isFinite(a)&&!isFinite(e)||!(isNaN(a)||isNaN(e)||Math.abs(a-e)>t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(784),o=n(368),c=n(1082);const l=Object(o.a)({randomUniform_:function(e,t=0,n=1,o="float32",l){const d=Object(r.a)(e,o),h=new c.b(t,n,null,l);for(let i=0;i<d.values.length;i++)d.values[i]=h.nextValue();return d.toTensor()}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({selu_:function(e){const t={x:Object(c.a)(e,"x","selu")};return r.a.runKernel(o.Ac,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(370),o=n(967),c=n(798),l=n(971),d=n(368),h=n(378);const f=Object(d.a)({separableConv2d_:function(e,t,n,d,f,m=[1,1],y="NHWC"){const x=Object(r.a)(e,"x","separableConv2d"),v=Object(r.a)(t,"depthwiseFilter","separableConv2d"),O=Object(r.a)(n,"pointwiseFilter","separableConv2d");let w=x,k=!1;if(3===x.rank&&(k=!0,w=Object(h.a)(x,[1,x.shape[0],x.shape[1],x.shape[2]])),"NCHW"===y)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");o.b(4===w.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${w.rank}.`)),o.b(4===v.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${v.rank}.`)),o.b(4===O.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${v.rank}.`)),o.b(1===O.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${O.shape[0]}.`)),o.b(1===O.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${O.shape[1]}.`));const I=v.shape[2],S=v.shape[3];o.b(O.shape[2]===I*S,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${I*S}, but got ${O.shape[2]}.`));const N=Object(l.a)(w,v,d,f,y,m),j=Object(c.a)(N,O,1,"valid",y);return k?Object(h.a)(j,[j.shape[1],j.shape[2],j.shape[3]]):j}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({softplus_:function(e){const t={x:Object(c.a)(e,"x","softplus")};return r.a.runKernel(o.Hc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var r=n(796),o=n(522),c=n(1015),l=n(380),d=n(368),h=n(1014),f=n(378),m=n(977),y=n(409),x=n(507),v=n(1012);const O=Object(d.a)({irfft_:function(input){const e=input.shape[input.shape.length-1],t=input.size/e;let n;if(e<=2){const r=Object(f.a)(input,[t,e]);n=Object(v.a)(r)}else{const d=[t,2*(e-1)],O=Object(f.a)(Object(h.a)(input),[t,e]),w=Object(f.a)(Object(c.a)(input),[t,e]),k=Object(m.a)(Object(x.a)(O,[0,1],[t,e-2]),1),I=Object(l.a)(Object(m.a)(Object(x.a)(w,[0,1],[t,e-2]),1),Object(y.a)(-1)),S=Object(o.a)([O,k],1),i=Object(o.a)([w,I],1),N=Object(f.a)(Object(r.a)(S,i),[d[0],d[1]]);n=Object(v.a)(N)}if(n=Object(h.a)(n),3===input.rank&&0!==input.shape[0]){const e=n,t=input.shape[0];n=Object(f.a)(n,[t,n.shape[0]/t,n.shape[1]]),e.dispose()}return n}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368);const h=Object(d.a)({bincount_:function(e,t,n){const d=Object(c.a)(e,"x","bincount"),h=Object(c.a)(t,"weights","bincount");l.b("int32"===d.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${d.dtype}`)),l.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),l.b(h.size===d.size||0===h.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${d.shape}, weights shape: ${h.shape}.`));const f={x:d,weights:h},m={size:n};return r.a.runKernel(o.u,f,m)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({round_:function(e){const t={x:Object(c.a)(e,"x","round")};return r.a.runKernel(o.wc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(371),o=n(367),c=n(967),l=n(430),d=n(368),h=n(378);const f=Object(d.a)({conv2DBackpropFilter_:function(e,t,n,d,f,m="NHWC",y){let x=e;3===e.rank&&(x=Object(h.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let v=t;3===v.rank&&(v=Object(h.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),c.b(4===x.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${x.shape}.`)),c.b(4===v.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${v.shape}.`)),c.b(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const O="NHWC"===m?x.shape[3]:x.shape[1],w="NHWC"===m?v.shape[3]:v.shape[1];c.b(O===n[2],(()=>`Error in conv2dDerFilter: depth of input ${O}) must match input depth in filter (${n[2]}.`)),c.b(w===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${w}) must match output depth for filter (${n[3]}).`)),l.a("conv2dDerFilter",f,y);const k={x:x,dy:v},I={strides:d,pad:f,dataFormat:m,dimRoundingMode:y,filterShape:n};return r.a.runKernel(o.E,k,I)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(370),o=n(967),c=n(970);function l(e,t,n){if(Object(o.d)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const l=Object(r.c)(e,n);if(3!==l.length&&1!==l.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===l.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(c.a)(e,t,l,n)}},function(e,t,n){"use strict";n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return o}));const r=1.7580993408473768,o=1.0507009873554805},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(784);function o(e,t){const n=[];for(let i=0;i<t.length;i++)t[i]&&n.push(i);const o=Object(r.a)(e,"int32"),c=Object(r.a)([n.length,e.length],"int32");for(let i=0;i<n.length;i++){const t=o.indexToLoc(n[i]),r=i*e.length;c.values.set(t,r)}return c.toTensor()}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({sin_:function(e){const t={x:Object(c.a)(e,"x","sin","float32")};return r.a.runKernel(o.Dc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({sinh_:function(e){const t={x:Object(c.a)(e,"x","sinh")};return r.a.runKernel(o.Ec,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({rsqrt_:function(e){const t={x:Object(c.a)(e,"x","rsqrt","float32")};return r.a.runKernel(o.xc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({cosh_:function(e){const t={x:Object(c.a)(e,"x","cosh","float32")};return r.a.runKernel(o.K,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({argMin_:function(e,t=0){const n={x:Object(c.a)(e,"x","argMin")},l={axis:t};return r.a.runKernel(o.i,n,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(413),l=n(370),d=n(368);const h=Object(d.a)({atan2_:function(a,b){let e=Object(l.a)(a,"a","atan2"),t=Object(l.a)(b,"b","atan2");[e,t]=Object(c.makeTypesMatch)(e,t);const n={a:e,b:t};return r.a.runKernel(o.m,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368);const h=Object(d.a)({depthToSpace_:function(e,t,n="NHWC"){const d=Object(c.a)(e,"x","depthToSpace","float32"),h="NHWC"===n?d.shape[1]:d.shape[2],f="NHWC"===n?d.shape[2]:d.shape[3],m="NHWC"===n?d.shape[3]:d.shape[1];l.b(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),l.b(h*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${h} and ${t}  for depthToSpace with input shape\n    ${d.shape}`)),l.b(f*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${f} and ${t} for depthToSpace with input shape\n        ${d.shape}`)),l.b(m%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${m} for depthToSpace with input shape ${d.shape}`));const y={x:d},x={blockSize:t,dataFormat:n};return r.a.runKernel(o.O,y,x)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368),h=n(378);const f=Object(d.a)({dilation2d_:function(e,filter,t,n,d=[1,1],f="NHWC"){const m=Object(c.a)(e,"x","dilation2d"),y=Object(c.a)(filter,"filter","dilation2d");l.b(3===m.rank||4===m.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${m.rank}.`)),l.b(3===y.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${y.rank}.`)),l.b("NHWC"===f,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${f}`));let x=m,v=!1;3===m.rank&&(x=Object(h.a)(m,[1,m.shape[0],m.shape[1],m.shape[2]]),v=!0);const O={x:x,filter:y},w={strides:t,pad:n,dilations:d},k=r.a.runKernel(o.T,O,w);return v?Object(h.a)(k,[k.shape[1],k.shape[2],k.shape[3]]):k}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(413),o=n(370),c=n(399),l=n(972),d=n(368),h=n(517),f=n(410);const m=Object(d.a)({divNoNan_:function(a,b){let e=Object(o.a)(a,"a","div"),t=Object(o.a)(b,"b","div");[e,t]=Object(r.makeTypesMatch)(e,t);const n=Object(c.a)(e,t),d=Object(f.a)(n),m=Object(l.a)(t,d);return Object(h.a)(m,d,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(370),o=n(967),c=n(801),l=n(368),d=n(378);const h=Object(l.a)({dot_:function(e,t){const n=Object(r.a)(e,"t1","dot"),l=Object(r.a)(t,"t2","dot");o.b(!(1!==n.rank&&2!==n.rank||1!==l.rank&&2!==l.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${l.rank}.`));const h=1===n.rank?n.size:n.shape[1],f=1===l.rank?l.size:l.shape[0];if(o.b(h===f,(()=>`Error in dot: inner dimensions of inputs must match, but got ${h} and ${f}.`)),1===n.rank&&1===l.rank){const e=Object(d.a)(n,[1,-1]),t=Object(d.a)(l,[-1,1]),r=Object(c.a)(e,t);return Object(d.a)(r,[])}if(1===n.rank&&2===l.rank){const e=Object(d.a)(n,[1,-1]),t=Object(d.a)(l,[l.shape[0],l.shape[1]]),r=Object(c.a)(e,t);return Object(d.a)(r,[r.size])}if(2===n.rank&&1===l.rank){const e=Object(d.a)(l,[-1,1]),t=Object(c.a)(n,e);return Object(d.a)(t,[t.size])}{const e=Object(d.a)(l,[l.shape[0],l.shape[1]]);return Object(c.a)(n,e)}}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368),h=n(378);const f=Object(d.a)({localResponseNormalization_:function(e,t=5,n=1,d=1,f=.5){const m=Object(c.a)(e,"x","localResponseNormalization");l.b(4===m.rank||3===m.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${m.rank}.`)),l.b(l.v(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let y=m,x=!1;3===m.rank&&(x=!0,y=Object(h.a)(m,[1,m.shape[0],m.shape[1],m.shape[2]]));const v={x:y},O={depthRadius:t,bias:n,alpha:d,beta:f},w=r.a.runKernel(o.xb,v,O);return x?Object(h.a)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(370),o=n(403),c=n(800),l=n(982),d=n(1026),h=n(368);const f=Object(h.a)({logicalXor_:function(a,b){const e=Object(r.a)(a,"a","logicalXor","bool"),t=Object(r.a)(b,"b","logicalXor","bool");return Object(o.assertAndGetBroadcastShape)(e.shape,t.shape),Object(c.a)(Object(d.a)(a,b),Object(l.a)(Object(c.a)(a,b)))}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368);const h=Object(d.a)({mirrorPad_:function(e,t,n){l.b("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const d=Object(c.a)(e,"x","mirrorPad");if(0===d.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");l.b(t.length===d.rank,(()=>`Padding doesn't match input. Must be ${d.rank}. Got ${t.length}.`));const h="reflect"===n?1:0;for(let i=0;i<d.rank;i++)l.b(2===t[i].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),l.b(t[i][0]>=0&&t[i][0]<=d.shape[i]-h&&t[i][1]>=0&&t[i][1]<=d.shape[i]-h,(()=>`Padding in dimension ${i} cannot be greater than or equal to ${d.shape[i]-h} or less than 0 for input of shape ${d.shape}`));const f={paddings:t,mode:n},m={x:d};return r.a.runKernel(o.Tb,m,f)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(413),l=n(370),d=n(368);const h=Object(d.a)({mod_:function(a,b){let e=Object(l.a)(a,"a","mod"),t=Object(l.a)(b,"b","mod");[e,t]=Object(c.makeTypesMatch)(e,t);const n={a:e,b:t};return r.a.runKernel(o.Ub,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return x}));var r=n(370),o=n(967),c=n(998),l=n(983),d=n(430),h=n(1004),f=n(368),m=n(378),y=n(981);const x=Object(f.a)({pool_:function(input,e,t,n,f,x,v){null==f&&(f=[1,1]),null==x&&(x=1),0===n&&(n="valid");const O=Object(r.a)(input,"x","maxPool");let w=O,k=!1;3===O.rank&&(k=!0,w=Object(m.a)(O,[1,O.shape[0],O.shape[1],O.shape[2]])),o.b(d.i(x,f),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${x} and dilations '${f}'`));const I=d.f(w.shape,e,x,f,n),S=[I.dilationHeight,I.dilationWidth];let N;N="same"===n?function(e,t){const n=e.map(((s,i)=>s+(s-1)*(t[i]-1))).map((s=>s-1)),r=n.map((s=>Math.floor(s/2))),o=n.map(((s,i)=>s-r[i]));return n.map(((e,i)=>[r[i],o[i]]))}([I.filterHeight,I.filterWidth],S):[[0,0],[0,0]];const j=1===S[0]&&1===S[1],[T,C]=function(e,t,n){const r=n.map((b=>b[0])),o=n.map((b=>b[1])),c=e.concat(r,o),l=t.map(((b,i)=>(b-c[i]%b)%b)),d=o.map(((s,i)=>s+l[i])),h=t.map(((e,i)=>[r[i],d[i]])),f=t.map(((e,i)=>[0,l[i]]));return[h,f]}([I.inHeight,I.inWidth],S,N),$=j?n:"valid",E=j?w:Object(y.a)(w,S,T),A=("avg"===t?()=>Object(c.a)(E,e,x,$,v):()=>Object(h.a)(E,e,x,$,v))(),R=j?A:Object(l.a)(A,S,C);return k?Object(m.a)(R,[R.shape[1],R.shape[2],R.shape[3]]):R}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(391),d=n(368);const h=Object(d.a)({prod_:function(e,t=null,n=!1){let d=Object(c.a)(e,"x","prod");"bool"===d.dtype&&(d=Object(l.a)(d,"int32"));const h={x:d},f={axis:t,keepDims:n};return r.a.runKernel(o.ic,h,f)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({topk_:function(e,t=1,n=!0){const l=Object(c.a)(e,"x","topk");if(0===l.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const d=l.shape[l.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>d)throw new Error(`'k' passed to topk() must be <= the last dimension (${d}) but got ${t}`);const h={x:l},f={k:t,sorted:n},[m,y]=r.a.runKernel(o.cd,h,f);return{values:m,indices:y}}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368);const h=Object(d.a)({unique_:function(e,t=0){const n=Object(c.a)(e,"x","unique","string_or_numeric");Object(l.b)(n.rank>0,(()=>"The input tensor must be at least 1D"));const d={x:n},h={axis:t},[f,m]=r.a.runKernel(o.fd,d,h);return{values:f,indices:m}}})},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"d",(function(){return l})),n.d(t,"f",(function(){return h})),n.d(t,"c",(function(){return f})),n.d(t,"e",(function(){return m})),n.d(t,"a",(function(){return y}));var r=n(366);function o(input,e){return c(input,e)}function c(input,e,t=new Map,n=new Set){if(null==input)return null;if("function"==typeof Blob&&input instanceof Blob)return input.slice();if(n.has(input))throw new Error("Circular references are not supported.");if(t.has(input))return t.get(input);const r=e(input);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(m(input)){const r=Array.isArray(input)?[]:{};n.add(input);for(const o in input){const l=c(input[o],e,t,n);r[o]=l}return n.delete(input),input.__proto__&&(r.__proto__=input.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${input}`)}return t.set(input,r.value),r.value}function l(e,t=h){return d(e,t)}function d(e,t,n=new Set){const input=e[0];if(n.has(input))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(m(input)){const r=Array.isArray(input)?[]:{};n.add(input);for(const o in input){const c=d(e.map((e=>e[o])),t,n);r[o]=c}return n.delete(input),r}throw new Error(`Can't recurse into non-iterable type: ${input}`)}return r.value}function h(e){return null===e?null:m(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function f(input,e){const t=new Map;c(input,e,t);for(const e of Array.from(t.keys())){const n=t.get(e);if(r.yf.isPromise(n)){const r=await n;t.set(e,r)}}return c(input,e,t)}function m(e){let t=!1;if(r.Wd().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(584);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof r.cd)&&!(e instanceof Promise)&&!t)}function y(e){return null==e||(null===(t=e)||"object"!=typeof t&&"function"!=typeof t)||Array.isArray(e)||"object"==typeof e&&e instanceof r.cd||r.yf.isTypedArray(e);var t}},,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},function(e,t,n){"use strict";n.d(t,"a",(function(){return y}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(430),h=n(391),f=n(368),m=n(378);const y=Object(f.a)({avgPool3d_:function(e,t,n,f,y,x="NDHWC"){const v=Object(c.a)(e,"x","avgPool3d","float32");let O=v,w=!1;4===v.rank&&(w=!0,O=Object(m.a)(v,[1,v.shape[0],v.shape[1],v.shape[2],v.shape[3]])),l.b(5===O.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${O.rank}.`)),l.b("NDHWC"===x,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${x}`)),Object(d.a)("avgPool3d",f,y);const k={x:O},I={filterSize:t,strides:n,pad:f,dimRoundingMode:y,dataFormat:x};let S=r.a.runKernel(o.p,k,I);return S=Object(h.a)(S,O.dtype),w?Object(m.a)(S,[S.shape[1],S.shape[2],S.shape[3],S.shape[4]]):S}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368);const h=Object(d.a)({clipByValue_:function(e,t,n){const d=Object(c.a)(e,"x","clipByValue");l.b(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const h={x:d},f={clipValueMin:t,clipValueMax:n};return r.a.runKernel(o.z,h,f)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(430),h=n(368),f=n(378);const m=Object(h.a)({conv3d_:function(e,filter,t,n,h="NDHWC",m=[1,1,1]){const y=Object(c.a)(e,"x","conv3d"),x=Object(c.a)(filter,"filter","conv3d");let v=y,O=!1;4===y.rank&&(O=!0,v=Object(f.a)(y,[1,y.shape[0],y.shape[1],y.shape[2],y.shape[3]])),l.b(5===v.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${v.rank}.`)),l.b(5===x.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${x.rank}.`)),l.b(v.shape[4]===x.shape[3],(()=>`Error in conv3d: depth of input (${v.shape[4]}) must match input depth for filter ${x.shape[3]}.`)),l.b(Object(d.i)(t,m),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${m}'`)),l.b("NDHWC"===h,(()=>`Error in conv3d: got dataFormat of ${h} but only NDHWC is currently supported.`));const w={x:v,filter:x},k={strides:t,pad:n,dataFormat:h,dilations:m},I=r.a.runKernel(o.G,w,k);return O?Object(f.a)(I,[I.shape[1],I.shape[2],I.shape[3],I.shape[4]]):I}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(967),l=n(368),d=n(378);const h=Object(l.a)({conv3DBackpropInput_:function(e,t,filter,n,l){c.b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let h=e,f=t,m=!1;4===t.rank&&(m=!0,f=Object(d.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),h=[1,e[0],e[1],e[2],e[3]]);const y=h[4],x=f.shape[4];c.b(5===h.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${h.length}.`)),c.b(5===f.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${f.rank}`)),c.b(5===filter.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${filter.rank}`)),c.b(y===filter.shape[3],(()=>`Error in conv3dDerInput: depth of input (${y}) must match input depth for filter ${filter.shape[3]}.`)),c.b(x===filter.shape[4],(()=>`Error in conv3dDerInput: depth of output (${x}) must match output depth for filter ${filter.shape[4]}.`));const v={dy:f,filter:filter},O={pad:l,strides:n,inputShape:h},w=r.a.runKernel(o.I,v,O);return m?Object(d.a)(w,[w.shape[1],w.shape[2],w.shape[3],w.shape[4]]):w}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return v}));var r=n(506),o=n(370),c=n(391),l=n(580),d=n(815),h=n(816),f=n(380),m=n(368),y=n(404),x=n(417);const v=Object(m.a)({logSoftmax_:function(e,t=-1){const n=Object(o.a)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const m=Object(r.a)(((e,n)=>{const r=Object(h.a)(e,t,!0),o=Object(y.a)(e,r),m=Object(y.a)(Object(c.a)(o,"float32"),Object(d.a)(Object(x.a)(Object(l.a)(o),t,!0)));n([m]);return{value:m,gradFunc:(e,n)=>{const[r]=n,o=Object(l.a)(r);return Object(y.a)(e,Object(f.a)(Object(x.a)(e,t,!0),o))}}}));return m(n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(430),h=n(368),f=n(378);const m=Object(h.a)({maxPool3d_:function(e,t=[1,1,1],n,h,m,y="NDHWC"){const x=Object(c.a)(e,"x","maxPool3d");let v=x,O=!1;4===x.rank&&(O=!0,v=Object(f.a)(x,[1,x.shape[0],x.shape[1],x.shape[2],x.shape[3]])),l.b(5===v.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${v.rank}.`)),l.b("NDHWC"===y,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${y}`)),Object(d.a)("maxPool3d",h,m);const w={x:v},k={filterSize:t,strides:n,pad:h,dimRoundingMode:m,dataFormat:y},I=r.a.runKernel(o.Lb,w,k);return O?Object(f.a)(I,[I.shape[1],I.shape[2],I.shape[3],I.shape[4]]):I}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({onesLike_:function(e){const t={x:Object(c.a)(e,"x","onesLike")};return r.a.runKernel(o.dc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({softmax_:function(e,t=-1){const n=Object(c.a)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const l={logits:n},d={dim:t};return r.a.runKernel(o.Gc,l,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({tanh_:function(e){const t={x:Object(c.a)(e,"x","tanh","float32")};return r.a.runKernel(o.ad,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(784),o=n(368),c=n(1082);const l=Object(o.a)({truncatedNormal_:function(e,t=0,n=1,o,l){if(null!=o&&"bool"===o)throw new Error("Unsupported data type $ { dtype }");const d=new c.a(t,n,o,!0,l),h=Object(r.a)(e,o);for(let i=0;i<h.values.length;i++)h.values[i]=d.nextValue();return h.toTensor()}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368),h=n(378);const f=Object(d.a)({resizeNearestNeighbor_:function(e,t,n=!1,d=!1){const f=Object(c.a)(e,"images","resizeNearestNeighbor");l.b(3===f.rank||4===f.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${f.rank}.`)),l.b(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),l.b("float32"===f.dtype||"int32"===f.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),l.b(!1===d||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let m=f,y=!1;3===f.rank&&(y=!0,m=Object(h.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]]));const[]=t,x={images:m},v={alignCorners:n,halfPixelCenters:d,size:t},O=r.a.runKernel(o.sc,x,v);return y?Object(h.a)(O,[O.shape[1],O.shape[2],O.shape[3]]):O}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368),h=n(378);const f=Object(d.a)({resizeBilinear_:function(e,t,n=!1,d=!1){const f=Object(c.a)(e,"images","resizeBilinear");l.b(3===f.rank||4===f.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${f.rank}.`)),l.b(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),l.b(!1===d||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let m=f,y=!1;3===f.rank&&(y=!0,m=Object(h.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]]));const[]=t,x={images:m},v={alignCorners:n,halfPixelCenters:d,size:t},O=r.a.runKernel(o.qc,x,v);return y?Object(h.a)(O,[O.shape[1],O.shape[2],O.shape[3]]):O}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(368),l=n(378);const d=Object(c.a)({depthwiseConv2dNativeBackpropInput_:function(e,t,filter,n,c,d=[1,1],h){let f=t,m=!1;3===t.rank&&(m=!0,f=Object(l.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const y={dy:f,filter:filter},x={strides:n,pad:c,dimRoundingMode:h,dilations:d,inputShape:e},v=r.a.runKernel(o.R,y,x);return m?Object(l.a)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(368),l=n(378);const d=Object(c.a)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,c,d,h=[1,1],f){let m=e;3===e.rank&&(m=Object(l.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let y=t;3===y.rank&&(y=Object(l.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const x={x:m,dy:y},v={strides:c,pad:d,dimRoundingMode:f,dilations:h,filterShape:n};return r.a.runKernel(o.Q,x,v)}})},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return o}));const r="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:void 0!==e?e:e=>e();function o(){return new Promise((e=>r((()=>e()))))}}).call(this,n(271).setImmediate)},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({acos_:function(e){const t={x:Object(c.a)(e,"x","acos")};return r.a.runKernel(o.b,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({acosh_:function(e){const t={x:Object(c.a)(e,"x","acosh")};return r.a.runKernel(o.c,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({asin_:function(e){const t={x:Object(c.a)(e,"x","asin")};return r.a.runKernel(o.j,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({asinh_:function(e){const t={x:Object(c.a)(e,"x","asinh")};return r.a.runKernel(o.k,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({atan_:function(e){const t={x:Object(c.a)(e,"x","atan")};return r.a.runKernel(o.l,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({atanh_:function(e){const t={x:Object(c.a)(e,"x","atanh")};return r.a.runKernel(o.n,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({ceil_:function(e){const t={x:Object(c.a)(e,"x","ceil","float32")};return r.a.runKernel(o.y,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(391),h=n(368);const f=Object(h.a)({erf_:function(e){let t=Object(c.a)(e,"x","erf");l.b("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Object(d.a)(t,"float32"));const n={x:t};return r.a.runKernel(o.ab,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({expm1_:function(e){const t={x:Object(c.a)(e,"x","expm1")};return r.a.runKernel(o.db,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({isFinite_:function(e){const t={x:Object(c.a)(e,"x","isFinite")};return r.a.runKernel(o.ub,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({isInf_:function(e){const t={x:Object(c.a)(e,"x","isInf")};return r.a.runKernel(o.vb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({isNaN_:function(e){const t={x:Object(c.a)(e,"x","isNaN")};return r.a.runKernel(o.wb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(506),o=n(370),c=n(380),l=n(469),d=n(368),h=n(978),f=n(1087);const m=Object(d.a)({logSigmoid_:function(e){const t=Object(o.a)(e,"x","logSigmoid"),n=Object(r.a)((e=>({value:Object(l.a)(Object(f.a)(Object(l.a)(e))),gradFunc:t=>Object(c.a)(t,Object(h.a)(Object(l.a)(e)))})));return n(t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({reciprocal_:function(e){const t={x:Object(c.a)(e,"x","reciprocal")};return r.a.runKernel(o.mc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({sign_:function(e){const t={x:Object(c.a)(e,"x","sign")};return r.a.runKernel(o.Cc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({stridedSlice_:function(e,t,n,l,d=0,h=0,f=0,m=0,y=0){const x={x:Object(c.a)(e,"x","stridedSlice","string_or_numeric")},v={begin:t,end:n,strides:l,beginMask:d,endMask:h,ellipsisMask:f,newAxisMask:m,shrinkAxisMask:y};return r.a.runKernel(o.Tc,x,v)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({tan_:function(e){const t={x:Object(c.a)(e,"x","tan","float32")};return r.a.runKernel(o.Zc,t)}})},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return R})),n.d(t,"i",(function(){return D})),n.d(t,"c",(function(){return _})),n.d(t,"f",(function(){return M})),n.d(t,"e",(function(){return P})),n.d(t,"d",(function(){return B})),n.d(t,"k",(function(){return U})),n.d(t,"g",(function(){return V})),n.d(t,"h",(function(){return G})),n.d(t,"j",(function(){return H})),n.d(t,"b",(function(){return K}));var r=n(366),o=n(1286),c=n(984),l=n(425),d=n(1287),h=n(1288),f=n(1289),m=n(1290),y=n(1291),x=n(1292),v=n(1293),O=n(1294),w=n(1295),k=n(1296),I=n(1297),S=n(1298),N=n(1299),j=n(1300),T=n(1301),C=n(1302),$=n(1303),E=n(1304),A=n(1305);class R{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[d,h,f,m,y,x,v,O,w,k,I,S,N,j,T,C,$,E,A].map((e=>e.json)));this.opMappers=e.reduce(((map,e)=>(map[e.tfOpName]=e,map)),{})}transformGraph(e,t={}){const n=e.node,r=[],o=[],c=[],d=n.reduce(((map,e)=>(map[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(map[e.name]):"Const"===e.op?o.push(map[e.name]):null!=e.input&&0!==e.input.length||c.push(map[e.name]),map)),{});let h=[];const f=[];let m={},y={};null!=t&&(m=this.mapSignatureEntries(t.inputs),y=this.mapSignatureEntries(t.outputs));const x=Object.keys(d);x.forEach((e=>{const t=d[e];t.inputNames.forEach(((e,n)=>{const[r,,o]=Object(l.b)(e),c=d[r];if(null!=c.outputs){const e=c.outputs.indexOf(o);if(-1!==e){const o=`${r}:${e}`;t.inputNames[n]=o}}t.inputs.push(c),c.children.push(t)}))})),0===Object.keys(y).length?x.forEach((e=>{const t=d[e];0===t.children.length&&f.push(t)})):Object.keys(y).forEach((e=>{const[t]=Object(l.b)(e),n=d[t];null!=n&&(n.signatureKey=y[e],f.push(n))})),Object.keys(m).length>0?Object.keys(m).forEach((e=>{const[t]=Object(l.b)(e),n=d[t];n&&(n.signatureKey=m[e],h.push(n))})):h=r;let v={};null!=e.library&&null!=e.library.function&&(v=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const O={nodes:d,inputs:h,outputs:f,weights:o,placeholders:r,signature:t,functions:v};return c.length>0&&(O.initNodes=c),O}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Object(c.a)(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((input=>input.startsWith("^")?input.substr(1):input)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((map,param)=>(map[param.name]={type:param.type,inputIndexStart:param.start,inputIndexEnd:param.end},map)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((map,param)=>{const t=param.type;let n;switch(param.type){case"string":n=D(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=D(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"string[]":n=G(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=G(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"number":n=M(e.attr,param.tfName,param.defaultValue||0),void 0===n&&param.tfDeprecatedName&&(n=M(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"number[]":n=V(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=V(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"bool":n=_(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=_(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"bool[]":n=K(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=K(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"shape":n=U(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=U(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"shape[]":n=H(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=H(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"dtype":n=P(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=P(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"dtype[]":n=B(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=B(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"func":n=L(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=L(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${param.type} for op: ${e.op}`)}return map[param.name]={value:n,type:t},map}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((map,e)=>(map[e.name]=this.mapNode(e),"Const"===e.op&&n.push(map[e.name]),map)),{}));const o=[],c=[];e.signature.inputArg.forEach((e=>{const[t]=Object(l.b)(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:z(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,o.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[o,,c]=Object(l.b)(e),d=r[o];if(null!=d.outputs){const e=d.outputs.indexOf(c);if(-1!==e){const r=`${o}:${e}`;t.inputNames[n]=r}}t.inputs.push(d),d.children.push(t)}))}));const d=e.ret;e.signature.outputArg.forEach((output=>{const[e,t]=Object(l.b)(d[output.name]),n=r[e];null!=n&&(n.defaultOutput=t,c.push(n))}));const h=this.mapArgsToSignature(e);return{nodes:r,inputs:o,outputs:c,weights:n,placeholders:[],signature:h}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((map,e)=>(map[e.name]=this.mapArgToTensorInfo(e),map)),{}),outputs:e.signature.outputArg.reduce(((map,t)=>(map[t.name]=this.mapArgToTensorInfo(t,e.ret),map)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function F(s,t){const n=Array.isArray(s)?String.fromCharCode.apply(null,s):function(text){const t=Object(r.Wd)().global;if(void 0!==t.atob)return t.atob(text);if(void 0!==e)return new e(text,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(s);return t?n:n.toLowerCase()}function D(e,t,n,r=!1){const param=e[t];return null!=param?F(param.s,r):n}function _(e,t,n){const param=e[t];return param?param.b:n}function M(e,t,n){const param=e[t]||{},r=null!=param.i?param.i:null!=param.f?param.f:n;return"number"==typeof r?r:parseInt(r,10)}function z(e){switch("string"==typeof e&&(e=o.a[e]),e){case o.a.DT_FLOAT:case o.a.DT_HALF:return"float32";case o.a.DT_INT32:case o.a.DT_INT64:case o.a.DT_INT8:case o.a.DT_UINT8:return"int32";case o.a.DT_BOOL:return"bool";case o.a.DT_DOUBLE:return"float32";case o.a.DT_STRING:return"string";default:return null}}function L(e,t,n){const param=e[t];return param&&param.func?param.func.name:n}function P(e,t,n){const param=e[t];return param&&param.type?z(param.type):n}function B(e,t,n){const param=e[t];return param&&param.list&&param.list.type?param.list.type.map((e=>z(e))):n}function W(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function U(e,t,n){const param=e[t];return param&&param.shape?W(param.shape):n}function V(e,t,n){const param=e[t];return param?((param.list.f&&param.list.f.length?param.list.f:param.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function G(e,t,n,r=!1){const param=e[t];return param&&param.list&&param.list.s?param.list.s.map((e=>F(e,r))):n}function H(e,t,n){const param=e[t];return param&&param.list&&param.list.shape?param.list.shape.map((e=>W(e))):n}function K(e,t,n){const param=e[t];return param&&param.list&&param.list.b?param.list.b:n}}).call(this,n(1072).Buffer)},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368);const h=Object(d.a)({addN_:function(e){l.b(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),l.b(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,i)=>Object(c.a)(e,`tensors${i}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!l.a(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const d=t;return r.a.runKernel(o.e,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({maxPoolWithArgmax_:function(e,t,n,l,d=!1){const h={x:Object(c.a)(e,"x","maxPoolWithArgmax")},f={filterSize:t,strides:n,pad:l,includeBatchInIndex:d},m=r.a.runKernel(o.Ob,h,f);return{result:m[0],indexes:m[1]}}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(371),o=n(367);function c(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const c={start:e,stop:t,num:n};return r.a.runKernel(o.Cb,{},c)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(368),d=n(378);const h=Object(l.a)({multinomial_:function(e,t,n,l=!1){const h=Object(c.a)(e,"logits","multinomial"),f=h.size,m=h.rank;if(f<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${f}.`);if(m>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${m}`);n=n||Math.random();const y={logits:1===m?Object(d.a)(h,[1,-1]):h},x={numSamples:t,seed:n,normalized:l},v=r.a.runKernel(o.Vb,y,x);return 1===m?Object(d.a)(v,[v.size]):v}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(1094),o=n(370);const c=async function(e){const t=Object(o.a)(e,"condition","whereAsync","bool"),n=await t.data(),c=Object(r.a)(t.shape,n);return e!==t&&t.dispose(),c}},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(373),o=n(370),c=n(967);const l=async function(e,t){const n=Object(o.a)(e,"x","setdiff1d"),l=Object(o.a)(t,"y","setdiff1d");c.b(n.dtype===l.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${l.dtype}).`)),c.b(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),c.b(1===l.rank,(()=>`y should be 1D tensor, but got y (${l.shape}).`));const d=await n.data(),h=await l.data(),f=new Set(h);let m=0;for(let i=0;i<d.length;i++)f.has(d[i])||m++;const y=new r.b([m],n.dtype),x=new r.b([m],"int32");for(let i=0,p=0;i<d.length;i++)f.has(d[i])||(y.values[p]=d[i],x.values[p]=i,p++);return[y.toTensor(),x.toTensor()]}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({einsum_:function(e,...t){const n=t.map(((e,i)=>Object(c.a)(e,`tensors${i}`,"einsum"))),l={equation:e};return r.a.runKernel(o.W,n,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(967),d=n(368);const h=Object(d.a)({denseBincount_:function(e,t,n,d=!1){const h=Object(c.a)(e,"x","denseBincount"),f=Object(c.a)(t,"weights","denseBincount");l.b("int32"===h.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${h.dtype}`)),l.b(h.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${h.rank}.`)),l.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),l.b(f.size===h.size||0===f.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${h.shape}, weights shape: ${f.shape}.`));const m={x:h,weights:f},y={size:n,binaryOutput:d};return r.a.runKernel(o.N,m,y)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(371),o=n(367),c=n(370),l=n(368),d=n(980);const h=Object(l.a)({scatterND_:function(e,t,n){const l=Object(c.a)(e,"indices","scatterND","int32"),h=Object(c.a)(t,"updates","scatterND");d.b(h,l,n);const f={indices:l,updates:h},m={shape:n};return r.a.runKernel(o.yc,f,m)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({gatherND_:function(e,t){const n=Object(c.a)(t,"indices","gatherND","int32"),l={params:Object(c.a)(e,"x","gatherND","string_or_numeric"),indices:n};return r.a.runKernel(o.nb,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367),c=n(370),l=n(368);const d=Object(l.a)({broadcastArgs_:function(e,t){const n=Object(c.a)(e,"s0","broadcastArgs","int32"),l=Object(c.a)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==l.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${l.rank}`);const d={s0:n,s1:l};return r.a.runKernel(o.v,d)}})},function(e,t,n){var r=n(1306),o=n(1307),c=n(1308),l=n(1309),d=n(1310),h=n(1311),f=n(1312);f.alea=r,f.xor128=o,f.xorwow=c,f.xorshift7=l,f.xor4096=d,f.tychei=h,e.exports=f},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(371),o=n(367);var c=n(370),l=n(368);const d=Object(l.a)({sparseToDense_:function(e,t,n,l=0){const d=Object(c.a)(e,"sparseIndices","sparseToDense","int32"),h=Object(c.a)(t,"sparseValues","sparseToDense"),f=Object(c.a)(l,"defaultValue","sparseToDense",h.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const o=e.rank>0?e.shape[0]:1,c=e.rank>1?e.shape[1]:1;if(n.length!==c)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${c}.`);const l=t.size;if(0!==t.rank&&(1!==t.rank||l!==o))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${o}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(d,h,n,f);const m={sparseIndices:d,sparseValues:h,defaultValue:f},y={outputShape:n};return r.a.runKernel(o.Nc,m,y)}})},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t){e.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function o(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=o;var c={},l={};function d(e,t){var n,r,o;return t?(o=0<=(e>>>=0)&&e<256)&&(r=l[e])?r:(n=f(e,(0|e)<0?-1:0,!0),o&&(l[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(r=c[e])?r:(n=f(e,e<0?-1:0,!1),o&&(c[e]=n),n)}function h(e,t){if(isNaN(e))return t?S:I;if(t){if(e<0)return S;if(e>=O)return $}else{if(e<=-w)return E;if(e+1>=w)return C}return e<0?h(-e,t).neg():f(e%v|0,e/v|0,t)}function f(e,t,n){return new r(e,t,n)}r.fromInt=d,r.fromNumber=h,r.fromBits=f;var m=Math.pow;function y(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return I;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var p;if((p=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===p)return y(e.substring(1),t,n).neg();for(var r=h(m(n,8)),o=I,i=0;i<e.length;i+=8){var c=Math.min(8,e.length-i),l=parseInt(e.substring(i,i+c),n);if(c<8){var d=h(m(n,c));o=o.mul(d).add(h(l))}else o=(o=o.mul(r)).add(h(l))}return o.unsigned=t,o}function x(e,t){return"number"==typeof e?h(e,t):"string"==typeof e?y(e,t):f(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=y,r.fromValue=x;var v=4294967296,O=v*v,w=O/2,k=d(1<<24),I=d(0);r.ZERO=I;var S=d(0,!0);r.UZERO=S;var N=d(1);r.ONE=N;var j=d(1,!0);r.UONE=j;var T=d(-1);r.NEG_ONE=T;var C=f(-1,2147483647,!1);r.MAX_VALUE=C;var $=f(-1,-1,!0);r.MAX_UNSIGNED_VALUE=$;var E=f(0,-2147483648,!1);r.MIN_VALUE=E;var A=r.prototype;A.toInt=function(){return this.unsigned?this.low>>>0:this.low},A.toNumber=function(){return this.unsigned?(this.high>>>0)*v+(this.low>>>0):this.high*v+(this.low>>>0)},A.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(E)){var t=h(e),div=this.div(t),n=div.mul(t).sub(this);return div.toString(e)+n.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=h(m(e,6),this.unsigned),o=this,c="";;){var l=o.div(r),d=(o.sub(l.mul(r)).toInt()>>>0).toString(e);if((o=l).isZero())return d+c;for(;d.length<6;)d="0"+d;c=""+d+c}},A.getHighBits=function(){return this.high},A.getHighBitsUnsigned=function(){return this.high>>>0},A.getLowBits=function(){return this.low},A.getLowBitsUnsigned=function(){return this.low>>>0},A.getNumBitsAbs=function(){if(this.isNegative())return this.eq(E)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},A.isZero=function(){return 0===this.high&&0===this.low},A.eqz=A.isZero,A.isNegative=function(){return!this.unsigned&&this.high<0},A.isPositive=function(){return this.unsigned||this.high>=0},A.isOdd=function(){return 1==(1&this.low)},A.isEven=function(){return 0==(1&this.low)},A.equals=function(e){return o(e)||(e=x(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},A.eq=A.equals,A.notEquals=function(e){return!this.eq(e)},A.neq=A.notEquals,A.ne=A.notEquals,A.lessThan=function(e){return this.comp(e)<0},A.lt=A.lessThan,A.lessThanOrEqual=function(e){return this.comp(e)<=0},A.lte=A.lessThanOrEqual,A.le=A.lessThanOrEqual,A.greaterThan=function(e){return this.comp(e)>0},A.gt=A.greaterThan,A.greaterThanOrEqual=function(e){return this.comp(e)>=0},A.gte=A.greaterThanOrEqual,A.ge=A.greaterThanOrEqual,A.compare=function(e){if(o(e)||(e=x(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},A.comp=A.compare,A.negate=function(){return!this.unsigned&&this.eq(E)?E:this.not().add(N)},A.neg=A.negate,A.add=function(e){o(e)||(e=x(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,c=65535&this.low,l=e.high>>>16,d=65535&e.high,h=e.low>>>16,m=0,y=0,v=0,O=0;return v+=(O+=c+(65535&e.low))>>>16,y+=(v+=r+h)>>>16,m+=(y+=n+d)>>>16,m+=t+l,f((v&=65535)<<16|(O&=65535),(m&=65535)<<16|(y&=65535),this.unsigned)},A.subtract=function(e){return o(e)||(e=x(e)),this.add(e.neg())},A.sub=A.subtract,A.multiply=function(e){if(this.isZero())return I;if(o(e)||(e=x(e)),n)return f(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return I;if(this.eq(E))return e.isOdd()?E:I;if(e.eq(E))return this.isOdd()?E:I;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(k)&&e.lt(k))return h(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,c=this.low>>>16,l=65535&this.low,d=e.high>>>16,m=65535&e.high,y=e.low>>>16,v=65535&e.low,O=0,w=0,S=0,N=0;return S+=(N+=l*v)>>>16,w+=(S+=c*v)>>>16,S&=65535,w+=(S+=l*y)>>>16,O+=(w+=r*v)>>>16,w&=65535,O+=(w+=c*y)>>>16,w&=65535,O+=(w+=l*m)>>>16,O+=t*v+r*y+c*m+l*d,f((S&=65535)<<16|(N&=65535),(O&=65535)<<16|(w&=65535),this.unsigned)},A.mul=A.multiply,A.divide=function(e){if(o(e)||(e=x(e)),e.isZero())throw Error("division by zero");var t,r,c;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?f((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?S:I;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return S;if(e.gt(this.shru(1)))return j;c=S}else{if(this.eq(E))return e.eq(N)||e.eq(T)?E:e.eq(E)?N:(t=this.shr(1).div(e).shl(1)).eq(I)?e.isNegative()?N:T:(r=this.sub(e.mul(t)),c=t.add(r.div(e)));if(e.eq(E))return this.unsigned?S:I;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();c=I}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var l=Math.ceil(Math.log(t)/Math.LN2),d=l<=48?1:m(2,l-48),y=h(t),v=y.mul(e);v.isNegative()||v.gt(r);)v=(y=h(t-=d,this.unsigned)).mul(e);y.isZero()&&(y=N),c=c.add(y),r=r.sub(v)}return c},A.div=A.divide,A.modulo=function(e){return o(e)||(e=x(e)),n?f((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},A.mod=A.modulo,A.rem=A.modulo,A.not=function(){return f(~this.low,~this.high,this.unsigned)},A.and=function(e){return o(e)||(e=x(e)),f(this.low&e.low,this.high&e.high,this.unsigned)},A.or=function(e){return o(e)||(e=x(e)),f(this.low|e.low,this.high|e.high,this.unsigned)},A.xor=function(e){return o(e)||(e=x(e)),f(this.low^e.low,this.high^e.high,this.unsigned)},A.shiftLeft=function(e){return o(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?f(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):f(0,this.low<<e-32,this.unsigned)},A.shl=A.shiftLeft,A.shiftRight=function(e){return o(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?f(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):f(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},A.shr=A.shiftRight,A.shiftRightUnsigned=function(e){if(o(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?f(this.low>>>e|t<<32-e,t>>>e,this.unsigned):f(32===e?t:t>>>e-32,0,this.unsigned)},A.shru=A.shiftRightUnsigned,A.shr_u=A.shiftRightUnsigned,A.toSigned=function(){return this.unsigned?f(this.low,this.high,!1):this},A.toUnsigned=function(){return this.unsigned?this:f(this.low,this.high,!0)},A.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},A.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},A.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},function(e,t,n){"use strict";t.byteLength=function(e){var t=d(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){var t,i,n=d(e),r=n[0],l=n[1],h=new c(function(e,t,n){return 3*(t+n)/4-n}(0,r,l)),f=0,m=l>0?r-4:r;for(i=0;i<m;i+=4)t=o[e.charCodeAt(i)]<<18|o[e.charCodeAt(i+1)]<<12|o[e.charCodeAt(i+2)]<<6|o[e.charCodeAt(i+3)],h[f++]=t>>16&255,h[f++]=t>>8&255,h[f++]=255&t;2===l&&(t=o[e.charCodeAt(i)]<<2|o[e.charCodeAt(i+1)]>>4,h[f++]=255&t);1===l&&(t=o[e.charCodeAt(i)]<<10|o[e.charCodeAt(i+1)]<<4|o[e.charCodeAt(i+2)]>>2,h[f++]=t>>8&255,h[f++]=255&t);return h},t.fromByteArray=function(e){for(var t,n=e.length,o=n%3,c=[],l=16383,i=0,d=n-o;i<d;i+=l)c.push(h(e,i,i+l>d?d:i+l));1===o?(t=e[n-1],c.push(r[t>>2]+r[t<<4&63]+"==")):2===o&&(t=(e[n-2]<<8)+e[n-1],c.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"="));return c.join("")};for(var r=[],o=[],c="undefined"!=typeof Uint8Array?Uint8Array:Array,code="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,l=code.length;i<l;++i)r[i]=code[i],o[code.charCodeAt(i)]=i;function d(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function h(e,t,n){for(var o,c,output=[],i=t;i<n;i+=3)o=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(255&e[i+2]),output.push(r[(c=o)>>18&63]+r[c>>12&63]+r[c>>6&63]+r[63&c]);return output.join("")}o["-".charCodeAt(0)]=62,o["_".charCodeAt(0)]=63},function(e,t){t.read=function(e,t,n,r,o){var c,l,d=8*o-r-1,h=(1<<d)-1,f=h>>1,m=-7,i=n?o-1:0,y=n?-1:1,s=e[t+i];for(i+=y,c=s&(1<<-m)-1,s>>=-m,m+=d;m>0;c=256*c+e[t+i],i+=y,m-=8);for(l=c&(1<<-m)-1,c>>=-m,m+=r;m>0;l=256*l+e[t+i],i+=y,m-=8);if(0===c)c=1-f;else{if(c===h)return l?NaN:1/0*(s?-1:1);l+=Math.pow(2,r),c-=f}return(s?-1:1)*l*Math.pow(2,c-r)},t.write=function(e,t,n,r,o,c){var l,d,h,f=8*c-o-1,m=(1<<f)-1,y=m>>1,rt=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,i=r?0:c-1,x=r?1:-1,s=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(d=isNaN(t)?1:0,l=m):(l=Math.floor(Math.log(t)/Math.LN2),t*(h=Math.pow(2,-l))<1&&(l--,h*=2),(t+=l+y>=1?rt/h:rt*Math.pow(2,1-y))*h>=2&&(l++,h/=2),l+y>=m?(d=0,l=m):l+y>=1?(d=(t*h-1)*Math.pow(2,o),l+=y):(d=t*Math.pow(2,y-1)*Math.pow(2,o),l=0));o>=8;e[n+i]=255&d,i+=x,d/=256,o-=8);for(l=l<<o|d,f+=o;f>0;e[n+i]=255&l,i+=x,l/=256,f-=8);e[n+i-x]|=128*s}},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t,n){"use strict";(function(e){var t=n(445);const r=()=>n(578);let o;class c{constructor(){this.util=n(579),this.textEncoder=new this.util.TextEncoder}fetch(path,e){return null!=Object(t.b)().global.fetch?Object(t.b)().global.fetch(path,e):(null==o&&(o=r()),o(path,e))}now(){const time=e.hrtime();return 1e3*time[0]+time[1]/1e6}encode(text,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(text)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}Object(t.b)().get("IS_NODE")&&Object(t.b)().setPlatform("node",new c)}).call(this,n(110))},function(e,t,n){var r=n(1279),o=n(1280),c=n(1281),l=n(1282),d=n(1283),h=n(1284),f=n(1285);f.alea=r,f.xor128=o,f.xorwow=c,f.xorshift7=l,f.xor4096=d,f.tychei=h,e.exports=f},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t,n=this,r=(t=4022871197,function(data){data=data.toString();for(var i=0;i<data.length;i++){var e=.02519603282416938*(t+=data.charCodeAt(i));e-=t=e>>>0,t=(e*=t)>>>0,t+=4294967296*(e-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function d(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function h(e,t){var n=new l(e),r=t&&t.state,o=n.next;return o.int32=function(){return 4294967296*n.next()|0},o.double=function(){return o()+11102230246251565e-32*(2097152*o()|0)},o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(396)&&n(470)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.alea=h}(0,e,n(396))}).call(this,n(429)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function d(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function h(e,t){var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(396)&&n(470)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xor128=h}(0,e,n(396))}).call(this,n(429)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function d(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function h(e,t){var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(396)&&n(470)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xorwow=h}(0,e,n(396))}).call(this,n(429)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this;t.next=function(){var e,n,r=t.x,i=t.i;return e=r[i],n=(e^=e>>>7)^e<<24,n^=(e=r[i+1&7])^e>>>10,n^=(e=r[i+3&7])^e>>>3,n^=(e=r[i+4&7])^e<<7,e=r[i+7&7],n^=(e^=e<<13)^e<<9,r[i]=n,t.i=i+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function d(e,t){return t.x=e.x.slice(),t.i=e.i,t}function h(e,t){null==e&&(e=+new Date);var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&(r.x&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(396)&&n(470)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xorshift7=h}(0,e,n(396))}).call(this,n(429)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this;t.next=function(){var e,n,r=t.w,o=t.X,i=t.i;return t.w=r=r+1640531527|0,n=o[i+34&127],e=o[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=o[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,i,o,c,l=[],d=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,d=Math.max(d,t.length)),i=0,o=-32;o<d;++o)t&&(r^=t.charCodeAt((o+32)%t.length)),0===o&&(c=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,o>=0&&(c=c+1640531527|0,i=0==(n=l[127&o]^=r+c)?i+1:0);for(i>=128&&(l[127&(t&&t.length||0)]=-1),i=127,o=512;o>0;--o)r=l[i+34&127],n=l[i=i+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,l[i]=r^n;e.w=c,e.X=l,e.i=i}(t,e)}function d(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function h(e,t){null==e&&(e=+new Date);var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&(r.X&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(396)&&n(470)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xor4096=h}(0,e,n(396))}).call(this,n(429)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this,n="";t.next=function(){var b=t.b,e=t.c,n=t.d,a=t.a;return b=b<<25^b>>>7^e,e=e-n|0,n=n<<24^n>>>8^a,a=a-b|0,t.b=b=b<<20^b>>>12^e,t.c=e=e-n|0,t.d=n<<16^e>>>16^a,t.a=a-b|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function d(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function h(e,t){var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(396)&&n(470)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.tychei=h}(0,e,n(396))}).call(this,n(429)(e))},function(e,t,n){var r;!function(o,c){var l,d=this,h=256,f=c.pow(h,6),m=c.pow(2,52),y=2*m,mask=255;function x(e,t,n){var r=[],x=k(w((t=1==t?{entropy:!0}:t||{}).entropy?[e,I(o)]:null==e?function(){try{var e;return l&&(e=l.randomBytes)?e=e(h):(e=new Uint8Array(h),(d.crypto||d.msCrypto).getRandomValues(e)),I(e)}catch(e){var t=d.navigator,n=t&&t.plugins;return[+new Date,d,n,d.screen,I(o)]}}():e,3),r),S=new v(r),N=function(){for(var e=S.g(6),t=f,n=0;e<m;)e=(e+n)*h,t*=h,n=S.g(1);for(;e>=y;)e/=2,t/=2,n>>>=1;return(e+n)/t};return N.int32=function(){return 0|S.g(4)},N.quick=function(){return S.g(4)/4294967296},N.double=N,k(I(S.S),o),(t.pass||n||function(e,t,n,r){return r&&(r.S&&O(r,S),e.state=function(){return O(S,{})}),n?(c.random=e,t):e})(N,x,"global"in t?t.global:this==c,t.state)}function v(e){var t,n=e.length,r=this,i=0,o=r.i=r.j=0,s=r.S=[];for(n||(e=[n++]);i<h;)s[i]=i++;for(i=0;i<h;i++)s[i]=s[o=mask&o+e[i%n]+(t=s[i])],s[o]=t;(r.g=function(e){for(var t,n=0,i=r.i,o=r.j,s=r.S;e--;)t=s[i=mask&i+1],n=n*h+s[mask&(s[i]=s[o=mask&o+t])+(s[o]=t)];return r.i=i,r.j=o,n})(h)}function O(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function w(e,t){var n,r=[],o=typeof e;if(t&&"object"==o)for(n in e)try{r.push(w(e[n],t-1))}catch(e){}return r.length?r:"string"==o?e:e+"\0"}function k(e,t){for(var n,r=e+"",o=0;o<r.length;)t[mask&o]=mask&(n^=19*t[mask&o])+r.charCodeAt(o++);return I(t)}function I(a){return String.fromCharCode.apply(0,a)}if(c.seedrandom=x,k(c.random(),o),e.exports){e.exports=x;try{l=n(582)}catch(e){}}else void 0===(r=function(){return x}.call(t,n,t,e))||(e.exports=r)}([],Math)},function(e,t,n){"use strict";var r,o;n.d(t,"a",(function(){return r})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(r||(r={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(o||(o={}))},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}]},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t,n=this,r=(t=4022871197,function(data){data=String(data);for(var i=0;i<data.length;i++){var e=.02519603282416938*(t+=data.charCodeAt(i));e-=t=e>>>0,t=(e*=t)>>>0,t+=4294967296*(e-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function d(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function h(e,t){var n=new l(e),r=t&&t.state,o=n.next;return o.int32=function(){return 4294967296*n.next()|0},o.double=function(){return o()+11102230246251565e-32*(2097152*o()|0)},o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(396)&&n(470)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.alea=h}(0,e,n(396))}).call(this,n(429)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function d(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function h(e,t){var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(396)&&n(470)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xor128=h}(0,e,n(396))}).call(this,n(429)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function d(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function h(e,t){var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(396)&&n(470)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xorwow=h}(0,e,n(396))}).call(this,n(429)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this;t.next=function(){var e,n,r=t.x,i=t.i;return e=r[i],n=(e^=e>>>7)^e<<24,n^=(e=r[i+1&7])^e>>>10,n^=(e=r[i+3&7])^e>>>3,n^=(e=r[i+4&7])^e<<7,e=r[i+7&7],n^=(e^=e<<13)^e<<9,r[i]=n,t.i=i+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function d(e,t){return t.x=e.x.slice(),t.i=e.i,t}function h(e,t){null==e&&(e=+new Date);var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&(r.x&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(396)&&n(470)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xorshift7=h}(0,e,n(396))}).call(this,n(429)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this;t.next=function(){var e,n,r=t.w,o=t.X,i=t.i;return t.w=r=r+1640531527|0,n=o[i+34&127],e=o[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=o[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,i,o,c,l=[],d=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,d=Math.max(d,t.length)),i=0,o=-32;o<d;++o)t&&(r^=t.charCodeAt((o+32)%t.length)),0===o&&(c=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,o>=0&&(c=c+1640531527|0,i=0==(n=l[127&o]^=r+c)?i+1:0);for(i>=128&&(l[127&(t&&t.length||0)]=-1),i=127,o=512;o>0;--o)r=l[i+34&127],n=l[i=i+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,l[i]=r^n;e.w=c,e.X=l,e.i=i}(t,e)}function d(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function h(e,t){null==e&&(e=+new Date);var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&(r.X&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(396)&&n(470)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xor4096=h}(0,e,n(396))}).call(this,n(429)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this,n="";t.next=function(){var b=t.b,e=t.c,n=t.d,a=t.a;return b=b<<25^b>>>7^e,e=e-n|0,n=n<<24^n>>>8^a,a=a-b|0,t.b=b=b<<20^b>>>12^e,t.c=e=e-n|0,t.d=n<<16^e>>>16^a,t.a=a-b|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function d(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function h(e,t){var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(396)&&n(470)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.tychei=h}(0,e,n(396))}).call(this,n(429)(e))},function(e,t,n){var r;!function(o,c,l){var d,h=256,f=l.pow(h,6),m=l.pow(2,52),y=2*m,mask=255;function x(e,t,n){var r=[],x=k(w((t=1==t?{entropy:!0}:t||{}).entropy?[e,I(c)]:null==e?function(){try{var e;return d&&(e=d.randomBytes)?e=e(h):(e=new Uint8Array(h),(o.crypto||o.msCrypto).getRandomValues(e)),I(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,I(c)]}}():e,3),r),S=new v(r),N=function(){for(var e=S.g(6),t=f,n=0;e<m;)e=(e+n)*h,t*=h,n=S.g(1);for(;e>=y;)e/=2,t/=2,n>>>=1;return(e+n)/t};return N.int32=function(){return 0|S.g(4)},N.quick=function(){return S.g(4)/4294967296},N.double=N,k(I(S.S),c),(t.pass||n||function(e,t,n,r){return r&&(r.S&&O(r,S),e.state=function(){return O(S,{})}),n?(l.random=e,t):e})(N,x,"global"in t?t.global:this==l,t.state)}function v(e){var t,n=e.length,r=this,i=0,o=r.i=r.j=0,s=r.S=[];for(n||(e=[n++]);i<h;)s[i]=i++;for(i=0;i<h;i++)s[i]=s[o=mask&o+e[i%n]+(t=s[i])],s[o]=t;(r.g=function(e){for(var t,n=0,i=r.i,o=r.j,s=r.S;e--;)t=s[i=mask&i+1],n=n*h+s[mask&(s[i]=s[o=mask&o+t])+(s[o]=t)];return r.i=i,r.j=o,n})(h)}function O(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function w(e,t){var n,r=[],o=typeof e;if(t&&"object"==o)for(n in e)try{r.push(w(e[n],t-1))}catch(e){}return r.length?r:"string"==o?e:e+"\0"}function k(e,t){for(var n,r=e+"",o=0;o<r.length;)t[mask&o]=mask&(n^=19*t[mask&o])+r.charCodeAt(o++);return I(t)}function I(a){return String.fromCharCode.apply(0,a)}if(k(l.random(),c),e.exports){e.exports=x;try{d=n(583)}catch(e){}}else void 0===(r=function(){return x}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return l}));var r=n(366),o=n(958),c=n(1314);class l extends o.a{decodeUTF8(){return new d(this)}}class d extends c.a{constructor(e){super(),this.upstream=e,this.impl=new h(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class h extends o.b{constructor(e){if(super(),this.upstream=e,Object(r.Wd)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(585);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const t=await this.upstream.next();let n,text;return!t.done&&(n=t.value,text=Object(r.Wd)().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(e.from(n.buffer)),this.outputQueue.push(text),!0)}}}).call(this,n(1072).Buffer)},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(958);class o extends r.a{split(e){return new c(this,e)}}class c extends o{constructor(e,t){super(),this.upstream=e,this.impl=new l(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class l extends r.b{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const line of t.slice(0,-1))this.outputQueue.push(line);return this.carryover=t[t.length-1],!0}}},function(e,t,n){var r=n(1316),o=n(1317),c=n(1318),l=n(1319),d=n(1320),h=n(1321),f=n(1322);f.alea=r,f.xor128=o,f.xorwow=c,f.xorshift7=l,f.xor4096=d,f.tychei=h,e.exports=f},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t,n=this,r=(t=4022871197,function(data){data=data.toString();for(var i=0;i<data.length;i++){var e=.02519603282416938*(t+=data.charCodeAt(i));e-=t=e>>>0,t=(e*=t)>>>0,t+=4294967296*(e-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function d(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function h(e,t){var n=new l(e),r=t&&t.state,o=n.next;return o.int32=function(){return 4294967296*n.next()|0},o.double=function(){return o()+11102230246251565e-32*(2097152*o()|0)},o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(396)&&n(470)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.alea=h}(0,e,n(396))}).call(this,n(429)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function d(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function h(e,t){var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(396)&&n(470)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xor128=h}(0,e,n(396))}).call(this,n(429)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function d(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function h(e,t){var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(396)&&n(470)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xorwow=h}(0,e,n(396))}).call(this,n(429)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this;t.next=function(){var e,n,r=t.x,i=t.i;return e=r[i],n=(e^=e>>>7)^e<<24,n^=(e=r[i+1&7])^e>>>10,n^=(e=r[i+3&7])^e>>>3,n^=(e=r[i+4&7])^e<<7,e=r[i+7&7],n^=(e^=e<<13)^e<<9,r[i]=n,t.i=i+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function d(e,t){return t.x=e.x.slice(),t.i=e.i,t}function h(e,t){null==e&&(e=+new Date);var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&(r.x&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(396)&&n(470)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xorshift7=h}(0,e,n(396))}).call(this,n(429)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this;t.next=function(){var e,n,r=t.w,o=t.X,i=t.i;return t.w=r=r+1640531527|0,n=o[i+34&127],e=o[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=o[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,i,o,c,l=[],d=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,d=Math.max(d,t.length)),i=0,o=-32;o<d;++o)t&&(r^=t.charCodeAt((o+32)%t.length)),0===o&&(c=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,o>=0&&(c=c+1640531527|0,i=0==(n=l[127&o]^=r+c)?i+1:0);for(i>=128&&(l[127&(t&&t.length||0)]=-1),i=127,o=512;o>0;--o)r=l[i+34&127],n=l[i=i+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,l[i]=r^n;e.w=c,e.X=l,e.i=i}(t,e)}function d(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function h(e,t){null==e&&(e=+new Date);var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&(r.X&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(396)&&n(470)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xor4096=h}(0,e,n(396))}).call(this,n(429)(e))},function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this,n="";t.next=function(){var b=t.b,e=t.c,n=t.d,a=t.a;return b=b<<25^b>>>7^e,e=e-n|0,n=n<<24^n>>>8^a,a=a-b|0,t.b=b=b<<20^b>>>12^e,t.c=e=e-n|0,t.d=n<<16^e>>>16^a,t.a=a-b|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function d(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function h(e,t){var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(396)&&n(470)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.tychei=h}(0,e,n(396))}).call(this,n(429)(e))},function(e,t,n){var r;!function(o,c){var l,d=this,h=256,f=c.pow(h,6),m=c.pow(2,52),y=2*m,mask=255;function x(e,t,n){var r=[],x=k(w((t=1==t?{entropy:!0}:t||{}).entropy?[e,I(o)]:null==e?function(){try{var e;return l&&(e=l.randomBytes)?e=e(h):(e=new Uint8Array(h),(d.crypto||d.msCrypto).getRandomValues(e)),I(e)}catch(e){var t=d.navigator,n=t&&t.plugins;return[+new Date,d,n,d.screen,I(o)]}}():e,3),r),S=new v(r),N=function(){for(var e=S.g(6),t=f,n=0;e<m;)e=(e+n)*h,t*=h,n=S.g(1);for(;e>=y;)e/=2,t/=2,n>>>=1;return(e+n)/t};return N.int32=function(){return 0|S.g(4)},N.quick=function(){return S.g(4)/4294967296},N.double=N,k(I(S.S),o),(t.pass||n||function(e,t,n,r){return r&&(r.S&&O(r,S),e.state=function(){return O(S,{})}),n?(c.random=e,t):e})(N,x,"global"in t?t.global:this==c,t.state)}function v(e){var t,n=e.length,r=this,i=0,o=r.i=r.j=0,s=r.S=[];for(n||(e=[n++]);i<h;)s[i]=i++;for(i=0;i<h;i++)s[i]=s[o=mask&o+e[i%n]+(t=s[i])],s[o]=t;(r.g=function(e){for(var t,n=0,i=r.i,o=r.j,s=r.S;e--;)t=s[i=mask&i+1],n=n*h+s[mask&(s[i]=s[o=mask&o+t])+(s[o]=t)];return r.i=i,r.j=o,n})(h)}function O(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function w(e,t){var n,r=[],o=typeof e;if(t&&"object"==o)for(n in e)try{r.push(w(e[n],t-1))}catch(e){}return r.length?r:"string"==o?e:e+"\0"}function k(e,t){for(var n,r=e+"",o=0;o<r.length;)t[mask&o]=mask&(n^=19*t[mask&o])+r.charCodeAt(o++);return I(t)}function I(a){return String.fromCharCode.apply(0,a)}if(c.seedrandom=x,k(c.random(),o),e.exports){e.exports=x;try{l=n(587)}catch(e){}}else void 0===(r=function(){return x}.call(t,n,t,e))||(e.exports=r)}([],Math)}])]);